# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _ollypy
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


TEXTLEN = _ollypy.TEXTLEN
ARGLEN = _ollypy.ARGLEN
USERLEN = _ollypy.USERLEN
SHORTLEN = _ollypy.SHORTLEN
BLACK = _ollypy.BLACK
BLUE = _ollypy.BLUE
GREEN = _ollypy.GREEN
CYAN = _ollypy.CYAN
RED = _ollypy.RED
MAGENTA = _ollypy.MAGENTA
BROWN = _ollypy.BROWN
LIGHTGRAY = _ollypy.LIGHTGRAY
DARKGRAY = _ollypy.DARKGRAY
LIGHTBLUE = _ollypy.LIGHTBLUE
LIGHTGREEN = _ollypy.LIGHTGREEN
LIGHTCYAN = _ollypy.LIGHTCYAN
LIGHTRED = _ollypy.LIGHTRED
LIGHTMAGENTA = _ollypy.LIGHTMAGENTA
YELLOW = _ollypy.YELLOW
WHITE = _ollypy.WHITE
MINT = _ollypy.MINT
SKYBLUE = _ollypy.SKYBLUE
IVORY = _ollypy.IVORY
GRAY = _ollypy.GRAY
NCOLORS = _ollypy.NCOLORS
BKTRANSP = _ollypy.BKTRANSP
BKBLACK = _ollypy.BKBLACK
BKGRAY = _ollypy.BKGRAY
BKWHITE = _ollypy.BKWHITE
BKCYAN = _ollypy.BKCYAN
BKGREEN = _ollypy.BKGREEN
BKRED = _ollypy.BKRED
BKYELLOW = _ollypy.BKYELLOW
BLACKWHITE = _ollypy.BLACKWHITE
BLUEGOLD = _ollypy.BLUEGOLD
SKYWIND = _ollypy.SKYWIND
NIGHTSTARS = _ollypy.NIGHTSTARS
SCHEME4 = _ollypy.SCHEME4
SCHEME5 = _ollypy.SCHEME5
SCHEME6 = _ollypy.SCHEME6
SCHEME7 = _ollypy.SCHEME7
FIXEDFONT = _ollypy.FIXEDFONT
TERMINAL6 = _ollypy.TERMINAL6
FIXEDSYS = _ollypy.FIXEDSYS
COURIERFONT = _ollypy.COURIERFONT
LUCIDACONS = _ollypy.LUCIDACONS
FONT5 = _ollypy.FONT5
FONT6 = _ollypy.FONT6
FONT7 = _ollypy.FONT7
MAINFONT = _ollypy.MAINFONT
SYSFONT = _ollypy.SYSFONT
INFOFONT = _ollypy.INFOFONT
ADC_DEFAULT = _ollypy.ADC_DEFAULT
ADC_DIFFMOD = _ollypy.ADC_DIFFMOD
ADC_NOMODNAME = _ollypy.ADC_NOMODNAME
ADC_VALID = _ollypy.ADC_VALID
ADC_INMODULE = _ollypy.ADC_INMODULE
ADC_SAMEMOD = _ollypy.ADC_SAMEMOD
ADC_SYMBOL = _ollypy.ADC_SYMBOL
ADC_JUMP = _ollypy.ADC_JUMP
ADC_OFFSET = _ollypy.ADC_OFFSET
ADC_STRING = _ollypy.ADC_STRING
ADC_ENTRY = _ollypy.ADC_ENTRY
ADC_UPPERCASE = _ollypy.ADC_UPPERCASE
ADC_WIDEFORM = _ollypy.ADC_WIDEFORM
ADC_NONTRIVIAL = _ollypy.ADC_NONTRIVIAL
ADC_DYNAMIC = _ollypy.ADC_DYNAMIC
PLAINASCII = _ollypy.PLAINASCII
DIACRITICAL = _ollypy.DIACRITICAL
RAREASCII = _ollypy.RAREASCII
MAXCMDSIZE = _ollypy.MAXCMDSIZE
NSEQ = _ollypy.NSEQ
NMODELS = _ollypy.NMODELS
DIA_ASKGLOBAL = _ollypy.DIA_ASKGLOBAL
DIA_HEXONLY = _ollypy.DIA_HEXONLY
DIA_ALIGNED = _ollypy.DIA_ALIGNED
DIA_DEFHEX = _ollypy.DIA_DEFHEX
DIA_DEFASCII = _ollypy.DIA_DEFASCII
DIA_DEFUNICODE = _ollypy.DIA_DEFUNICODE
DIA_SEARCH = _ollypy.DIA_SEARCH
DIA_HISTORY = _ollypy.DIA_HISTORY
ANIMATE_OFF = _ollypy.ANIMATE_OFF
ANIMATE_IN = _ollypy.ANIMATE_IN
ANIMATE_OVER = _ollypy.ANIMATE_OVER
ANIMATE_RET = _ollypy.ANIMATE_RET
ANIMATE_SKPRET = _ollypy.ANIMATE_SKPRET
ANIMATE_USER = _ollypy.ANIMATE_USER
ANIMATE_TRIN = _ollypy.ANIMATE_TRIN
ANIMATE_TROVER = _ollypy.ANIMATE_TROVER
ANIMATE_STOP = _ollypy.ANIMATE_STOP
class t_hexstr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_hexstr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_hexstr, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _ollypy.t_hexstr_n_set
    __swig_getmethods__["n"] = _ollypy.t_hexstr_n_get
    if _newclass:n = _swig_property(_ollypy.t_hexstr_n_get, _ollypy.t_hexstr_n_set)
    __swig_setmethods__["data"] = _ollypy.t_hexstr_data_set
    __swig_getmethods__["data"] = _ollypy.t_hexstr_data_get
    if _newclass:data = _swig_property(_ollypy.t_hexstr_data_get, _ollypy.t_hexstr_data_set)
    __swig_setmethods__["mask"] = _ollypy.t_hexstr_mask_set
    __swig_getmethods__["mask"] = _ollypy.t_hexstr_mask_get
    if _newclass:mask = _swig_property(_ollypy.t_hexstr_mask_get, _ollypy.t_hexstr_mask_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_hexstr(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_hexstr
    __del__ = lambda self : None;
t_hexstr_swigregister = _ollypy.t_hexstr_swigregister
t_hexstr_swigregister(t_hexstr)

class t_asmmodel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_asmmodel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_asmmodel, name)
    __repr__ = _swig_repr
    __swig_setmethods__["code"] = _ollypy.t_asmmodel_code_set
    __swig_getmethods__["code"] = _ollypy.t_asmmodel_code_get
    if _newclass:code = _swig_property(_ollypy.t_asmmodel_code_get, _ollypy.t_asmmodel_code_set)
    __swig_setmethods__["mask"] = _ollypy.t_asmmodel_mask_set
    __swig_getmethods__["mask"] = _ollypy.t_asmmodel_mask_get
    if _newclass:mask = _swig_property(_ollypy.t_asmmodel_mask_get, _ollypy.t_asmmodel_mask_set)
    __swig_setmethods__["length"] = _ollypy.t_asmmodel_length_set
    __swig_getmethods__["length"] = _ollypy.t_asmmodel_length_get
    if _newclass:length = _swig_property(_ollypy.t_asmmodel_length_get, _ollypy.t_asmmodel_length_set)
    __swig_setmethods__["jmpsize"] = _ollypy.t_asmmodel_jmpsize_set
    __swig_getmethods__["jmpsize"] = _ollypy.t_asmmodel_jmpsize_get
    if _newclass:jmpsize = _swig_property(_ollypy.t_asmmodel_jmpsize_get, _ollypy.t_asmmodel_jmpsize_set)
    __swig_setmethods__["jmpoffset"] = _ollypy.t_asmmodel_jmpoffset_set
    __swig_getmethods__["jmpoffset"] = _ollypy.t_asmmodel_jmpoffset_get
    if _newclass:jmpoffset = _swig_property(_ollypy.t_asmmodel_jmpoffset_get, _ollypy.t_asmmodel_jmpoffset_set)
    __swig_setmethods__["jmppos"] = _ollypy.t_asmmodel_jmppos_set
    __swig_getmethods__["jmppos"] = _ollypy.t_asmmodel_jmppos_get
    if _newclass:jmppos = _swig_property(_ollypy.t_asmmodel_jmppos_get, _ollypy.t_asmmodel_jmppos_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_asmmodel(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_asmmodel
    __del__ = lambda self : None;
t_asmmodel_swigregister = _ollypy.t_asmmodel_swigregister
t_asmmodel_swigregister(t_asmmodel)

class t_extmodel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_extmodel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_extmodel, name)
    __repr__ = _swig_repr
    __swig_setmethods__["code"] = _ollypy.t_extmodel_code_set
    __swig_getmethods__["code"] = _ollypy.t_extmodel_code_get
    if _newclass:code = _swig_property(_ollypy.t_extmodel_code_get, _ollypy.t_extmodel_code_set)
    __swig_setmethods__["mask"] = _ollypy.t_extmodel_mask_set
    __swig_getmethods__["mask"] = _ollypy.t_extmodel_mask_get
    if _newclass:mask = _swig_property(_ollypy.t_extmodel_mask_get, _ollypy.t_extmodel_mask_set)
    __swig_setmethods__["length"] = _ollypy.t_extmodel_length_set
    __swig_getmethods__["length"] = _ollypy.t_extmodel_length_get
    if _newclass:length = _swig_property(_ollypy.t_extmodel_length_get, _ollypy.t_extmodel_length_set)
    __swig_setmethods__["jmpsize"] = _ollypy.t_extmodel_jmpsize_set
    __swig_getmethods__["jmpsize"] = _ollypy.t_extmodel_jmpsize_get
    if _newclass:jmpsize = _swig_property(_ollypy.t_extmodel_jmpsize_get, _ollypy.t_extmodel_jmpsize_set)
    __swig_setmethods__["jmpoffset"] = _ollypy.t_extmodel_jmpoffset_set
    __swig_getmethods__["jmpoffset"] = _ollypy.t_extmodel_jmpoffset_get
    if _newclass:jmpoffset = _swig_property(_ollypy.t_extmodel_jmpoffset_get, _ollypy.t_extmodel_jmpoffset_set)
    __swig_setmethods__["jmppos"] = _ollypy.t_extmodel_jmppos_set
    __swig_getmethods__["jmppos"] = _ollypy.t_extmodel_jmppos_get
    if _newclass:jmppos = _swig_property(_ollypy.t_extmodel_jmppos_get, _ollypy.t_extmodel_jmppos_set)
    __swig_setmethods__["isany"] = _ollypy.t_extmodel_isany_set
    __swig_getmethods__["isany"] = _ollypy.t_extmodel_isany_get
    if _newclass:isany = _swig_property(_ollypy.t_extmodel_isany_get, _ollypy.t_extmodel_isany_set)
    __swig_setmethods__["cmdoffset"] = _ollypy.t_extmodel_cmdoffset_set
    __swig_getmethods__["cmdoffset"] = _ollypy.t_extmodel_cmdoffset_get
    if _newclass:cmdoffset = _swig_property(_ollypy.t_extmodel_cmdoffset_get, _ollypy.t_extmodel_cmdoffset_set)
    __swig_setmethods__["ramask"] = _ollypy.t_extmodel_ramask_set
    __swig_getmethods__["ramask"] = _ollypy.t_extmodel_ramask_get
    if _newclass:ramask = _swig_property(_ollypy.t_extmodel_ramask_get, _ollypy.t_extmodel_ramask_set)
    __swig_setmethods__["rbmask"] = _ollypy.t_extmodel_rbmask_set
    __swig_getmethods__["rbmask"] = _ollypy.t_extmodel_rbmask_get
    if _newclass:rbmask = _swig_property(_ollypy.t_extmodel_rbmask_get, _ollypy.t_extmodel_rbmask_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_extmodel(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_extmodel
    __del__ = lambda self : None;
t_extmodel_swigregister = _ollypy.t_extmodel_swigregister
t_extmodel_swigregister(t_extmodel)

NBAR = _ollypy.NBAR
BAR_PRESSED = _ollypy.BAR_PRESSED
BAR_DISABLED = _ollypy.BAR_DISABLED
BAR_NOSORT = _ollypy.BAR_NOSORT
BAR_NORESIZE = _ollypy.BAR_NORESIZE
BAR_BUTTON = _ollypy.BAR_BUTTON
BAR_SHIFTSEL = _ollypy.BAR_SHIFTSEL
CAPT_FREE = _ollypy.CAPT_FREE
TABLE_DIR = _ollypy.TABLE_DIR
TABLE_COPYMENU = _ollypy.TABLE_COPYMENU
TABLE_SORTMENU = _ollypy.TABLE_SORTMENU
TABLE_APPMENU = _ollypy.TABLE_APPMENU
TABLE_WIDECOL = _ollypy.TABLE_WIDECOL
TABLE_USERAPP = _ollypy.TABLE_USERAPP
TABLE_USERDEF = _ollypy.TABLE_USERDEF
TABLE_NOHSCR = _ollypy.TABLE_NOHSCR
TABLE_SAVEPOS = _ollypy.TABLE_SAVEPOS
TABLE_CPU = _ollypy.TABLE_CPU
TABLE_FASTSEL = _ollypy.TABLE_FASTSEL
TABLE_COLSEL = _ollypy.TABLE_COLSEL
TABLE_SAVEAPP = _ollypy.TABLE_SAVEAPP
TABLE_HILMENU = _ollypy.TABLE_HILMENU
TABLE_ONTOP = _ollypy.TABLE_ONTOP
DRAW_NORMAL = _ollypy.DRAW_NORMAL
DRAW_GRAY = _ollypy.DRAW_GRAY
DRAW_HILITE = _ollypy.DRAW_HILITE
DRAW_UL = _ollypy.DRAW_UL
DRAW_SELECT = _ollypy.DRAW_SELECT
DRAW_EIP = _ollypy.DRAW_EIP
DRAW_BREAK = _ollypy.DRAW_BREAK
DRAW_GRAPH = _ollypy.DRAW_GRAPH
DRAW_DIRECT = _ollypy.DRAW_DIRECT
DRAW_MASK = _ollypy.DRAW_MASK
DRAW_EXTSEL = _ollypy.DRAW_EXTSEL
DRAW_UNICODE = _ollypy.DRAW_UNICODE
DRAW_TOP = _ollypy.DRAW_TOP
DRAW_BOTTOM = _ollypy.DRAW_BOTTOM
D_SPACE = _ollypy.D_SPACE
D_SEP = _ollypy.D_SEP
D_BEGIN = _ollypy.D_BEGIN
D_BODY = _ollypy.D_BODY
D_ENTRY = _ollypy.D_ENTRY
D_LEAF = _ollypy.D_LEAF
D_END = _ollypy.D_END
D_SINGLE = _ollypy.D_SINGLE
D_ENDBEG = _ollypy.D_ENDBEG
D_POINT = _ollypy.D_POINT
D_JMPUP = _ollypy.D_JMPUP
D_JMPOUT = _ollypy.D_JMPOUT
D_JMPDN = _ollypy.D_JMPDN
D_PATHUP = _ollypy.D_PATHUP
D_GRAYUP = _ollypy.D_GRAYUP
D_PATH = _ollypy.D_PATH
D_GRAYPATH = _ollypy.D_GRAYPATH
D_PATHDN = _ollypy.D_PATHDN
D_GRAYDN = _ollypy.D_GRAYDN
D_PATHUPEND = _ollypy.D_PATHUPEND
D_GRAYUPEND = _ollypy.D_GRAYUPEND
D_PATHDNEND = _ollypy.D_PATHDNEND
D_GRAYDNEND = _ollypy.D_GRAYDNEND
D_SWTOP = _ollypy.D_SWTOP
D_SWBODY = _ollypy.D_SWBODY
D_CASE = _ollypy.D_CASE
D_LASTCASE = _ollypy.D_LASTCASE
TY_NEW = _ollypy.TY_NEW
TY_CONFIRMED = _ollypy.TY_CONFIRMED
TY_MAIN = _ollypy.TY_MAIN
TY_INVALID = _ollypy.TY_INVALID
TY_SELECTED = _ollypy.TY_SELECTED
TY_REPORTED = _ollypy.TY_REPORTED
TY_REFERENCE = _ollypy.TY_REFERENCE
TY_ORIGIN = _ollypy.TY_ORIGIN
TY_STOPAN = _ollypy.TY_STOPAN
TY_SET = _ollypy.TY_SET
TY_ACTIVE = _ollypy.TY_ACTIVE
TY_DISABLED = _ollypy.TY_DISABLED
TY_ONESHOT = _ollypy.TY_ONESHOT
TY_TEMP = _ollypy.TY_TEMP
TY_KEEPCODE = _ollypy.TY_KEEPCODE
TY_KEEPCOND = _ollypy.TY_KEEPCOND
TY_NOUPDATE = _ollypy.TY_NOUPDATE
TY_RTRACE = _ollypy.TY_RTRACE
TY_EXPORT = _ollypy.TY_EXPORT
TY_IMPORT = _ollypy.TY_IMPORT
TY_LIBRARY = _ollypy.TY_LIBRARY
TY_LABEL = _ollypy.TY_LABEL
TY_ANYNAME = _ollypy.TY_ANYNAME
TY_KNOWN = _ollypy.TY_KNOWN
TY_DEFHEAP = _ollypy.TY_DEFHEAP
TY_HEAP = _ollypy.TY_HEAP
TY_SFX = _ollypy.TY_SFX
TY_CODE = _ollypy.TY_CODE
TY_DATA = _ollypy.TY_DATA
TY_IMPDATA = _ollypy.TY_IMPDATA
TY_EXPDATA = _ollypy.TY_EXPDATA
TY_RSRC = _ollypy.TY_RSRC
TY_RELOC = _ollypy.TY_RELOC
TY_STACK = _ollypy.TY_STACK
TY_THREAD = _ollypy.TY_THREAD
TY_HEADER = _ollypy.TY_HEADER
TY_ANYMEM = _ollypy.TY_ANYMEM
TY_GUARDED = _ollypy.TY_GUARDED
TY_PURE = _ollypy.TY_PURE
TY_PASCAL = _ollypy.TY_PASCAL
TY_C = _ollypy.TY_C
TY_NOTENTRY = _ollypy.TY_NOTENTRY
TY_CHARSW = _ollypy.TY_CHARSW
TY_WMSW = _ollypy.TY_WMSW
TY_EXCEPTSW = _ollypy.TY_EXCEPTSW
TY_RELIABLE = _ollypy.TY_RELIABLE
TY_GUESSED = _ollypy.TY_GUESSED
TY_BELONGS = _ollypy.TY_BELONGS
TY_RECURSIVE = _ollypy.TY_RECURSIVE
TY_TERMINAL = _ollypy.TY_TERMINAL
TY_SYSTEM = _ollypy.TY_SYSTEM
TY_DIRECT = _ollypy.TY_DIRECT
TY_NODATA = _ollypy.TY_NODATA
TY_DUMMY = _ollypy.TY_DUMMY
TY_NOSIDE = _ollypy.TY_NOSIDE
class t_scheme(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_scheme, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_scheme, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ollypy.t_scheme_name_set
    __swig_getmethods__["name"] = _ollypy.t_scheme_name_get
    if _newclass:name = _swig_property(_ollypy.t_scheme_name_get, _ollypy.t_scheme_name_set)
    __swig_setmethods__["textcolor"] = _ollypy.t_scheme_textcolor_set
    __swig_getmethods__["textcolor"] = _ollypy.t_scheme_textcolor_get
    if _newclass:textcolor = _swig_property(_ollypy.t_scheme_textcolor_get, _ollypy.t_scheme_textcolor_set)
    __swig_setmethods__["hitextcolor"] = _ollypy.t_scheme_hitextcolor_set
    __swig_getmethods__["hitextcolor"] = _ollypy.t_scheme_hitextcolor_get
    if _newclass:hitextcolor = _swig_property(_ollypy.t_scheme_hitextcolor_get, _ollypy.t_scheme_hitextcolor_set)
    __swig_setmethods__["lowcolor"] = _ollypy.t_scheme_lowcolor_set
    __swig_getmethods__["lowcolor"] = _ollypy.t_scheme_lowcolor_get
    if _newclass:lowcolor = _swig_property(_ollypy.t_scheme_lowcolor_get, _ollypy.t_scheme_lowcolor_set)
    __swig_setmethods__["bkcolor"] = _ollypy.t_scheme_bkcolor_set
    __swig_getmethods__["bkcolor"] = _ollypy.t_scheme_bkcolor_get
    if _newclass:bkcolor = _swig_property(_ollypy.t_scheme_bkcolor_get, _ollypy.t_scheme_bkcolor_set)
    __swig_setmethods__["selbkcolor"] = _ollypy.t_scheme_selbkcolor_set
    __swig_getmethods__["selbkcolor"] = _ollypy.t_scheme_selbkcolor_get
    if _newclass:selbkcolor = _swig_property(_ollypy.t_scheme_selbkcolor_get, _ollypy.t_scheme_selbkcolor_set)
    __swig_setmethods__["linecolor"] = _ollypy.t_scheme_linecolor_set
    __swig_getmethods__["linecolor"] = _ollypy.t_scheme_linecolor_get
    if _newclass:linecolor = _swig_property(_ollypy.t_scheme_linecolor_get, _ollypy.t_scheme_linecolor_set)
    __swig_setmethods__["auxcolor"] = _ollypy.t_scheme_auxcolor_set
    __swig_getmethods__["auxcolor"] = _ollypy.t_scheme_auxcolor_get
    if _newclass:auxcolor = _swig_property(_ollypy.t_scheme_auxcolor_get, _ollypy.t_scheme_auxcolor_set)
    __swig_setmethods__["condbkcolor"] = _ollypy.t_scheme_condbkcolor_set
    __swig_getmethods__["condbkcolor"] = _ollypy.t_scheme_condbkcolor_get
    if _newclass:condbkcolor = _swig_property(_ollypy.t_scheme_condbkcolor_get, _ollypy.t_scheme_condbkcolor_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_scheme(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_scheme
    __del__ = lambda self : None;
t_scheme_swigregister = _ollypy.t_scheme_swigregister
t_scheme_swigregister(t_scheme)

class t_schemeopt(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_schemeopt, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_schemeopt, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ollypy.t_schemeopt_name_set
    __swig_getmethods__["name"] = _ollypy.t_schemeopt_name_get
    if _newclass:name = _swig_property(_ollypy.t_schemeopt_name_get, _ollypy.t_schemeopt_name_set)
    __swig_setmethods__["color"] = _ollypy.t_schemeopt_color_set
    __swig_getmethods__["color"] = _ollypy.t_schemeopt_color_get
    if _newclass:color = _swig_property(_ollypy.t_schemeopt_color_get, _ollypy.t_schemeopt_color_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_schemeopt(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_schemeopt
    __del__ = lambda self : None;
t_schemeopt_swigregister = _ollypy.t_schemeopt_swigregister
t_schemeopt_swigregister(t_schemeopt)

class t_bar(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_bar, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_bar, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nbar"] = _ollypy.t_bar_nbar_set
    __swig_getmethods__["nbar"] = _ollypy.t_bar_nbar_get
    if _newclass:nbar = _swig_property(_ollypy.t_bar_nbar_get, _ollypy.t_bar_nbar_set)
    __swig_setmethods__["font"] = _ollypy.t_bar_font_set
    __swig_getmethods__["font"] = _ollypy.t_bar_font_get
    if _newclass:font = _swig_property(_ollypy.t_bar_font_get, _ollypy.t_bar_font_set)
    __swig_setmethods__["dx"] = _ollypy.t_bar_dx_set
    __swig_getmethods__["dx"] = _ollypy.t_bar_dx_get
    if _newclass:dx = _swig_property(_ollypy.t_bar_dx_get, _ollypy.t_bar_dx_set)
    __swig_setmethods__["defdx"] = _ollypy.t_bar_defdx_set
    __swig_getmethods__["defdx"] = _ollypy.t_bar_defdx_get
    if _newclass:defdx = _swig_property(_ollypy.t_bar_defdx_get, _ollypy.t_bar_defdx_set)
    __swig_setmethods__["name"] = _ollypy.t_bar_name_set
    __swig_getmethods__["name"] = _ollypy.t_bar_name_get
    if _newclass:name = _swig_property(_ollypy.t_bar_name_get, _ollypy.t_bar_name_set)
    __swig_setmethods__["mode"] = _ollypy.t_bar_mode_set
    __swig_getmethods__["mode"] = _ollypy.t_bar_mode_get
    if _newclass:mode = _swig_property(_ollypy.t_bar_mode_get, _ollypy.t_bar_mode_set)
    __swig_setmethods__["captured"] = _ollypy.t_bar_captured_set
    __swig_getmethods__["captured"] = _ollypy.t_bar_captured_get
    if _newclass:captured = _swig_property(_ollypy.t_bar_captured_get, _ollypy.t_bar_captured_set)
    __swig_setmethods__["active"] = _ollypy.t_bar_active_set
    __swig_getmethods__["active"] = _ollypy.t_bar_active_get
    if _newclass:active = _swig_property(_ollypy.t_bar_active_get, _ollypy.t_bar_active_set)
    __swig_setmethods__["prevx"] = _ollypy.t_bar_prevx_set
    __swig_getmethods__["prevx"] = _ollypy.t_bar_prevx_get
    if _newclass:prevx = _swig_property(_ollypy.t_bar_prevx_get, _ollypy.t_bar_prevx_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_bar(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_bar
    __del__ = lambda self : None;
t_bar_swigregister = _ollypy.t_bar_swigregister
t_bar_swigregister(t_bar)

NM_NONAME = _ollypy.NM_NONAME
NM_ANYNAME = _ollypy.NM_ANYNAME
NM_PLUGCMD = _ollypy.NM_PLUGCMD
NM_LABEL = _ollypy.NM_LABEL
NM_EXPORT = _ollypy.NM_EXPORT
NM_IMPORT = _ollypy.NM_IMPORT
NM_LIBRARY = _ollypy.NM_LIBRARY
NM_CONST = _ollypy.NM_CONST
NM_COMMENT = _ollypy.NM_COMMENT
NM_LIBCOMM = _ollypy.NM_LIBCOMM
NM_BREAK = _ollypy.NM_BREAK
NM_ARG = _ollypy.NM_ARG
NM_ANALYSE = _ollypy.NM_ANALYSE
NM_BREAKEXPR = _ollypy.NM_BREAKEXPR
NM_BREAKEXPL = _ollypy.NM_BREAKEXPL
NM_ASSUME = _ollypy.NM_ASSUME
NM_STRUCT = _ollypy.NM_STRUCT
NM_CASE = _ollypy.NM_CASE
NM_INSPECT = _ollypy.NM_INSPECT
NM_WATCH = _ollypy.NM_WATCH
NM_ASM = _ollypy.NM_ASM
NM_FINDASM = _ollypy.NM_FINDASM
NM_LASTWATCH = _ollypy.NM_LASTWATCH
NM_SOURCE = _ollypy.NM_SOURCE
NM_REFTXT = _ollypy.NM_REFTXT
NM_GOTO = _ollypy.NM_GOTO
NM_GOTODUMP = _ollypy.NM_GOTODUMP
NM_TRPAUSE = _ollypy.NM_TRPAUSE
NM_IMCALL = _ollypy.NM_IMCALL
NMHISTORY = _ollypy.NMHISTORY
REG_EAX = _ollypy.REG_EAX
REG_ECX = _ollypy.REG_ECX
REG_EDX = _ollypy.REG_EDX
REG_EBX = _ollypy.REG_EBX
REG_ESP = _ollypy.REG_ESP
REG_EBP = _ollypy.REG_EBP
REG_ESI = _ollypy.REG_ESI
REG_EDI = _ollypy.REG_EDI
SEG_UNDEF = _ollypy.SEG_UNDEF
SEG_ES = _ollypy.SEG_ES
SEG_CS = _ollypy.SEG_CS
SEG_SS = _ollypy.SEG_SS
SEG_DS = _ollypy.SEG_DS
SEG_FS = _ollypy.SEG_FS
SEG_GS = _ollypy.SEG_GS
RS_NONE = _ollypy.RS_NONE
RS_INT = _ollypy.RS_INT
RS_EIP = _ollypy.RS_EIP
RS_FLG = _ollypy.RS_FLG
RS_SEG = _ollypy.RS_SEG
RS_EFL = _ollypy.RS_EFL
RS_TAG = _ollypy.RS_TAG
RS_FPU = _ollypy.RS_FPU
RS_FST = _ollypy.RS_FST
RS_FCO = _ollypy.RS_FCO
RS_FER = _ollypy.RS_FER
RS_FCW = _ollypy.RS_FCW
RS_FPR = _ollypy.RS_FPR
RS_FEM = _ollypy.RS_FEM
RS_MMX = _ollypy.RS_MMX
RS_3DN = _ollypy.RS_3DN
RS_SSE = _ollypy.RS_SSE
RS_CSR = _ollypy.RS_CSR
RS_CSB = _ollypy.RS_CSB
RS_CPR = _ollypy.RS_CPR
RS_ERR = _ollypy.RS_ERR
RS_GROUP = _ollypy.RS_GROUP
RS_INDEX = _ollypy.RS_INDEX
NREGSTACK = _ollypy.NREGSTACK
MAXCALSIZE = _ollypy.MAXCALSIZE
INT3 = _ollypy.INT3
NOP = _ollypy.NOP
TRAPFLAG = _ollypy.TRAPFLAG
C_TYPEMASK = _ollypy.C_TYPEMASK
C_CMD = _ollypy.C_CMD
C_PSH = _ollypy.C_PSH
C_POP = _ollypy.C_POP
C_MMX = _ollypy.C_MMX
C_FLT = _ollypy.C_FLT
C_JMP = _ollypy.C_JMP
C_JMC = _ollypy.C_JMC
C_CAL = _ollypy.C_CAL
C_RET = _ollypy.C_RET
C_FLG = _ollypy.C_FLG
C_RTF = _ollypy.C_RTF
C_REP = _ollypy.C_REP
C_PRI = _ollypy.C_PRI
C_SSE = _ollypy.C_SSE
C_NOW = _ollypy.C_NOW
C_BAD = _ollypy.C_BAD
C_RARE = _ollypy.C_RARE
C_SIZEMASK = _ollypy.C_SIZEMASK
C_EXPL = _ollypy.C_EXPL
C_DANGER95 = _ollypy.C_DANGER95
C_DANGER = _ollypy.C_DANGER
C_DANGERLOCK = _ollypy.C_DANGERLOCK
DEC_TYPEMASK = _ollypy.DEC_TYPEMASK
DEC_UNKNOWN = _ollypy.DEC_UNKNOWN
DEC_BYTE = _ollypy.DEC_BYTE
DEC_WORD = _ollypy.DEC_WORD
DEC_NEXTDATA = _ollypy.DEC_NEXTDATA
DEC_DWORD = _ollypy.DEC_DWORD
DEC_FLOAT4 = _ollypy.DEC_FLOAT4
DEC_FWORD = _ollypy.DEC_FWORD
DEC_FLOAT8 = _ollypy.DEC_FLOAT8
DEC_QWORD = _ollypy.DEC_QWORD
DEC_FLOAT10 = _ollypy.DEC_FLOAT10
DEC_TBYTE = _ollypy.DEC_TBYTE
DEC_STRING = _ollypy.DEC_STRING
DEC_UNICODE = _ollypy.DEC_UNICODE
DEC_3DNOW = _ollypy.DEC_3DNOW
DEC_SSE = _ollypy.DEC_SSE
DEC_TEXT = _ollypy.DEC_TEXT
DEC_BYTESW = _ollypy.DEC_BYTESW
DEC_NEXTCODE = _ollypy.DEC_NEXTCODE
DEC_COMMAND = _ollypy.DEC_COMMAND
DEC_JMPDEST = _ollypy.DEC_JMPDEST
DEC_CALLDEST = _ollypy.DEC_CALLDEST
DEC_PROCMASK = _ollypy.DEC_PROCMASK
DEC_PROC = _ollypy.DEC_PROC
DEC_PBODY = _ollypy.DEC_PBODY
DEC_PEND = _ollypy.DEC_PEND
DEC_CHECKED = _ollypy.DEC_CHECKED
DEC_SIGNED = _ollypy.DEC_SIGNED
DISASM_SIZE = _ollypy.DISASM_SIZE
DISASM_DATA = _ollypy.DISASM_DATA
DISASM_TRACE = _ollypy.DISASM_TRACE
DISASM_FILE = _ollypy.DISASM_FILE
DISASM_CODE = _ollypy.DISASM_CODE
DISASM_ALL = _ollypy.DISASM_ALL
DISASM_RTRACE = _ollypy.DISASM_RTRACE
DISASM_MODE = _ollypy.DISASM_MODE
DISASM_HILITE = _ollypy.DISASM_HILITE
DISASM_HLSHIFT = _ollypy.DISASM_HLSHIFT
DAW_FARADDR = _ollypy.DAW_FARADDR
DAW_SEGMENT = _ollypy.DAW_SEGMENT
DAW_PRIV = _ollypy.DAW_PRIV
DAW_IO = _ollypy.DAW_IO
DAW_SHIFT = _ollypy.DAW_SHIFT
DAW_PREFIX = _ollypy.DAW_PREFIX
DAW_LOCK = _ollypy.DAW_LOCK
DAW_STACK = _ollypy.DAW_STACK
DAW_DANGER95 = _ollypy.DAW_DANGER95
DAW_DANGEROUS = _ollypy.DAW_DANGEROUS
RST_INVALID = _ollypy.RST_INVALID
RST_VALUE = _ollypy.RST_VALUE
RST_VFIXUP = _ollypy.RST_VFIXUP
RST_INDIRECT = _ollypy.RST_INDIRECT
class t_reg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_reg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_reg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modified"] = _ollypy.t_reg_modified_set
    __swig_getmethods__["modified"] = _ollypy.t_reg_modified_get
    if _newclass:modified = _swig_property(_ollypy.t_reg_modified_get, _ollypy.t_reg_modified_set)
    __swig_setmethods__["modifiedbyuser"] = _ollypy.t_reg_modifiedbyuser_set
    __swig_getmethods__["modifiedbyuser"] = _ollypy.t_reg_modifiedbyuser_get
    if _newclass:modifiedbyuser = _swig_property(_ollypy.t_reg_modifiedbyuser_get, _ollypy.t_reg_modifiedbyuser_set)
    __swig_setmethods__["singlestep"] = _ollypy.t_reg_singlestep_set
    __swig_getmethods__["singlestep"] = _ollypy.t_reg_singlestep_get
    if _newclass:singlestep = _swig_property(_ollypy.t_reg_singlestep_get, _ollypy.t_reg_singlestep_set)
    __swig_setmethods__["r"] = _ollypy.t_reg_r_set
    __swig_getmethods__["r"] = _ollypy.t_reg_r_get
    if _newclass:r = _swig_property(_ollypy.t_reg_r_get, _ollypy.t_reg_r_set)
    __swig_setmethods__["ip"] = _ollypy.t_reg_ip_set
    __swig_getmethods__["ip"] = _ollypy.t_reg_ip_get
    if _newclass:ip = _swig_property(_ollypy.t_reg_ip_get, _ollypy.t_reg_ip_set)
    __swig_setmethods__["flags"] = _ollypy.t_reg_flags_set
    __swig_getmethods__["flags"] = _ollypy.t_reg_flags_get
    if _newclass:flags = _swig_property(_ollypy.t_reg_flags_get, _ollypy.t_reg_flags_set)
    __swig_setmethods__["top"] = _ollypy.t_reg_top_set
    __swig_getmethods__["top"] = _ollypy.t_reg_top_get
    if _newclass:top = _swig_property(_ollypy.t_reg_top_get, _ollypy.t_reg_top_set)
    __swig_setmethods__["f"] = _ollypy.t_reg_f_set
    __swig_getmethods__["f"] = _ollypy.t_reg_f_get
    if _newclass:f = _swig_property(_ollypy.t_reg_f_get, _ollypy.t_reg_f_set)
    __swig_setmethods__["tag"] = _ollypy.t_reg_tag_set
    __swig_getmethods__["tag"] = _ollypy.t_reg_tag_get
    if _newclass:tag = _swig_property(_ollypy.t_reg_tag_get, _ollypy.t_reg_tag_set)
    __swig_setmethods__["fst"] = _ollypy.t_reg_fst_set
    __swig_getmethods__["fst"] = _ollypy.t_reg_fst_get
    if _newclass:fst = _swig_property(_ollypy.t_reg_fst_get, _ollypy.t_reg_fst_set)
    __swig_setmethods__["fcw"] = _ollypy.t_reg_fcw_set
    __swig_getmethods__["fcw"] = _ollypy.t_reg_fcw_get
    if _newclass:fcw = _swig_property(_ollypy.t_reg_fcw_get, _ollypy.t_reg_fcw_set)
    __swig_setmethods__["s"] = _ollypy.t_reg_s_set
    __swig_getmethods__["s"] = _ollypy.t_reg_s_get
    if _newclass:s = _swig_property(_ollypy.t_reg_s_get, _ollypy.t_reg_s_set)
    __swig_setmethods__["base"] = _ollypy.t_reg_base_set
    __swig_getmethods__["base"] = _ollypy.t_reg_base_get
    if _newclass:base = _swig_property(_ollypy.t_reg_base_get, _ollypy.t_reg_base_set)
    __swig_setmethods__["limit"] = _ollypy.t_reg_limit_set
    __swig_getmethods__["limit"] = _ollypy.t_reg_limit_get
    if _newclass:limit = _swig_property(_ollypy.t_reg_limit_get, _ollypy.t_reg_limit_set)
    __swig_setmethods__["big"] = _ollypy.t_reg_big_set
    __swig_getmethods__["big"] = _ollypy.t_reg_big_get
    if _newclass:big = _swig_property(_ollypy.t_reg_big_get, _ollypy.t_reg_big_set)
    __swig_setmethods__["dr6"] = _ollypy.t_reg_dr6_set
    __swig_getmethods__["dr6"] = _ollypy.t_reg_dr6_get
    if _newclass:dr6 = _swig_property(_ollypy.t_reg_dr6_get, _ollypy.t_reg_dr6_set)
    __swig_setmethods__["threadid"] = _ollypy.t_reg_threadid_set
    __swig_getmethods__["threadid"] = _ollypy.t_reg_threadid_get
    if _newclass:threadid = _swig_property(_ollypy.t_reg_threadid_get, _ollypy.t_reg_threadid_set)
    __swig_setmethods__["lasterror"] = _ollypy.t_reg_lasterror_set
    __swig_getmethods__["lasterror"] = _ollypy.t_reg_lasterror_get
    if _newclass:lasterror = _swig_property(_ollypy.t_reg_lasterror_get, _ollypy.t_reg_lasterror_set)
    __swig_setmethods__["ssevalid"] = _ollypy.t_reg_ssevalid_set
    __swig_getmethods__["ssevalid"] = _ollypy.t_reg_ssevalid_get
    if _newclass:ssevalid = _swig_property(_ollypy.t_reg_ssevalid_get, _ollypy.t_reg_ssevalid_set)
    __swig_setmethods__["ssemodified"] = _ollypy.t_reg_ssemodified_set
    __swig_getmethods__["ssemodified"] = _ollypy.t_reg_ssemodified_get
    if _newclass:ssemodified = _swig_property(_ollypy.t_reg_ssemodified_get, _ollypy.t_reg_ssemodified_set)
    __swig_setmethods__["ssereg"] = _ollypy.t_reg_ssereg_set
    __swig_getmethods__["ssereg"] = _ollypy.t_reg_ssereg_get
    if _newclass:ssereg = _swig_property(_ollypy.t_reg_ssereg_get, _ollypy.t_reg_ssereg_set)
    __swig_setmethods__["mxcsr"] = _ollypy.t_reg_mxcsr_set
    __swig_getmethods__["mxcsr"] = _ollypy.t_reg_mxcsr_get
    if _newclass:mxcsr = _swig_property(_ollypy.t_reg_mxcsr_get, _ollypy.t_reg_mxcsr_set)
    __swig_setmethods__["selected"] = _ollypy.t_reg_selected_set
    __swig_getmethods__["selected"] = _ollypy.t_reg_selected_get
    if _newclass:selected = _swig_property(_ollypy.t_reg_selected_get, _ollypy.t_reg_selected_set)
    __swig_setmethods__["drlin"] = _ollypy.t_reg_drlin_set
    __swig_getmethods__["drlin"] = _ollypy.t_reg_drlin_get
    if _newclass:drlin = _swig_property(_ollypy.t_reg_drlin_get, _ollypy.t_reg_drlin_set)
    __swig_setmethods__["dr7"] = _ollypy.t_reg_dr7_set
    __swig_getmethods__["dr7"] = _ollypy.t_reg_dr7_get
    if _newclass:dr7 = _swig_property(_ollypy.t_reg_dr7_get, _ollypy.t_reg_dr7_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_reg(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_reg
    __del__ = lambda self : None;
t_reg_swigregister = _ollypy.t_reg_swigregister
t_reg_swigregister(t_reg)

class t_operand(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_operand, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_operand, name)
    __repr__ = _swig_repr
    __swig_setmethods__["optype"] = _ollypy.t_operand_optype_set
    __swig_getmethods__["optype"] = _ollypy.t_operand_optype_get
    if _newclass:optype = _swig_property(_ollypy.t_operand_optype_get, _ollypy.t_operand_optype_set)
    __swig_setmethods__["opsize"] = _ollypy.t_operand_opsize_set
    __swig_getmethods__["opsize"] = _ollypy.t_operand_opsize_get
    if _newclass:opsize = _swig_property(_ollypy.t_operand_opsize_get, _ollypy.t_operand_opsize_set)
    __swig_setmethods__["regscale"] = _ollypy.t_operand_regscale_set
    __swig_getmethods__["regscale"] = _ollypy.t_operand_regscale_get
    if _newclass:regscale = _swig_property(_ollypy.t_operand_regscale_get, _ollypy.t_operand_regscale_set)
    __swig_setmethods__["seg"] = _ollypy.t_operand_seg_set
    __swig_getmethods__["seg"] = _ollypy.t_operand_seg_get
    if _newclass:seg = _swig_property(_ollypy.t_operand_seg_get, _ollypy.t_operand_seg_set)
    __swig_setmethods__["opconst"] = _ollypy.t_operand_opconst_set
    __swig_getmethods__["opconst"] = _ollypy.t_operand_opconst_get
    if _newclass:opconst = _swig_property(_ollypy.t_operand_opconst_get, _ollypy.t_operand_opconst_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_operand(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_operand
    __del__ = lambda self : None;
t_operand_swigregister = _ollypy.t_operand_swigregister
t_operand_swigregister(t_operand)

class t_disasm(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_disasm, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_disasm, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ip"] = _ollypy.t_disasm_ip_set
    __swig_getmethods__["ip"] = _ollypy.t_disasm_ip_get
    if _newclass:ip = _swig_property(_ollypy.t_disasm_ip_get, _ollypy.t_disasm_ip_set)
    __swig_setmethods__["dump"] = _ollypy.t_disasm_dump_set
    __swig_getmethods__["dump"] = _ollypy.t_disasm_dump_get
    if _newclass:dump = _swig_property(_ollypy.t_disasm_dump_get, _ollypy.t_disasm_dump_set)
    __swig_setmethods__["result"] = _ollypy.t_disasm_result_set
    __swig_getmethods__["result"] = _ollypy.t_disasm_result_get
    if _newclass:result = _swig_property(_ollypy.t_disasm_result_get, _ollypy.t_disasm_result_set)
    __swig_setmethods__["comment"] = _ollypy.t_disasm_comment_set
    __swig_getmethods__["comment"] = _ollypy.t_disasm_comment_get
    if _newclass:comment = _swig_property(_ollypy.t_disasm_comment_get, _ollypy.t_disasm_comment_set)
    __swig_setmethods__["opinfo"] = _ollypy.t_disasm_opinfo_set
    __swig_getmethods__["opinfo"] = _ollypy.t_disasm_opinfo_get
    if _newclass:opinfo = _swig_property(_ollypy.t_disasm_opinfo_get, _ollypy.t_disasm_opinfo_set)
    __swig_setmethods__["cmdtype"] = _ollypy.t_disasm_cmdtype_set
    __swig_getmethods__["cmdtype"] = _ollypy.t_disasm_cmdtype_get
    if _newclass:cmdtype = _swig_property(_ollypy.t_disasm_cmdtype_get, _ollypy.t_disasm_cmdtype_set)
    __swig_setmethods__["memtype"] = _ollypy.t_disasm_memtype_set
    __swig_getmethods__["memtype"] = _ollypy.t_disasm_memtype_get
    if _newclass:memtype = _swig_property(_ollypy.t_disasm_memtype_get, _ollypy.t_disasm_memtype_set)
    __swig_setmethods__["nprefix"] = _ollypy.t_disasm_nprefix_set
    __swig_getmethods__["nprefix"] = _ollypy.t_disasm_nprefix_get
    if _newclass:nprefix = _swig_property(_ollypy.t_disasm_nprefix_get, _ollypy.t_disasm_nprefix_set)
    __swig_setmethods__["indexed"] = _ollypy.t_disasm_indexed_set
    __swig_getmethods__["indexed"] = _ollypy.t_disasm_indexed_get
    if _newclass:indexed = _swig_property(_ollypy.t_disasm_indexed_get, _ollypy.t_disasm_indexed_set)
    __swig_setmethods__["jmpconst"] = _ollypy.t_disasm_jmpconst_set
    __swig_getmethods__["jmpconst"] = _ollypy.t_disasm_jmpconst_get
    if _newclass:jmpconst = _swig_property(_ollypy.t_disasm_jmpconst_get, _ollypy.t_disasm_jmpconst_set)
    __swig_setmethods__["jmptable"] = _ollypy.t_disasm_jmptable_set
    __swig_getmethods__["jmptable"] = _ollypy.t_disasm_jmptable_get
    if _newclass:jmptable = _swig_property(_ollypy.t_disasm_jmptable_get, _ollypy.t_disasm_jmptable_set)
    __swig_setmethods__["adrconst"] = _ollypy.t_disasm_adrconst_set
    __swig_getmethods__["adrconst"] = _ollypy.t_disasm_adrconst_get
    if _newclass:adrconst = _swig_property(_ollypy.t_disasm_adrconst_get, _ollypy.t_disasm_adrconst_set)
    __swig_setmethods__["immconst"] = _ollypy.t_disasm_immconst_set
    __swig_getmethods__["immconst"] = _ollypy.t_disasm_immconst_get
    if _newclass:immconst = _swig_property(_ollypy.t_disasm_immconst_get, _ollypy.t_disasm_immconst_set)
    __swig_setmethods__["zeroconst"] = _ollypy.t_disasm_zeroconst_set
    __swig_getmethods__["zeroconst"] = _ollypy.t_disasm_zeroconst_get
    if _newclass:zeroconst = _swig_property(_ollypy.t_disasm_zeroconst_get, _ollypy.t_disasm_zeroconst_set)
    __swig_setmethods__["fixupoffset"] = _ollypy.t_disasm_fixupoffset_set
    __swig_getmethods__["fixupoffset"] = _ollypy.t_disasm_fixupoffset_get
    if _newclass:fixupoffset = _swig_property(_ollypy.t_disasm_fixupoffset_get, _ollypy.t_disasm_fixupoffset_set)
    __swig_setmethods__["fixupsize"] = _ollypy.t_disasm_fixupsize_set
    __swig_getmethods__["fixupsize"] = _ollypy.t_disasm_fixupsize_get
    if _newclass:fixupsize = _swig_property(_ollypy.t_disasm_fixupsize_get, _ollypy.t_disasm_fixupsize_set)
    __swig_setmethods__["jmpaddr"] = _ollypy.t_disasm_jmpaddr_set
    __swig_getmethods__["jmpaddr"] = _ollypy.t_disasm_jmpaddr_get
    if _newclass:jmpaddr = _swig_property(_ollypy.t_disasm_jmpaddr_get, _ollypy.t_disasm_jmpaddr_set)
    __swig_setmethods__["condition"] = _ollypy.t_disasm_condition_set
    __swig_getmethods__["condition"] = _ollypy.t_disasm_condition_get
    if _newclass:condition = _swig_property(_ollypy.t_disasm_condition_get, _ollypy.t_disasm_condition_set)
    __swig_setmethods__["error"] = _ollypy.t_disasm_error_set
    __swig_getmethods__["error"] = _ollypy.t_disasm_error_get
    if _newclass:error = _swig_property(_ollypy.t_disasm_error_get, _ollypy.t_disasm_error_set)
    __swig_setmethods__["warnings"] = _ollypy.t_disasm_warnings_set
    __swig_getmethods__["warnings"] = _ollypy.t_disasm_warnings_get
    if _newclass:warnings = _swig_property(_ollypy.t_disasm_warnings_get, _ollypy.t_disasm_warnings_set)
    __swig_setmethods__["optype"] = _ollypy.t_disasm_optype_set
    __swig_getmethods__["optype"] = _ollypy.t_disasm_optype_get
    if _newclass:optype = _swig_property(_ollypy.t_disasm_optype_get, _ollypy.t_disasm_optype_set)
    __swig_setmethods__["opsize"] = _ollypy.t_disasm_opsize_set
    __swig_getmethods__["opsize"] = _ollypy.t_disasm_opsize_get
    if _newclass:opsize = _swig_property(_ollypy.t_disasm_opsize_get, _ollypy.t_disasm_opsize_set)
    __swig_setmethods__["opgood"] = _ollypy.t_disasm_opgood_set
    __swig_getmethods__["opgood"] = _ollypy.t_disasm_opgood_get
    if _newclass:opgood = _swig_property(_ollypy.t_disasm_opgood_get, _ollypy.t_disasm_opgood_set)
    __swig_setmethods__["opaddr"] = _ollypy.t_disasm_opaddr_set
    __swig_getmethods__["opaddr"] = _ollypy.t_disasm_opaddr_get
    if _newclass:opaddr = _swig_property(_ollypy.t_disasm_opaddr_get, _ollypy.t_disasm_opaddr_set)
    __swig_setmethods__["opdata"] = _ollypy.t_disasm_opdata_set
    __swig_getmethods__["opdata"] = _ollypy.t_disasm_opdata_get
    if _newclass:opdata = _swig_property(_ollypy.t_disasm_opdata_get, _ollypy.t_disasm_opdata_set)
    __swig_setmethods__["op"] = _ollypy.t_disasm_op_set
    __swig_getmethods__["op"] = _ollypy.t_disasm_op_get
    if _newclass:op = _swig_property(_ollypy.t_disasm_op_get, _ollypy.t_disasm_op_set)
    __swig_setmethods__["regdata"] = _ollypy.t_disasm_regdata_set
    __swig_getmethods__["regdata"] = _ollypy.t_disasm_regdata_get
    if _newclass:regdata = _swig_property(_ollypy.t_disasm_regdata_get, _ollypy.t_disasm_regdata_set)
    __swig_setmethods__["regstatus"] = _ollypy.t_disasm_regstatus_set
    __swig_getmethods__["regstatus"] = _ollypy.t_disasm_regstatus_get
    if _newclass:regstatus = _swig_property(_ollypy.t_disasm_regstatus_get, _ollypy.t_disasm_regstatus_set)
    __swig_setmethods__["addrdata"] = _ollypy.t_disasm_addrdata_set
    __swig_getmethods__["addrdata"] = _ollypy.t_disasm_addrdata_get
    if _newclass:addrdata = _swig_property(_ollypy.t_disasm_addrdata_get, _ollypy.t_disasm_addrdata_set)
    __swig_setmethods__["addrstatus"] = _ollypy.t_disasm_addrstatus_set
    __swig_getmethods__["addrstatus"] = _ollypy.t_disasm_addrstatus_get
    if _newclass:addrstatus = _swig_property(_ollypy.t_disasm_addrstatus_get, _ollypy.t_disasm_addrstatus_set)
    __swig_setmethods__["regstack"] = _ollypy.t_disasm_regstack_set
    __swig_getmethods__["regstack"] = _ollypy.t_disasm_regstack_get
    if _newclass:regstack = _swig_property(_ollypy.t_disasm_regstack_get, _ollypy.t_disasm_regstack_set)
    __swig_setmethods__["rststatus"] = _ollypy.t_disasm_rststatus_set
    __swig_getmethods__["rststatus"] = _ollypy.t_disasm_rststatus_get
    if _newclass:rststatus = _swig_property(_ollypy.t_disasm_rststatus_get, _ollypy.t_disasm_rststatus_set)
    __swig_setmethods__["nregstack"] = _ollypy.t_disasm_nregstack_set
    __swig_getmethods__["nregstack"] = _ollypy.t_disasm_nregstack_get
    if _newclass:nregstack = _swig_property(_ollypy.t_disasm_nregstack_get, _ollypy.t_disasm_nregstack_set)
    __swig_setmethods__["reserved"] = _ollypy.t_disasm_reserved_set
    __swig_getmethods__["reserved"] = _ollypy.t_disasm_reserved_get
    if _newclass:reserved = _swig_property(_ollypy.t_disasm_reserved_get, _ollypy.t_disasm_reserved_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_disasm(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_disasm
    __del__ = lambda self : None;
t_disasm_swigregister = _ollypy.t_disasm_swigregister
t_disasm_swigregister(t_disasm)

class t_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _ollypy.t_data_data_set
    __swig_getmethods__["data"] = _ollypy.t_data_data_get
    if _newclass:data = _swig_property(_ollypy.t_data_data_get, _ollypy.t_data_data_set)
    __swig_setmethods__["u"] = _ollypy.t_data_u_set
    __swig_getmethods__["u"] = _ollypy.t_data_u_get
    if _newclass:u = _swig_property(_ollypy.t_data_u_get, _ollypy.t_data_u_set)
    __swig_setmethods__["l"] = _ollypy.t_data_l_set
    __swig_getmethods__["l"] = _ollypy.t_data_l_get
    if _newclass:l = _swig_property(_ollypy.t_data_l_get, _ollypy.t_data_l_set)
    __swig_setmethods__["f"] = _ollypy.t_data_f_set
    __swig_getmethods__["f"] = _ollypy.t_data_f_get
    if _newclass:f = _swig_property(_ollypy.t_data_f_get, _ollypy.t_data_f_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_data(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_data
    __del__ = lambda self : None;
t_data_swigregister = _ollypy.t_data_swigregister
t_data_swigregister(t_data)

class t_value(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_value, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_value, name)
    __repr__ = _swig_repr
    __swig_setmethods__["value"] = _ollypy.t_value_value_set
    __swig_getmethods__["value"] = _ollypy.t_value_value_get
    if _newclass:value = _swig_property(_ollypy.t_value_value_get, _ollypy.t_value_value_set)
    __swig_setmethods__["wvalue"] = _ollypy.t_value_wvalue_set
    __swig_getmethods__["wvalue"] = _ollypy.t_value_wvalue_get
    if _newclass:wvalue = _swig_property(_ollypy.t_value_wvalue_get, _ollypy.t_value_wvalue_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_value(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_value
    __del__ = lambda self : None;
t_value_swigregister = _ollypy.t_value_swigregister
t_value_swigregister(t_value)

class t_result(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_result, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_result, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _ollypy.t_result_type_set
    __swig_getmethods__["type"] = _ollypy.t_result_type_get
    if _newclass:type = _swig_property(_ollypy.t_result_type_get, _ollypy.t_result_type_set)
    __swig_setmethods__["dtype"] = _ollypy.t_result_dtype_set
    __swig_getmethods__["dtype"] = _ollypy.t_result_dtype_get
    if _newclass:dtype = _swig_property(_ollypy.t_result_dtype_get, _ollypy.t_result_dtype_set)
    __swig_setmethods__["data"] = _ollypy.t_result_data_set
    __swig_getmethods__["data"] = _ollypy.t_result_data_get
    if _newclass:data = _swig_property(_ollypy.t_result_data_get, _ollypy.t_result_data_set)
    __swig_setmethods__["value"] = _ollypy.t_result_value_set
    __swig_getmethods__["value"] = _ollypy.t_result_value_get
    if _newclass:value = _swig_property(_ollypy.t_result_value_get, _ollypy.t_result_value_set)
    __swig_setmethods__["lvaddr"] = _ollypy.t_result_lvaddr_set
    __swig_getmethods__["lvaddr"] = _ollypy.t_result_lvaddr_get
    if _newclass:lvaddr = _swig_property(_ollypy.t_result_lvaddr_get, _ollypy.t_result_lvaddr_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_result(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_result
    __del__ = lambda self : None;
t_result_swigregister = _ollypy.t_result_swigregister
t_result_swigregister(t_result)

class t_thread(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_thread, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_thread, name)
    __repr__ = _swig_repr
    __swig_setmethods__["threadid"] = _ollypy.t_thread_threadid_set
    __swig_getmethods__["threadid"] = _ollypy.t_thread_threadid_get
    if _newclass:threadid = _swig_property(_ollypy.t_thread_threadid_get, _ollypy.t_thread_threadid_set)
    __swig_setmethods__["dummy"] = _ollypy.t_thread_dummy_set
    __swig_getmethods__["dummy"] = _ollypy.t_thread_dummy_get
    if _newclass:dummy = _swig_property(_ollypy.t_thread_dummy_get, _ollypy.t_thread_dummy_set)
    __swig_setmethods__["type"] = _ollypy.t_thread_type_set
    __swig_getmethods__["type"] = _ollypy.t_thread_type_get
    if _newclass:type = _swig_property(_ollypy.t_thread_type_get, _ollypy.t_thread_type_set)
    __swig_setmethods__["thread"] = _ollypy.t_thread_thread_set
    __swig_getmethods__["thread"] = _ollypy.t_thread_thread_get
    if _newclass:thread = _swig_property(_ollypy.t_thread_thread_get, _ollypy.t_thread_thread_set)
    __swig_setmethods__["datablock"] = _ollypy.t_thread_datablock_set
    __swig_getmethods__["datablock"] = _ollypy.t_thread_datablock_get
    if _newclass:datablock = _swig_property(_ollypy.t_thread_datablock_get, _ollypy.t_thread_datablock_set)
    __swig_setmethods__["entry"] = _ollypy.t_thread_entry_set
    __swig_getmethods__["entry"] = _ollypy.t_thread_entry_get
    if _newclass:entry = _swig_property(_ollypy.t_thread_entry_get, _ollypy.t_thread_entry_set)
    __swig_setmethods__["stacktop"] = _ollypy.t_thread_stacktop_set
    __swig_getmethods__["stacktop"] = _ollypy.t_thread_stacktop_get
    if _newclass:stacktop = _swig_property(_ollypy.t_thread_stacktop_get, _ollypy.t_thread_stacktop_set)
    __swig_setmethods__["stackbottom"] = _ollypy.t_thread_stackbottom_set
    __swig_getmethods__["stackbottom"] = _ollypy.t_thread_stackbottom_get
    if _newclass:stackbottom = _swig_property(_ollypy.t_thread_stackbottom_get, _ollypy.t_thread_stackbottom_set)
    __swig_setmethods__["context"] = _ollypy.t_thread_context_set
    __swig_getmethods__["context"] = _ollypy.t_thread_context_get
    if _newclass:context = _swig_property(_ollypy.t_thread_context_get, _ollypy.t_thread_context_set)
    __swig_setmethods__["reg"] = _ollypy.t_thread_reg_set
    __swig_getmethods__["reg"] = _ollypy.t_thread_reg_get
    if _newclass:reg = _swig_property(_ollypy.t_thread_reg_get, _ollypy.t_thread_reg_set)
    __swig_setmethods__["regvalid"] = _ollypy.t_thread_regvalid_set
    __swig_getmethods__["regvalid"] = _ollypy.t_thread_regvalid_get
    if _newclass:regvalid = _swig_property(_ollypy.t_thread_regvalid_get, _ollypy.t_thread_regvalid_set)
    __swig_setmethods__["oldreg"] = _ollypy.t_thread_oldreg_set
    __swig_getmethods__["oldreg"] = _ollypy.t_thread_oldreg_get
    if _newclass:oldreg = _swig_property(_ollypy.t_thread_oldreg_get, _ollypy.t_thread_oldreg_set)
    __swig_setmethods__["oldregvalid"] = _ollypy.t_thread_oldregvalid_set
    __swig_getmethods__["oldregvalid"] = _ollypy.t_thread_oldregvalid_get
    if _newclass:oldregvalid = _swig_property(_ollypy.t_thread_oldregvalid_get, _ollypy.t_thread_oldregvalid_set)
    __swig_setmethods__["suspendcount"] = _ollypy.t_thread_suspendcount_set
    __swig_getmethods__["suspendcount"] = _ollypy.t_thread_suspendcount_get
    if _newclass:suspendcount = _swig_property(_ollypy.t_thread_suspendcount_get, _ollypy.t_thread_suspendcount_set)
    __swig_setmethods__["usertime"] = _ollypy.t_thread_usertime_set
    __swig_getmethods__["usertime"] = _ollypy.t_thread_usertime_get
    if _newclass:usertime = _swig_property(_ollypy.t_thread_usertime_get, _ollypy.t_thread_usertime_set)
    __swig_setmethods__["systime"] = _ollypy.t_thread_systime_set
    __swig_getmethods__["systime"] = _ollypy.t_thread_systime_get
    if _newclass:systime = _swig_property(_ollypy.t_thread_systime_get, _ollypy.t_thread_systime_set)
    __swig_setmethods__["reserved"] = _ollypy.t_thread_reserved_set
    __swig_getmethods__["reserved"] = _ollypy.t_thread_reserved_get
    if _newclass:reserved = _swig_property(_ollypy.t_thread_reserved_get, _ollypy.t_thread_reserved_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_thread(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_thread
    __del__ = lambda self : None;
t_thread_swigregister = _ollypy.t_thread_swigregister
t_thread_swigregister(t_thread)

MM_RESTORE = _ollypy.MM_RESTORE
MM_SILENT = _ollypy.MM_SILENT
MM_DELANAL = _ollypy.MM_DELANAL
MM_RESILENT = _ollypy.MM_RESILENT
class t_memory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_memory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_memory, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ollypy.t_memory_base_set
    __swig_getmethods__["base"] = _ollypy.t_memory_base_get
    if _newclass:base = _swig_property(_ollypy.t_memory_base_get, _ollypy.t_memory_base_set)
    __swig_setmethods__["size"] = _ollypy.t_memory_size_set
    __swig_getmethods__["size"] = _ollypy.t_memory_size_get
    if _newclass:size = _swig_property(_ollypy.t_memory_size_get, _ollypy.t_memory_size_set)
    __swig_setmethods__["type"] = _ollypy.t_memory_type_set
    __swig_getmethods__["type"] = _ollypy.t_memory_type_get
    if _newclass:type = _swig_property(_ollypy.t_memory_type_get, _ollypy.t_memory_type_set)
    __swig_setmethods__["owner"] = _ollypy.t_memory_owner_set
    __swig_getmethods__["owner"] = _ollypy.t_memory_owner_get
    if _newclass:owner = _swig_property(_ollypy.t_memory_owner_get, _ollypy.t_memory_owner_set)
    __swig_setmethods__["initaccess"] = _ollypy.t_memory_initaccess_set
    __swig_getmethods__["initaccess"] = _ollypy.t_memory_initaccess_get
    if _newclass:initaccess = _swig_property(_ollypy.t_memory_initaccess_get, _ollypy.t_memory_initaccess_set)
    __swig_setmethods__["access"] = _ollypy.t_memory_access_set
    __swig_getmethods__["access"] = _ollypy.t_memory_access_get
    if _newclass:access = _swig_property(_ollypy.t_memory_access_get, _ollypy.t_memory_access_set)
    __swig_setmethods__["threadid"] = _ollypy.t_memory_threadid_set
    __swig_getmethods__["threadid"] = _ollypy.t_memory_threadid_get
    if _newclass:threadid = _swig_property(_ollypy.t_memory_threadid_get, _ollypy.t_memory_threadid_set)
    __swig_setmethods__["sect"] = _ollypy.t_memory_sect_set
    __swig_getmethods__["sect"] = _ollypy.t_memory_sect_get
    if _newclass:sect = _swig_property(_ollypy.t_memory_sect_get, _ollypy.t_memory_sect_set)
    __swig_setmethods__["copy"] = _ollypy.t_memory_copy_set
    __swig_getmethods__["copy"] = _ollypy.t_memory_copy_get
    if _newclass:copy = _swig_property(_ollypy.t_memory_copy_get, _ollypy.t_memory_copy_set)
    __swig_setmethods__["reserved"] = _ollypy.t_memory_reserved_set
    __swig_getmethods__["reserved"] = _ollypy.t_memory_reserved_get
    if _newclass:reserved = _swig_property(_ollypy.t_memory_reserved_get, _ollypy.t_memory_reserved_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_memory(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_memory
    __del__ = lambda self : None;
t_memory_swigregister = _ollypy.t_memory_swigregister
t_memory_swigregister(t_memory)

class t_heap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_heap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_heap, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ollypy.t_heap_base_set
    __swig_getmethods__["base"] = _ollypy.t_heap_base_get
    if _newclass:base = _swig_property(_ollypy.t_heap_base_get, _ollypy.t_heap_base_set)
    __swig_setmethods__["size"] = _ollypy.t_heap_size_set
    __swig_getmethods__["size"] = _ollypy.t_heap_size_get
    if _newclass:size = _swig_property(_ollypy.t_heap_size_get, _ollypy.t_heap_size_set)
    __swig_setmethods__["type"] = _ollypy.t_heap_type_set
    __swig_getmethods__["type"] = _ollypy.t_heap_type_get
    if _newclass:type = _swig_property(_ollypy.t_heap_type_get, _ollypy.t_heap_type_set)
    __swig_setmethods__["parent"] = _ollypy.t_heap_parent_set
    __swig_getmethods__["parent"] = _ollypy.t_heap_parent_get
    if _newclass:parent = _swig_property(_ollypy.t_heap_parent_get, _ollypy.t_heap_parent_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_heap(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_heap
    __del__ = lambda self : None;
t_heap_swigregister = _ollypy.t_heap_swigregister
t_heap_swigregister(t_heap)

NVERS = _ollypy.NVERS
JT_JUMP = _ollypy.JT_JUMP
JT_COND = _ollypy.JT_COND
JT_SWITCH = _ollypy.JT_SWITCH
class t_ahint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_ahint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_ahint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ollypy.t_ahint_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_ahint_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_ahint_addr_get, _ollypy.t_ahint_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_ahint_size_set
    __swig_getmethods__["size"] = _ollypy.t_ahint_size_get
    if _newclass:size = _swig_property(_ollypy.t_ahint_size_get, _ollypy.t_ahint_size_set)
    __swig_setmethods__["type"] = _ollypy.t_ahint_type_set
    __swig_getmethods__["type"] = _ollypy.t_ahint_type_get
    if _newclass:type = _swig_property(_ollypy.t_ahint_type_get, _ollypy.t_ahint_type_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_ahint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_ahint
    __del__ = lambda self : None;
t_ahint_swigregister = _ollypy.t_ahint_swigregister
t_ahint_swigregister(t_ahint)

class t_stringtable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_stringtable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_stringtable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ollypy.t_stringtable_name_set
    __swig_getmethods__["name"] = _ollypy.t_stringtable_name_get
    if _newclass:name = _swig_property(_ollypy.t_stringtable_name_get, _ollypy.t_stringtable_name_set)
    __swig_setmethods__["language"] = _ollypy.t_stringtable_language_set
    __swig_getmethods__["language"] = _ollypy.t_stringtable_language_get
    if _newclass:language = _swig_property(_ollypy.t_stringtable_language_get, _ollypy.t_stringtable_language_set)
    __swig_setmethods__["addr"] = _ollypy.t_stringtable_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_stringtable_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_stringtable_addr_get, _ollypy.t_stringtable_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_stringtable_size_set
    __swig_getmethods__["size"] = _ollypy.t_stringtable_size_get
    if _newclass:size = _swig_property(_ollypy.t_stringtable_size_get, _ollypy.t_stringtable_size_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_stringtable(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_stringtable
    __del__ = lambda self : None;
t_stringtable_swigregister = _ollypy.t_stringtable_swigregister
t_stringtable_swigregister(t_stringtable)

class t_fixup(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_fixup, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_fixup, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ollypy.t_fixup_base_set
    __swig_getmethods__["base"] = _ollypy.t_fixup_base_get
    if _newclass:base = _swig_property(_ollypy.t_fixup_base_get, _ollypy.t_fixup_base_set)
    __swig_setmethods__["size"] = _ollypy.t_fixup_size_set
    __swig_getmethods__["size"] = _ollypy.t_fixup_size_get
    if _newclass:size = _swig_property(_ollypy.t_fixup_size_get, _ollypy.t_fixup_size_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_fixup(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_fixup
    __del__ = lambda self : None;
t_fixup_swigregister = _ollypy.t_fixup_swigregister
t_fixup_swigregister(t_fixup)

class t_symvar(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_symvar, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_symvar, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _ollypy.t_symvar_next_set
    __swig_getmethods__["next"] = _ollypy.t_symvar_next_get
    if _newclass:next = _swig_property(_ollypy.t_symvar_next_get, _ollypy.t_symvar_next_set)
    __swig_setmethods__["kind"] = _ollypy.t_symvar_kind_set
    __swig_getmethods__["kind"] = _ollypy.t_symvar_kind_get
    if _newclass:kind = _swig_property(_ollypy.t_symvar_kind_get, _ollypy.t_symvar_kind_set)
    __swig_setmethods__["regs"] = _ollypy.t_symvar_regs_set
    __swig_getmethods__["regs"] = _ollypy.t_symvar_regs_get
    if _newclass:regs = _swig_property(_ollypy.t_symvar_regs_get, _ollypy.t_symvar_regs_set)
    __swig_setmethods__["addr"] = _ollypy.t_symvar_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_symvar_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_symvar_addr_get, _ollypy.t_symvar_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_symvar_size_set
    __swig_getmethods__["size"] = _ollypy.t_symvar_size_get
    if _newclass:size = _swig_property(_ollypy.t_symvar_size_get, _ollypy.t_symvar_size_set)
    __swig_setmethods__["optvar"] = _ollypy.t_symvar_optvar_set
    __swig_getmethods__["optvar"] = _ollypy.t_symvar_optvar_get
    if _newclass:optvar = _swig_property(_ollypy.t_symvar_optvar_get, _ollypy.t_symvar_optvar_set)
    __swig_setmethods__["nameaddr"] = _ollypy.t_symvar_nameaddr_set
    __swig_getmethods__["nameaddr"] = _ollypy.t_symvar_nameaddr_get
    if _newclass:nameaddr = _swig_property(_ollypy.t_symvar_nameaddr_get, _ollypy.t_symvar_nameaddr_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_symvar(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_symvar
    __del__ = lambda self : None;
t_symvar_swigregister = _ollypy.t_symvar_swigregister
t_symvar_swigregister(t_symvar)

class t_jdest(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_jdest, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_jdest, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _ollypy.t_jdest_type_set
    __swig_getmethods__["type"] = _ollypy.t_jdest_type_get
    if _newclass:type = _swig_property(_ollypy.t_jdest_type_get, _ollypy.t_jdest_type_set)
    __swig_setmethods__["fr"] = _ollypy.t_jdest_fr_set
    __swig_getmethods__["fr"] = _ollypy.t_jdest_fr_get
    if _newclass:fr = _swig_property(_ollypy.t_jdest_fr_get, _ollypy.t_jdest_fr_set)
    __swig_setmethods__["to"] = _ollypy.t_jdest_to_set
    __swig_getmethods__["to"] = _ollypy.t_jdest_to_get
    if _newclass:to = _swig_property(_ollypy.t_jdest_to_get, _ollypy.t_jdest_to_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_jdest(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_jdest
    __del__ = lambda self : None;
t_jdest_swigregister = _ollypy.t_jdest_swigregister
t_jdest_swigregister(t_jdest)

class t_module(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_module, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_module, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ollypy.t_module_base_set
    __swig_getmethods__["base"] = _ollypy.t_module_base_get
    if _newclass:base = _swig_property(_ollypy.t_module_base_get, _ollypy.t_module_base_set)
    __swig_setmethods__["size"] = _ollypy.t_module_size_set
    __swig_getmethods__["size"] = _ollypy.t_module_size_get
    if _newclass:size = _swig_property(_ollypy.t_module_size_get, _ollypy.t_module_size_set)
    __swig_setmethods__["type"] = _ollypy.t_module_type_set
    __swig_getmethods__["type"] = _ollypy.t_module_type_get
    if _newclass:type = _swig_property(_ollypy.t_module_type_get, _ollypy.t_module_type_set)
    __swig_setmethods__["codebase"] = _ollypy.t_module_codebase_set
    __swig_getmethods__["codebase"] = _ollypy.t_module_codebase_get
    if _newclass:codebase = _swig_property(_ollypy.t_module_codebase_get, _ollypy.t_module_codebase_set)
    __swig_setmethods__["codesize"] = _ollypy.t_module_codesize_set
    __swig_getmethods__["codesize"] = _ollypy.t_module_codesize_get
    if _newclass:codesize = _swig_property(_ollypy.t_module_codesize_get, _ollypy.t_module_codesize_set)
    __swig_setmethods__["resbase"] = _ollypy.t_module_resbase_set
    __swig_getmethods__["resbase"] = _ollypy.t_module_resbase_get
    if _newclass:resbase = _swig_property(_ollypy.t_module_resbase_get, _ollypy.t_module_resbase_set)
    __swig_setmethods__["ressize"] = _ollypy.t_module_ressize_set
    __swig_getmethods__["ressize"] = _ollypy.t_module_ressize_get
    if _newclass:ressize = _swig_property(_ollypy.t_module_ressize_get, _ollypy.t_module_ressize_set)
    __swig_setmethods__["stringtable"] = _ollypy.t_module_stringtable_set
    __swig_getmethods__["stringtable"] = _ollypy.t_module_stringtable_get
    if _newclass:stringtable = _swig_property(_ollypy.t_module_stringtable_get, _ollypy.t_module_stringtable_set)
    __swig_setmethods__["nstringtable"] = _ollypy.t_module_nstringtable_set
    __swig_getmethods__["nstringtable"] = _ollypy.t_module_nstringtable_get
    if _newclass:nstringtable = _swig_property(_ollypy.t_module_nstringtable_get, _ollypy.t_module_nstringtable_set)
    __swig_setmethods__["maxstringtable"] = _ollypy.t_module_maxstringtable_set
    __swig_getmethods__["maxstringtable"] = _ollypy.t_module_maxstringtable_get
    if _newclass:maxstringtable = _swig_property(_ollypy.t_module_maxstringtable_get, _ollypy.t_module_maxstringtable_set)
    __swig_setmethods__["entry"] = _ollypy.t_module_entry_set
    __swig_getmethods__["entry"] = _ollypy.t_module_entry_get
    if _newclass:entry = _swig_property(_ollypy.t_module_entry_get, _ollypy.t_module_entry_set)
    __swig_setmethods__["database"] = _ollypy.t_module_database_set
    __swig_getmethods__["database"] = _ollypy.t_module_database_get
    if _newclass:database = _swig_property(_ollypy.t_module_database_get, _ollypy.t_module_database_set)
    __swig_setmethods__["idatatable"] = _ollypy.t_module_idatatable_set
    __swig_getmethods__["idatatable"] = _ollypy.t_module_idatatable_get
    if _newclass:idatatable = _swig_property(_ollypy.t_module_idatatable_get, _ollypy.t_module_idatatable_set)
    __swig_setmethods__["idatabase"] = _ollypy.t_module_idatabase_set
    __swig_getmethods__["idatabase"] = _ollypy.t_module_idatabase_get
    if _newclass:idatabase = _swig_property(_ollypy.t_module_idatabase_get, _ollypy.t_module_idatabase_set)
    __swig_setmethods__["edatatable"] = _ollypy.t_module_edatatable_set
    __swig_getmethods__["edatatable"] = _ollypy.t_module_edatatable_get
    if _newclass:edatatable = _swig_property(_ollypy.t_module_edatatable_get, _ollypy.t_module_edatatable_set)
    __swig_setmethods__["edatasize"] = _ollypy.t_module_edatasize_set
    __swig_getmethods__["edatasize"] = _ollypy.t_module_edatasize_get
    if _newclass:edatasize = _swig_property(_ollypy.t_module_edatasize_get, _ollypy.t_module_edatasize_set)
    __swig_setmethods__["reloctable"] = _ollypy.t_module_reloctable_set
    __swig_getmethods__["reloctable"] = _ollypy.t_module_reloctable_get
    if _newclass:reloctable = _swig_property(_ollypy.t_module_reloctable_get, _ollypy.t_module_reloctable_set)
    __swig_setmethods__["relocsize"] = _ollypy.t_module_relocsize_set
    __swig_getmethods__["relocsize"] = _ollypy.t_module_relocsize_get
    if _newclass:relocsize = _swig_property(_ollypy.t_module_relocsize_get, _ollypy.t_module_relocsize_set)
    __swig_setmethods__["name"] = _ollypy.t_module_name_set
    __swig_getmethods__["name"] = _ollypy.t_module_name_get
    if _newclass:name = _swig_property(_ollypy.t_module_name_get, _ollypy.t_module_name_set)
    __swig_setmethods__["path"] = _ollypy.t_module_path_set
    __swig_getmethods__["path"] = _ollypy.t_module_path_get
    if _newclass:path = _swig_property(_ollypy.t_module_path_get, _ollypy.t_module_path_set)
    __swig_setmethods__["nsect"] = _ollypy.t_module_nsect_set
    __swig_getmethods__["nsect"] = _ollypy.t_module_nsect_get
    if _newclass:nsect = _swig_property(_ollypy.t_module_nsect_get, _ollypy.t_module_nsect_set)
    __swig_setmethods__["sect"] = _ollypy.t_module_sect_set
    __swig_getmethods__["sect"] = _ollypy.t_module_sect_get
    if _newclass:sect = _swig_property(_ollypy.t_module_sect_get, _ollypy.t_module_sect_set)
    __swig_setmethods__["headersize"] = _ollypy.t_module_headersize_set
    __swig_getmethods__["headersize"] = _ollypy.t_module_headersize_get
    if _newclass:headersize = _swig_property(_ollypy.t_module_headersize_get, _ollypy.t_module_headersize_set)
    __swig_setmethods__["fixupbase"] = _ollypy.t_module_fixupbase_set
    __swig_getmethods__["fixupbase"] = _ollypy.t_module_fixupbase_get
    if _newclass:fixupbase = _swig_property(_ollypy.t_module_fixupbase_get, _ollypy.t_module_fixupbase_set)
    __swig_setmethods__["nfixup"] = _ollypy.t_module_nfixup_set
    __swig_getmethods__["nfixup"] = _ollypy.t_module_nfixup_get
    if _newclass:nfixup = _swig_property(_ollypy.t_module_nfixup_get, _ollypy.t_module_nfixup_set)
    __swig_setmethods__["fixup"] = _ollypy.t_module_fixup_set
    __swig_getmethods__["fixup"] = _ollypy.t_module_fixup_get
    if _newclass:fixup = _swig_property(_ollypy.t_module_fixup_get, _ollypy.t_module_fixup_set)
    __swig_setmethods__["codedec"] = _ollypy.t_module_codedec_set
    __swig_getmethods__["codedec"] = _ollypy.t_module_codedec_get
    if _newclass:codedec = _swig_property(_ollypy.t_module_codedec_get, _ollypy.t_module_codedec_set)
    __swig_setmethods__["codecrc"] = _ollypy.t_module_codecrc_set
    __swig_getmethods__["codecrc"] = _ollypy.t_module_codecrc_get
    if _newclass:codecrc = _swig_property(_ollypy.t_module_codecrc_get, _ollypy.t_module_codecrc_set)
    __swig_setmethods__["hittrace"] = _ollypy.t_module_hittrace_set
    __swig_getmethods__["hittrace"] = _ollypy.t_module_hittrace_get
    if _newclass:hittrace = _swig_property(_ollypy.t_module_hittrace_get, _ollypy.t_module_hittrace_set)
    __swig_setmethods__["hittracecopy"] = _ollypy.t_module_hittracecopy_set
    __swig_getmethods__["hittracecopy"] = _ollypy.t_module_hittracecopy_get
    if _newclass:hittracecopy = _swig_property(_ollypy.t_module_hittracecopy_get, _ollypy.t_module_hittracecopy_set)
    __swig_setmethods__["datadec"] = _ollypy.t_module_datadec_set
    __swig_getmethods__["datadec"] = _ollypy.t_module_datadec_get
    if _newclass:datadec = _swig_property(_ollypy.t_module_datadec_get, _ollypy.t_module_datadec_set)
    __swig_setmethods__["namelist"] = _ollypy.t_module_namelist_set
    __swig_getmethods__["namelist"] = _ollypy.t_module_namelist_get
    if _newclass:namelist = _swig_property(_ollypy.t_module_namelist_get, _ollypy.t_module_namelist_set)
    __swig_setmethods__["symvar"] = _ollypy.t_module_symvar_set
    __swig_getmethods__["symvar"] = _ollypy.t_module_symvar_get
    if _newclass:symvar = _swig_property(_ollypy.t_module_symvar_get, _ollypy.t_module_symvar_set)
    __swig_setmethods__["nsymvar"] = _ollypy.t_module_nsymvar_set
    __swig_getmethods__["nsymvar"] = _ollypy.t_module_nsymvar_get
    if _newclass:nsymvar = _swig_property(_ollypy.t_module_nsymvar_get, _ollypy.t_module_nsymvar_set)
    __swig_setmethods__["maxsymvar"] = _ollypy.t_module_maxsymvar_set
    __swig_getmethods__["maxsymvar"] = _ollypy.t_module_maxsymvar_get
    if _newclass:maxsymvar = _swig_property(_ollypy.t_module_maxsymvar_get, _ollypy.t_module_maxsymvar_set)
    __swig_setmethods__["globaltypes"] = _ollypy.t_module_globaltypes_set
    __swig_getmethods__["globaltypes"] = _ollypy.t_module_globaltypes_get
    if _newclass:globaltypes = _swig_property(_ollypy.t_module_globaltypes_get, _ollypy.t_module_globaltypes_set)
    __swig_setmethods__["mainentry"] = _ollypy.t_module_mainentry_set
    __swig_getmethods__["mainentry"] = _ollypy.t_module_mainentry_get
    if _newclass:mainentry = _swig_property(_ollypy.t_module_mainentry_get, _ollypy.t_module_mainentry_set)
    __swig_setmethods__["realsfxentry"] = _ollypy.t_module_realsfxentry_set
    __swig_getmethods__["realsfxentry"] = _ollypy.t_module_realsfxentry_get
    if _newclass:realsfxentry = _swig_property(_ollypy.t_module_realsfxentry_get, _ollypy.t_module_realsfxentry_set)
    __swig_setmethods__["updatenamelist"] = _ollypy.t_module_updatenamelist_set
    __swig_getmethods__["updatenamelist"] = _ollypy.t_module_updatenamelist_get
    if _newclass:updatenamelist = _swig_property(_ollypy.t_module_updatenamelist_get, _ollypy.t_module_updatenamelist_set)
    __swig_setmethods__["origcodesize"] = _ollypy.t_module_origcodesize_set
    __swig_getmethods__["origcodesize"] = _ollypy.t_module_origcodesize_get
    if _newclass:origcodesize = _swig_property(_ollypy.t_module_origcodesize_get, _ollypy.t_module_origcodesize_set)
    __swig_setmethods__["sfxbase"] = _ollypy.t_module_sfxbase_set
    __swig_getmethods__["sfxbase"] = _ollypy.t_module_sfxbase_get
    if _newclass:sfxbase = _swig_property(_ollypy.t_module_sfxbase_get, _ollypy.t_module_sfxbase_set)
    __swig_setmethods__["sfxsize"] = _ollypy.t_module_sfxsize_set
    __swig_getmethods__["sfxsize"] = _ollypy.t_module_sfxsize_get
    if _newclass:sfxsize = _swig_property(_ollypy.t_module_sfxsize_get, _ollypy.t_module_sfxsize_set)
    __swig_setmethods__["issystemdll"] = _ollypy.t_module_issystemdll_set
    __swig_getmethods__["issystemdll"] = _ollypy.t_module_issystemdll_get
    if _newclass:issystemdll = _swig_property(_ollypy.t_module_issystemdll_get, _ollypy.t_module_issystemdll_set)
    __swig_setmethods__["processed"] = _ollypy.t_module_processed_set
    __swig_getmethods__["processed"] = _ollypy.t_module_processed_get
    if _newclass:processed = _swig_property(_ollypy.t_module_processed_get, _ollypy.t_module_processed_set)
    __swig_setmethods__["dbghelpsym"] = _ollypy.t_module_dbghelpsym_set
    __swig_getmethods__["dbghelpsym"] = _ollypy.t_module_dbghelpsym_get
    if _newclass:dbghelpsym = _swig_property(_ollypy.t_module_dbghelpsym_get, _ollypy.t_module_dbghelpsym_set)
    __swig_setmethods__["version"] = _ollypy.t_module_version_set
    __swig_getmethods__["version"] = _ollypy.t_module_version_get
    if _newclass:version = _swig_property(_ollypy.t_module_version_get, _ollypy.t_module_version_set)
    __swig_setmethods__["jddata"] = _ollypy.t_module_jddata_set
    __swig_getmethods__["jddata"] = _ollypy.t_module_jddata_get
    if _newclass:jddata = _swig_property(_ollypy.t_module_jddata_get, _ollypy.t_module_jddata_set)
    __swig_setmethods__["njddata"] = _ollypy.t_module_njddata_set
    __swig_getmethods__["njddata"] = _ollypy.t_module_njddata_get
    if _newclass:njddata = _swig_property(_ollypy.t_module_njddata_get, _ollypy.t_module_njddata_set)
    __swig_setmethods__["reserved"] = _ollypy.t_module_reserved_set
    __swig_getmethods__["reserved"] = _ollypy.t_module_reserved_get
    if _newclass:reserved = _swig_property(_ollypy.t_module_reserved_get, _ollypy.t_module_reserved_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_module(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_module
    __del__ = lambda self : None;
t_module_swigregister = _ollypy.t_module_swigregister
t_module_swigregister(t_module)

DU_ESCAPABLE = _ollypy.DU_ESCAPABLE
DU_BACKUP = _ollypy.DU_BACKUP
DU_TYPE = _ollypy.DU_TYPE
DU_COUNT = _ollypy.DU_COUNT
DU_SIZE = _ollypy.DU_SIZE
DU_UNDEF = _ollypy.DU_UNDEF
DU_HEXTEXT = _ollypy.DU_HEXTEXT
DU_TEXT = _ollypy.DU_TEXT
DU_UNICODE = _ollypy.DU_UNICODE
DU_INT = _ollypy.DU_INT
DU_UINT = _ollypy.DU_UINT
DU_IHEX = _ollypy.DU_IHEX
DU_FLOAT = _ollypy.DU_FLOAT
DU_ADDR = _ollypy.DU_ADDR
DU_DISASM = _ollypy.DU_DISASM
DU_HEXUNI = _ollypy.DU_HEXUNI
DU_ADRASC = _ollypy.DU_ADRASC
DU_ADRUNI = _ollypy.DU_ADRUNI
DU_SPEC = _ollypy.DU_SPEC
MT_BACKUP = _ollypy.MT_BACKUP
MT_COPY = _ollypy.MT_COPY
MT_EDIT = _ollypy.MT_EDIT
MT_SEARCH = _ollypy.MT_SEARCH
MT_DHISTORY = _ollypy.MT_DHISTORY
class t_dump(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_dump, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_dump, name)
    __repr__ = _swig_repr
    __swig_setmethods__["table"] = _ollypy.t_dump_table_set
    __swig_getmethods__["table"] = _ollypy.t_dump_table_get
    if _newclass:table = _swig_property(_ollypy.t_dump_table_get, _ollypy.t_dump_table_set)
    __swig_setmethods__["dimmed"] = _ollypy.t_dump_dimmed_set
    __swig_getmethods__["dimmed"] = _ollypy.t_dump_dimmed_get
    if _newclass:dimmed = _swig_property(_ollypy.t_dump_dimmed_get, _ollypy.t_dump_dimmed_set)
    __swig_setmethods__["threadid"] = _ollypy.t_dump_threadid_set
    __swig_getmethods__["threadid"] = _ollypy.t_dump_threadid_get
    if _newclass:threadid = _swig_property(_ollypy.t_dump_threadid_get, _ollypy.t_dump_threadid_set)
    __swig_setmethods__["dumptype"] = _ollypy.t_dump_dumptype_set
    __swig_getmethods__["dumptype"] = _ollypy.t_dump_dumptype_get
    if _newclass:dumptype = _swig_property(_ollypy.t_dump_dumptype_get, _ollypy.t_dump_dumptype_set)
    __swig_setmethods__["specdump"] = _ollypy.t_dump_specdump_set
    __swig_getmethods__["specdump"] = _ollypy.t_dump_specdump_get
    if _newclass:specdump = _swig_property(_ollypy.t_dump_specdump_get, _ollypy.t_dump_specdump_set)
    __swig_setmethods__["menutype"] = _ollypy.t_dump_menutype_set
    __swig_getmethods__["menutype"] = _ollypy.t_dump_menutype_get
    if _newclass:menutype = _swig_property(_ollypy.t_dump_menutype_get, _ollypy.t_dump_menutype_set)
    __swig_setmethods__["itemwidth"] = _ollypy.t_dump_itemwidth_set
    __swig_getmethods__["itemwidth"] = _ollypy.t_dump_itemwidth_get
    if _newclass:itemwidth = _swig_property(_ollypy.t_dump_itemwidth_get, _ollypy.t_dump_itemwidth_set)
    __swig_setmethods__["showstackframes"] = _ollypy.t_dump_showstackframes_set
    __swig_getmethods__["showstackframes"] = _ollypy.t_dump_showstackframes_get
    if _newclass:showstackframes = _swig_property(_ollypy.t_dump_showstackframes_get, _ollypy.t_dump_showstackframes_set)
    __swig_setmethods__["showstacklocals"] = _ollypy.t_dump_showstacklocals_set
    __swig_getmethods__["showstacklocals"] = _ollypy.t_dump_showstacklocals_get
    if _newclass:showstacklocals = _swig_property(_ollypy.t_dump_showstacklocals_get, _ollypy.t_dump_showstacklocals_set)
    __swig_setmethods__["commentmode"] = _ollypy.t_dump_commentmode_set
    __swig_getmethods__["commentmode"] = _ollypy.t_dump_commentmode_get
    if _newclass:commentmode = _swig_property(_ollypy.t_dump_commentmode_get, _ollypy.t_dump_commentmode_set)
    __swig_setmethods__["filename"] = _ollypy.t_dump_filename_set
    __swig_getmethods__["filename"] = _ollypy.t_dump_filename_get
    if _newclass:filename = _swig_property(_ollypy.t_dump_filename_get, _ollypy.t_dump_filename_set)
    __swig_setmethods__["base"] = _ollypy.t_dump_base_set
    __swig_getmethods__["base"] = _ollypy.t_dump_base_get
    if _newclass:base = _swig_property(_ollypy.t_dump_base_get, _ollypy.t_dump_base_set)
    __swig_setmethods__["size"] = _ollypy.t_dump_size_set
    __swig_getmethods__["size"] = _ollypy.t_dump_size_get
    if _newclass:size = _swig_property(_ollypy.t_dump_size_get, _ollypy.t_dump_size_set)
    __swig_setmethods__["addr"] = _ollypy.t_dump_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_dump_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_dump_addr_get, _ollypy.t_dump_addr_set)
    __swig_setmethods__["lastaddr"] = _ollypy.t_dump_lastaddr_set
    __swig_getmethods__["lastaddr"] = _ollypy.t_dump_lastaddr_get
    if _newclass:lastaddr = _swig_property(_ollypy.t_dump_lastaddr_get, _ollypy.t_dump_lastaddr_set)
    __swig_setmethods__["sel0"] = _ollypy.t_dump_sel0_set
    __swig_getmethods__["sel0"] = _ollypy.t_dump_sel0_get
    if _newclass:sel0 = _swig_property(_ollypy.t_dump_sel0_get, _ollypy.t_dump_sel0_set)
    __swig_setmethods__["sel1"] = _ollypy.t_dump_sel1_set
    __swig_getmethods__["sel1"] = _ollypy.t_dump_sel1_get
    if _newclass:sel1 = _swig_property(_ollypy.t_dump_sel1_get, _ollypy.t_dump_sel1_set)
    __swig_setmethods__["startsel"] = _ollypy.t_dump_startsel_set
    __swig_getmethods__["startsel"] = _ollypy.t_dump_startsel_get
    if _newclass:startsel = _swig_property(_ollypy.t_dump_startsel_get, _ollypy.t_dump_startsel_set)
    __swig_setmethods__["captured"] = _ollypy.t_dump_captured_set
    __swig_getmethods__["captured"] = _ollypy.t_dump_captured_get
    if _newclass:captured = _swig_property(_ollypy.t_dump_captured_get, _ollypy.t_dump_captured_set)
    __swig_setmethods__["reladdr"] = _ollypy.t_dump_reladdr_set
    __swig_getmethods__["reladdr"] = _ollypy.t_dump_reladdr_get
    if _newclass:reladdr = _swig_property(_ollypy.t_dump_reladdr_get, _ollypy.t_dump_reladdr_set)
    __swig_setmethods__["relname"] = _ollypy.t_dump_relname_set
    __swig_getmethods__["relname"] = _ollypy.t_dump_relname_get
    if _newclass:relname = _swig_property(_ollypy.t_dump_relname_get, _ollypy.t_dump_relname_set)
    __swig_setmethods__["filecopy"] = _ollypy.t_dump_filecopy_set
    __swig_getmethods__["filecopy"] = _ollypy.t_dump_filecopy_get
    if _newclass:filecopy = _swig_property(_ollypy.t_dump_filecopy_get, _ollypy.t_dump_filecopy_set)
    __swig_setmethods__["backup"] = _ollypy.t_dump_backup_set
    __swig_getmethods__["backup"] = _ollypy.t_dump_backup_get
    if _newclass:backup = _swig_property(_ollypy.t_dump_backup_get, _ollypy.t_dump_backup_set)
    __swig_setmethods__["runtraceoffset"] = _ollypy.t_dump_runtraceoffset_set
    __swig_getmethods__["runtraceoffset"] = _ollypy.t_dump_runtraceoffset_get
    if _newclass:runtraceoffset = _swig_property(_ollypy.t_dump_runtraceoffset_get, _ollypy.t_dump_runtraceoffset_set)
    __swig_setmethods__["reserved"] = _ollypy.t_dump_reserved_set
    __swig_getmethods__["reserved"] = _ollypy.t_dump_reserved_get
    if _newclass:reserved = _swig_property(_ollypy.t_dump_reserved_get, _ollypy.t_dump_reserved_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_dump(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_dump
    __del__ = lambda self : None;
t_dump_swigregister = _ollypy.t_dump_swigregister
t_dump_swigregister(t_dump)

MAXTRACK = _ollypy.MAXTRACK
MOVETOP = _ollypy.MOVETOP
MOVEBOTTOM = _ollypy.MOVEBOTTOM
CONT_BROADCAST = _ollypy.CONT_BROADCAST
STOP_BROADCAST = _ollypy.STOP_BROADCAST
BKUP_CREATE = _ollypy.BKUP_CREATE
BKUP_VIEWDATA = _ollypy.BKUP_VIEWDATA
BKUP_VIEWCOPY = _ollypy.BKUP_VIEWCOPY
BKUP_LOADCOPY = _ollypy.BKUP_LOADCOPY
BKUP_SAVEDATA = _ollypy.BKUP_SAVEDATA
BKUP_SAVECOPY = _ollypy.BKUP_SAVECOPY
BKUP_DELETE = _ollypy.BKUP_DELETE
class t_ref(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_ref, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_ref, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ollypy.t_ref_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_ref_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_ref_addr_get, _ollypy.t_ref_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_ref_size_set
    __swig_getmethods__["size"] = _ollypy.t_ref_size_get
    if _newclass:size = _swig_property(_ollypy.t_ref_size_get, _ollypy.t_ref_size_set)
    __swig_setmethods__["type"] = _ollypy.t_ref_type_set
    __swig_getmethods__["type"] = _ollypy.t_ref_type_get
    if _newclass:type = _swig_property(_ollypy.t_ref_type_get, _ollypy.t_ref_type_set)
    __swig_setmethods__["dest"] = _ollypy.t_ref_dest_set
    __swig_getmethods__["dest"] = _ollypy.t_ref_dest_get
    if _newclass:dest = _swig_property(_ollypy.t_ref_dest_get, _ollypy.t_ref_dest_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_ref(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_ref
    __del__ = lambda self : None;
t_ref_swigregister = _ollypy.t_ref_swigregister
t_ref_swigregister(t_ref)

MEMBP_READ = _ollypy.MEMBP_READ
MEMBP_WRITE = _ollypy.MEMBP_WRITE
MEMBP_SFX = _ollypy.MEMBP_SFX
TR_HIT = _ollypy.TR_HIT
TR_SET = _ollypy.TR_SET
TR_RTSKIP = _ollypy.TR_RTSKIP
TR_RTRACE = _ollypy.TR_RTRACE
TR_TRACE = _ollypy.TR_TRACE
HB_FREE = _ollypy.HB_FREE
HB_CODE = _ollypy.HB_CODE
HB_ACCESS = _ollypy.HB_ACCESS
HB_WRITE = _ollypy.HB_WRITE
HB_IO = _ollypy.HB_IO
HB_ONESHOT = _ollypy.HB_ONESHOT
HB_STOPAN = _ollypy.HB_STOPAN
HB_TEMP = _ollypy.HB_TEMP
ATR_ADD = _ollypy.ATR_ADD
ATR_ADDPROC = _ollypy.ATR_ADDPROC
ATR_RESET = _ollypy.ATR_RESET
ATR_REMOVE = _ollypy.ATR_REMOVE
ATR_REMOVEALL = _ollypy.ATR_REMOVEALL
ATR_RESTORE = _ollypy.ATR_RESTORE
ATR_RTRADD = _ollypy.ATR_RTRADD
ATR_RTRJUMPS = _ollypy.ATR_RTRJUMPS
ATR_RTRENTRY = _ollypy.ATR_RTRENTRY
ATR_RTREMOVE = _ollypy.ATR_RTREMOVE
ATR_RTSKIP = _ollypy.ATR_RTSKIP
COND_NOBREAK = _ollypy.COND_NOBREAK
COND_LOGTRUE = _ollypy.COND_LOGTRUE
COND_LOGALWAYS = _ollypy.COND_LOGALWAYS
COND_ARGTRUE = _ollypy.COND_ARGTRUE
COND_ARGALWAYS = _ollypy.COND_ARGALWAYS
COND_BRKALWAYS = _ollypy.COND_BRKALWAYS
COND_MASK = _ollypy.COND_MASK
COND_FILLING = _ollypy.COND_FILLING
class t_bpoint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_bpoint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_bpoint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ollypy.t_bpoint_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_bpoint_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_bpoint_addr_get, _ollypy.t_bpoint_addr_set)
    __swig_setmethods__["dummy"] = _ollypy.t_bpoint_dummy_set
    __swig_getmethods__["dummy"] = _ollypy.t_bpoint_dummy_get
    if _newclass:dummy = _swig_property(_ollypy.t_bpoint_dummy_get, _ollypy.t_bpoint_dummy_set)
    __swig_setmethods__["type"] = _ollypy.t_bpoint_type_set
    __swig_getmethods__["type"] = _ollypy.t_bpoint_type_get
    if _newclass:type = _swig_property(_ollypy.t_bpoint_type_get, _ollypy.t_bpoint_type_set)
    __swig_setmethods__["cmd"] = _ollypy.t_bpoint_cmd_set
    __swig_getmethods__["cmd"] = _ollypy.t_bpoint_cmd_get
    if _newclass:cmd = _swig_property(_ollypy.t_bpoint_cmd_get, _ollypy.t_bpoint_cmd_set)
    __swig_setmethods__["passcount"] = _ollypy.t_bpoint_passcount_set
    __swig_getmethods__["passcount"] = _ollypy.t_bpoint_passcount_get
    if _newclass:passcount = _swig_property(_ollypy.t_bpoint_passcount_get, _ollypy.t_bpoint_passcount_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_bpoint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_bpoint
    __del__ = lambda self : None;
t_bpoint_swigregister = _ollypy.t_bpoint_swigregister
t_bpoint_swigregister(t_bpoint)

class t_hardbpoint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_hardbpoint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_hardbpoint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ollypy.t_hardbpoint_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_hardbpoint_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_hardbpoint_addr_get, _ollypy.t_hardbpoint_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_hardbpoint_size_set
    __swig_getmethods__["size"] = _ollypy.t_hardbpoint_size_get
    if _newclass:size = _swig_property(_ollypy.t_hardbpoint_size_get, _ollypy.t_hardbpoint_size_set)
    __swig_setmethods__["type"] = _ollypy.t_hardbpoint_type_set
    __swig_getmethods__["type"] = _ollypy.t_hardbpoint_type_get
    if _newclass:type = _swig_property(_ollypy.t_hardbpoint_type_get, _ollypy.t_hardbpoint_type_set)
    __swig_setmethods__["reserved"] = _ollypy.t_hardbpoint_reserved_set
    __swig_getmethods__["reserved"] = _ollypy.t_hardbpoint_reserved_get
    if _newclass:reserved = _swig_property(_ollypy.t_hardbpoint_reserved_get, _ollypy.t_hardbpoint_reserved_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_hardbpoint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_hardbpoint
    __del__ = lambda self : None;
t_hardbpoint_swigregister = _ollypy.t_hardbpoint_swigregister
t_hardbpoint_swigregister(t_hardbpoint)

class t_inject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_inject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_inject, name)
    __repr__ = _swig_repr
    __swig_setmethods__["codesize"] = _ollypy.t_inject_codesize_set
    __swig_getmethods__["codesize"] = _ollypy.t_inject_codesize_get
    if _newclass:codesize = _swig_property(_ollypy.t_inject_codesize_get, _ollypy.t_inject_codesize_set)
    __swig_setmethods__["code"] = _ollypy.t_inject_code_set
    __swig_getmethods__["code"] = _ollypy.t_inject_code_get
    if _newclass:code = _swig_property(_ollypy.t_inject_code_get, _ollypy.t_inject_code_set)
    __swig_setmethods__["stacksize"] = _ollypy.t_inject_stacksize_set
    __swig_getmethods__["stacksize"] = _ollypy.t_inject_stacksize_get
    if _newclass:stacksize = _swig_property(_ollypy.t_inject_stacksize_get, _ollypy.t_inject_stacksize_set)
    __swig_setmethods__["datatype"] = _ollypy.t_inject_datatype_set
    __swig_getmethods__["datatype"] = _ollypy.t_inject_datatype_get
    if _newclass:datatype = _swig_property(_ollypy.t_inject_datatype_get, _ollypy.t_inject_datatype_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_inject(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_inject
    __del__ = lambda self : None;
t_inject_swigregister = _ollypy.t_inject_swigregister
t_inject_swigregister(t_inject)

CPU_ASMHIST = _ollypy.CPU_ASMHIST
CPU_ASMCENTER = _ollypy.CPU_ASMCENTER
CPU_ASMFOCUS = _ollypy.CPU_ASMFOCUS
CPU_DUMPHIST = _ollypy.CPU_DUMPHIST
CPU_DUMPFIRST = _ollypy.CPU_DUMPFIRST
CPU_DUMPFOCUS = _ollypy.CPU_DUMPFOCUS
CPU_REGAUTO = _ollypy.CPU_REGAUTO
CPU_RUNTRACE = _ollypy.CPU_RUNTRACE
CPU_STACKFOCUS = _ollypy.CPU_STACKFOCUS
CPU_NOCREATE = _ollypy.CPU_NOCREATE
CPU_REDRAW = _ollypy.CPU_REDRAW
CPU_NOFOCUS = _ollypy.CPU_NOFOCUS
STEP_SAME = _ollypy.STEP_SAME
STEP_RUN = _ollypy.STEP_RUN
STEP_OVER = _ollypy.STEP_OVER
STEP_IN = _ollypy.STEP_IN
STEP_SKIP = _ollypy.STEP_SKIP
STAT_NONE = _ollypy.STAT_NONE
STAT_STOPPED = _ollypy.STAT_STOPPED
STAT_EVENT = _ollypy.STAT_EVENT
STAT_RUNNING = _ollypy.STAT_RUNNING
STAT_FINISHED = _ollypy.STAT_FINISHED
STAT_CLOSING = _ollypy.STAT_CLOSING
DASC_TEST = _ollypy.DASC_TEST
DASC_NOHEX = _ollypy.DASC_NOHEX
DASC_ASCII = _ollypy.DASC_ASCII
DASC_PASCAL = _ollypy.DASC_PASCAL
FIRST_CODE_LINE = _ollypy.FIRST_CODE_LINE
class t_sourceline(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_sourceline, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_sourceline, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ollypy.t_sourceline_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_sourceline_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_sourceline_addr_get, _ollypy.t_sourceline_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_sourceline_size_set
    __swig_getmethods__["size"] = _ollypy.t_sourceline_size_get
    if _newclass:size = _swig_property(_ollypy.t_sourceline_size_get, _ollypy.t_sourceline_size_set)
    __swig_setmethods__["srcname"] = _ollypy.t_sourceline_srcname_set
    __swig_getmethods__["srcname"] = _ollypy.t_sourceline_srcname_get
    if _newclass:srcname = _swig_property(_ollypy.t_sourceline_srcname_get, _ollypy.t_sourceline_srcname_set)
    __swig_setmethods__["line"] = _ollypy.t_sourceline_line_set
    __swig_getmethods__["line"] = _ollypy.t_sourceline_line_get
    if _newclass:line = _swig_property(_ollypy.t_sourceline_line_get, _ollypy.t_sourceline_line_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_sourceline(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_sourceline
    __del__ = lambda self : None;
t_sourceline_swigregister = _ollypy.t_sourceline_swigregister
t_sourceline_swigregister(t_sourceline)

MAXNEST = _ollypy.MAXNEST
class t_window(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_window, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_window, name)
    __repr__ = _swig_repr
    __swig_setmethods__["hwnd"] = _ollypy.t_window_hwnd_set
    __swig_getmethods__["hwnd"] = _ollypy.t_window_hwnd_get
    if _newclass:hwnd = _swig_property(_ollypy.t_window_hwnd_get, _ollypy.t_window_hwnd_set)
    __swig_setmethods__["dummy"] = _ollypy.t_window_dummy_set
    __swig_getmethods__["dummy"] = _ollypy.t_window_dummy_get
    if _newclass:dummy = _swig_property(_ollypy.t_window_dummy_get, _ollypy.t_window_dummy_set)
    __swig_setmethods__["type"] = _ollypy.t_window_type_set
    __swig_getmethods__["type"] = _ollypy.t_window_type_get
    if _newclass:type = _swig_property(_ollypy.t_window_type_get, _ollypy.t_window_type_set)
    __swig_setmethods__["parenthw"] = _ollypy.t_window_parenthw_set
    __swig_getmethods__["parenthw"] = _ollypy.t_window_parenthw_get
    if _newclass:parenthw = _swig_property(_ollypy.t_window_parenthw_get, _ollypy.t_window_parenthw_set)
    __swig_setmethods__["winproc"] = _ollypy.t_window_winproc_set
    __swig_getmethods__["winproc"] = _ollypy.t_window_winproc_get
    if _newclass:winproc = _swig_property(_ollypy.t_window_winproc_get, _ollypy.t_window_winproc_set)
    __swig_setmethods__["threadid"] = _ollypy.t_window_threadid_set
    __swig_getmethods__["threadid"] = _ollypy.t_window_threadid_get
    if _newclass:threadid = _swig_property(_ollypy.t_window_threadid_get, _ollypy.t_window_threadid_set)
    __swig_setmethods__["exstyle"] = _ollypy.t_window_exstyle_set
    __swig_getmethods__["exstyle"] = _ollypy.t_window_exstyle_get
    if _newclass:exstyle = _swig_property(_ollypy.t_window_exstyle_get, _ollypy.t_window_exstyle_set)
    __swig_setmethods__["style"] = _ollypy.t_window_style_set
    __swig_getmethods__["style"] = _ollypy.t_window_style_get
    if _newclass:style = _swig_property(_ollypy.t_window_style_get, _ollypy.t_window_style_set)
    __swig_setmethods__["id"] = _ollypy.t_window_id_set
    __swig_getmethods__["id"] = _ollypy.t_window_id_get
    if _newclass:id = _swig_property(_ollypy.t_window_id_get, _ollypy.t_window_id_set)
    __swig_setmethods__["classproc"] = _ollypy.t_window_classproc_set
    __swig_getmethods__["classproc"] = _ollypy.t_window_classproc_get
    if _newclass:classproc = _swig_property(_ollypy.t_window_classproc_get, _ollypy.t_window_classproc_set)
    __swig_setmethods__["child"] = _ollypy.t_window_child_set
    __swig_getmethods__["child"] = _ollypy.t_window_child_get
    if _newclass:child = _swig_property(_ollypy.t_window_child_get, _ollypy.t_window_child_set)
    __swig_setmethods__["level"] = _ollypy.t_window_level_set
    __swig_getmethods__["level"] = _ollypy.t_window_level_get
    if _newclass:level = _swig_property(_ollypy.t_window_level_get, _ollypy.t_window_level_set)
    __swig_setmethods__["sibling"] = _ollypy.t_window_sibling_set
    __swig_getmethods__["sibling"] = _ollypy.t_window_sibling_get
    if _newclass:sibling = _swig_property(_ollypy.t_window_sibling_get, _ollypy.t_window_sibling_set)
    __swig_setmethods__["byparent"] = _ollypy.t_window_byparent_set
    __swig_getmethods__["byparent"] = _ollypy.t_window_byparent_get
    if _newclass:byparent = _swig_property(_ollypy.t_window_byparent_get, _ollypy.t_window_byparent_set)
    __swig_setmethods__["title"] = _ollypy.t_window_title_set
    __swig_getmethods__["title"] = _ollypy.t_window_title_get
    if _newclass:title = _swig_property(_ollypy.t_window_title_get, _ollypy.t_window_title_set)
    __swig_setmethods__["classname"] = _ollypy.t_window_classname_set
    __swig_getmethods__["classname"] = _ollypy.t_window_classname_get
    if _newclass:classname = _swig_property(_ollypy.t_window_classname_get, _ollypy.t_window_classname_set)
    __swig_setmethods__["tree"] = _ollypy.t_window_tree_set
    __swig_getmethods__["tree"] = _ollypy.t_window_tree_get
    if _newclass:tree = _swig_property(_ollypy.t_window_tree_get, _ollypy.t_window_tree_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_window(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_window
    __del__ = lambda self : None;
t_window_swigregister = _ollypy.t_window_swigregister
t_window_swigregister(t_window)

class t_patch(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_patch, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_patch, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ollypy.t_patch_addr_set
    __swig_getmethods__["addr"] = _ollypy.t_patch_addr_get
    if _newclass:addr = _swig_property(_ollypy.t_patch_addr_get, _ollypy.t_patch_addr_set)
    __swig_setmethods__["size"] = _ollypy.t_patch_size_set
    __swig_getmethods__["size"] = _ollypy.t_patch_size_get
    if _newclass:size = _swig_property(_ollypy.t_patch_size_get, _ollypy.t_patch_size_set)
    __swig_setmethods__["type"] = _ollypy.t_patch_type_set
    __swig_getmethods__["type"] = _ollypy.t_patch_type_get
    if _newclass:type = _swig_property(_ollypy.t_patch_type_get, _ollypy.t_patch_type_set)
    __swig_setmethods__["orig"] = _ollypy.t_patch_orig_set
    __swig_getmethods__["orig"] = _ollypy.t_patch_orig_get
    if _newclass:orig = _swig_property(_ollypy.t_patch_orig_get, _ollypy.t_patch_orig_set)
    __swig_setmethods__["mod"] = _ollypy.t_patch_mod_set
    __swig_getmethods__["mod"] = _ollypy.t_patch_mod_get
    if _newclass:mod = _swig_property(_ollypy.t_patch_mod_get, _ollypy.t_patch_mod_set)
    def __init__(self, *args): 
        this = _ollypy.new_t_patch(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ollypy.delete_t_patch
    __del__ = lambda self : None;
t_patch_swigregister = _ollypy.t_patch_swigregister
t_patch_swigregister(t_patch)

VAL_HINST = _ollypy.VAL_HINST
VAL_HWMAIN = _ollypy.VAL_HWMAIN
VAL_HWCLIENT = _ollypy.VAL_HWCLIENT
VAL_NCOLORS = _ollypy.VAL_NCOLORS
VAL_COLORS = _ollypy.VAL_COLORS
VAL_BRUSHES = _ollypy.VAL_BRUSHES
VAL_PENS = _ollypy.VAL_PENS
VAL_NFONTS = _ollypy.VAL_NFONTS
VAL_FONTS = _ollypy.VAL_FONTS
VAL_FONTNAMES = _ollypy.VAL_FONTNAMES
VAL_FONTWIDTHS = _ollypy.VAL_FONTWIDTHS
VAL_FONTHEIGHTS = _ollypy.VAL_FONTHEIGHTS
VAL_NFIXFONTS = _ollypy.VAL_NFIXFONTS
VAL_DEFFONT = _ollypy.VAL_DEFFONT
VAL_NSCHEMES = _ollypy.VAL_NSCHEMES
VAL_SCHEMES = _ollypy.VAL_SCHEMES
VAL_DEFSCHEME = _ollypy.VAL_DEFSCHEME
VAL_DEFHSCROLL = _ollypy.VAL_DEFHSCROLL
VAL_RESTOREWINDOWPOS = _ollypy.VAL_RESTOREWINDOWPOS
VAL_HPROCESS = _ollypy.VAL_HPROCESS
VAL_PROCESSID = _ollypy.VAL_PROCESSID
VAL_HMAINTHREAD = _ollypy.VAL_HMAINTHREAD
VAL_MAINTHREADID = _ollypy.VAL_MAINTHREADID
VAL_MAINBASE = _ollypy.VAL_MAINBASE
VAL_PROCESSNAME = _ollypy.VAL_PROCESSNAME
VAL_EXEFILENAME = _ollypy.VAL_EXEFILENAME
VAL_CURRENTDIR = _ollypy.VAL_CURRENTDIR
VAL_SYSTEMDIR = _ollypy.VAL_SYSTEMDIR
VAL_DECODEANYIP = _ollypy.VAL_DECODEANYIP
VAL_PASCALSTRINGS = _ollypy.VAL_PASCALSTRINGS
VAL_ONLYASCII = _ollypy.VAL_ONLYASCII
VAL_DIACRITICALS = _ollypy.VAL_DIACRITICALS
VAL_GLOBALSEARCH = _ollypy.VAL_GLOBALSEARCH
VAL_ALIGNEDSEARCH = _ollypy.VAL_ALIGNEDSEARCH
VAL_IGNORECASE = _ollypy.VAL_IGNORECASE
VAL_SEARCHMARGIN = _ollypy.VAL_SEARCHMARGIN
VAL_KEEPSELSIZE = _ollypy.VAL_KEEPSELSIZE
VAL_MMXDISPLAY = _ollypy.VAL_MMXDISPLAY
VAL_WINDOWFONT = _ollypy.VAL_WINDOWFONT
VAL_TABSTOPS = _ollypy.VAL_TABSTOPS
VAL_MODULES = _ollypy.VAL_MODULES
VAL_MEMORY = _ollypy.VAL_MEMORY
VAL_THREADS = _ollypy.VAL_THREADS
VAL_BREAKPOINTS = _ollypy.VAL_BREAKPOINTS
VAL_REFERENCES = _ollypy.VAL_REFERENCES
VAL_SOURCELIST = _ollypy.VAL_SOURCELIST
VAL_WATCHES = _ollypy.VAL_WATCHES
VAL_CPUFEATURES = _ollypy.VAL_CPUFEATURES
VAL_TRACEFILE = _ollypy.VAL_TRACEFILE
VAL_ALIGNDIALOGS = _ollypy.VAL_ALIGNDIALOGS
VAL_CPUDASM = _ollypy.VAL_CPUDASM
VAL_CPUDDUMP = _ollypy.VAL_CPUDDUMP
VAL_CPUDSTACK = _ollypy.VAL_CPUDSTACK
VAL_APIHELP = _ollypy.VAL_APIHELP
VAL_HARDBP = _ollypy.VAL_HARDBP
VAL_PATCHES = _ollypy.VAL_PATCHES
VAL_HINTS = _ollypy.VAL_HINTS
PM_MAIN = _ollypy.PM_MAIN
PM_DUMP = _ollypy.PM_DUMP
PM_MODULES = _ollypy.PM_MODULES
PM_MEMORY = _ollypy.PM_MEMORY
PM_THREADS = _ollypy.PM_THREADS
PM_BREAKPOINTS = _ollypy.PM_BREAKPOINTS
PM_REFERENCES = _ollypy.PM_REFERENCES
PM_RTRACE = _ollypy.PM_RTRACE
PM_WATCHES = _ollypy.PM_WATCHES
PM_WINDOWS = _ollypy.PM_WINDOWS
PM_DISASM = _ollypy.PM_DISASM
PM_CPUDUMP = _ollypy.PM_CPUDUMP
PM_CPUSTACK = _ollypy.PM_CPUSTACK
PM_CPUREGS = _ollypy.PM_CPUREGS
PP_MAIN = _ollypy.PP_MAIN
PP_EVENT = _ollypy.PP_EVENT
PP_PAUSE = _ollypy.PP_PAUSE
PP_TERMINATED = _ollypy.PP_TERMINATED
PP_BYPROGRAM = _ollypy.PP_BYPROGRAM
PP_INT3BREAK = _ollypy.PP_INT3BREAK
PP_MEMBREAK = _ollypy.PP_MEMBREAK
PP_HWBREAK = _ollypy.PP_HWBREAK
PP_SINGLESTEP = _ollypy.PP_SINGLESTEP
PP_EXCEPTION = _ollypy.PP_EXCEPTION
PP_ACCESS = _ollypy.PP_ACCESS
PP_GUARDED = _ollypy.PP_GUARDED
MI_SIGNATURE = _ollypy.MI_SIGNATURE
MI_VERSION = _ollypy.MI_VERSION
MI_FILENAME = _ollypy.MI_FILENAME
MI_FILESIZE = _ollypy.MI_FILESIZE
MI_TIMESTAMP = _ollypy.MI_TIMESTAMP
MI_SFXENTRY = _ollypy.MI_SFXENTRY
MI_PATCH = _ollypy.MI_PATCH
MI_USER = _ollypy.MI_USER
MI_PROCDATA = _ollypy.MI_PROCDATA
MI_SWDATA = _ollypy.MI_SWDATA
MI_CALLFINT = _ollypy.MI_CALLFINT
MI_CALLFMOD = _ollypy.MI_CALLFMOD
MI_CALLFABS = _ollypy.MI_CALLFABS
MI_INT3BREAK = _ollypy.MI_INT3BREAK
MI_INT3BRKC = _ollypy.MI_INT3BRKC
MI_HDWRBREAK = _ollypy.MI_HDWRBREAK
MI_JDDATA = _ollypy.MI_JDDATA
MI_ANALYSIS = _ollypy.MI_ANALYSIS
MI_ANALPACK = _ollypy.MI_ANALPACK
MI_AHINT = _ollypy.MI_AHINT
MI_TRACE = _ollypy.MI_TRACE
MI_TRACEPACK = _ollypy.MI_TRACEPACK
MI_CODECRC = _ollypy.MI_CODECRC
MI_SAVEAREA = _ollypy.MI_SAVEAREA
MI_END = _ollypy.MI_END
MI_WINJUG = _ollypy.MI_WINJUG
MI_WINJU1 = _ollypy.MI_WINJU1
MI_WINJU2 = _ollypy.MI_WINJU2
MI_WINJU3 = _ollypy.MI_WINJU3
MI_APPST = _ollypy.MI_APPST
get_ulongarray_value = _ollypy.get_ulongarray_value
set_ulongarray_value = _ollypy.set_ulongarray_value
get_chararray_value = _ollypy.get_chararray_value
set_chararray_value = _ollypy.set_chararray_value
Addtolist = _ollypy.Addtolist
Updatelist = _ollypy.Updatelist
Createlistwindow = _ollypy.Createlistwindow
Error = _ollypy.Error
Message = _ollypy.Message
Infoline = _ollypy.Infoline
Progress = _ollypy.Progress
Flash = _ollypy.Flash
Decodeaddress = _ollypy.Decodeaddress
Decoderelativeoffset = _ollypy.Decoderelativeoffset
Decoderange = _ollypy.Decoderange
Isretaddr = _ollypy.Isretaddr
Followcall = _ollypy.Followcall
Browsefilename = _ollypy.Browsefilename
OpenEXEfile = _ollypy.OpenEXEfile
Attachtoactiveprocess = _ollypy.Attachtoactiveprocess
Animate = _ollypy.Animate
Insertname = _ollypy.Insertname
Quickinsertname = _ollypy.Quickinsertname
Mergequicknames = _ollypy.Mergequicknames
Discardquicknames = _ollypy.Discardquicknames
Findname = _ollypy.Findname
Decodename = _ollypy.Decodename
Findnextname = _ollypy.Findnextname
Findlabel = _ollypy.Findlabel
Deletenamerange = _ollypy.Deletenamerange
Findlabelbyname = _ollypy.Findlabelbyname
Findimportbyname = _ollypy.Findimportbyname
Demanglename = _ollypy.Demanglename
Findsymbolicname = _ollypy.Findsymbolicname
Readcommand = _ollypy.Readcommand
Disasm = _ollypy.Disasm
Disassembleback = _ollypy.Disassembleback
Disassembleforward = _ollypy.Disassembleforward
Issuspicious = _ollypy.Issuspicious
Isfilling = _ollypy.Isfilling
Assemble = _ollypy.Assemble
Checkcondition = _ollypy.Checkcondition
Expression = _ollypy.Expression
Createthreadwindow = _ollypy.Createthreadwindow
Findthread = _ollypy.Findthread
Decodethreadname = _ollypy.Decodethreadname
Getcputhreadid = _ollypy.Getcputhreadid
Runsinglethread = _ollypy.Runsinglethread
Restoreallthreads = _ollypy.Restoreallthreads
Listmemory = _ollypy.Listmemory
Findmemory = _ollypy.Findmemory
Guardmemory = _ollypy.Guardmemory
Havecopyofmemory = _ollypy.Havecopyofmemory
Readmemory = _ollypy.Readmemory
Writememory = _ollypy.Writememory
Findmodule = _ollypy.Findmodule
Findfixup = _ollypy.Findfixup
Finddecode = _ollypy.Finddecode
Findfileoffset = _ollypy.Findfileoffset
Analysecode = _ollypy.Analysecode
Findreferences = _ollypy.Findreferences
Findstrings = _ollypy.Findstrings
Findalldllcalls = _ollypy.Findalldllcalls
Findallcommands = _ollypy.Findallcommands
Walkreference = _ollypy.Walkreference
Setbreakpoint = _ollypy.Setbreakpoint
Setbreakpointext = _ollypy.Setbreakpointext
Manualbreakpoint = _ollypy.Manualbreakpoint
Deletebreakpoints = _ollypy.Deletebreakpoints
Getbreakpointtype = _ollypy.Getbreakpointtype
Getbreakpointtypecount = _ollypy.Getbreakpointtypecount
Getnextbreakpoint = _ollypy.Getnextbreakpoint
Tempbreakpoint = _ollypy.Tempbreakpoint
Hardbreakpoints = _ollypy.Hardbreakpoints
Sethardwarebreakpoint = _ollypy.Sethardwarebreakpoint
Deletehardwarebreakpoint = _ollypy.Deletehardwarebreakpoint
Deletehardwarebreakbyaddr = _ollypy.Deletehardwarebreakbyaddr
Setmembreakpoint = _ollypy.Setmembreakpoint
Findhittrace = _ollypy.Findhittrace
Modifyhittrace = _ollypy.Modifyhittrace
Creatertracewindow = _ollypy.Creatertracewindow
Settracecondition = _ollypy.Settracecondition
Settracecount = _ollypy.Settracecount
Settracepauseoncommands = _ollypy.Settracepauseoncommands
Startruntrace = _ollypy.Startruntrace
Deleteruntrace = _ollypy.Deleteruntrace
Runtracesize = _ollypy.Runtracesize
Findprevruntraceip = _ollypy.Findprevruntraceip
Findnextruntraceip = _ollypy.Findnextruntraceip
Getruntraceregisters = _ollypy.Getruntraceregisters
Getruntraceprofile = _ollypy.Getruntraceprofile
Scrollruntracewindow = _ollypy.Scrollruntracewindow
Createprofilewindow = _ollypy.Createprofilewindow
Setcpu = _ollypy.Setcpu
Setdisasm = _ollypy.Setdisasm
Redrawdisassembler = _ollypy.Redrawdisassembler
Getdisassemblerrange = _ollypy.Getdisassemblerrange
Findprocbegin = _ollypy.Findprocbegin
Findprocend = _ollypy.Findprocend
Findprevproc = _ollypy.Findprevproc
Findnextproc = _ollypy.Findnextproc
Getproclimits = _ollypy.Getproclimits
Sendshortcut = _ollypy.Sendshortcut
Getstatus = _ollypy.Getstatus
Go = _ollypy.Go
Suspendprocess = _ollypy.Suspendprocess
Decodeascii = _ollypy.Decodeascii
Decodeunicode = _ollypy.Decodeunicode
Createwatchwindow = _ollypy.Createwatchwindow
Deletewatch = _ollypy.Deletewatch
Insertwatch = _ollypy.Insertwatch
Getwatch = _ollypy.Getwatch
Createwinwindow = _ollypy.Createwinwindow
Createpatchwindow = _ollypy.Createpatchwindow


