# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.35
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _ODBG_pyth
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


TEXTLEN = _ODBG_pyth.TEXTLEN
ARGLEN = _ODBG_pyth.ARGLEN
USERLEN = _ODBG_pyth.USERLEN
SHORTLEN = _ODBG_pyth.SHORTLEN
BLACK = _ODBG_pyth.BLACK
BLUE = _ODBG_pyth.BLUE
GREEN = _ODBG_pyth.GREEN
CYAN = _ODBG_pyth.CYAN
RED = _ODBG_pyth.RED
MAGENTA = _ODBG_pyth.MAGENTA
BROWN = _ODBG_pyth.BROWN
LIGHTGRAY = _ODBG_pyth.LIGHTGRAY
DARKGRAY = _ODBG_pyth.DARKGRAY
LIGHTBLUE = _ODBG_pyth.LIGHTBLUE
LIGHTGREEN = _ODBG_pyth.LIGHTGREEN
LIGHTCYAN = _ODBG_pyth.LIGHTCYAN
LIGHTRED = _ODBG_pyth.LIGHTRED
LIGHTMAGENTA = _ODBG_pyth.LIGHTMAGENTA
YELLOW = _ODBG_pyth.YELLOW
WHITE = _ODBG_pyth.WHITE
MINT = _ODBG_pyth.MINT
SKYBLUE = _ODBG_pyth.SKYBLUE
IVORY = _ODBG_pyth.IVORY
GRAY = _ODBG_pyth.GRAY
NCOLORS = _ODBG_pyth.NCOLORS
BKTRANSP = _ODBG_pyth.BKTRANSP
BKBLACK = _ODBG_pyth.BKBLACK
BKGRAY = _ODBG_pyth.BKGRAY
BKWHITE = _ODBG_pyth.BKWHITE
BKCYAN = _ODBG_pyth.BKCYAN
BKGREEN = _ODBG_pyth.BKGREEN
BKRED = _ODBG_pyth.BKRED
BKYELLOW = _ODBG_pyth.BKYELLOW
BLACKWHITE = _ODBG_pyth.BLACKWHITE
BLUEGOLD = _ODBG_pyth.BLUEGOLD
SKYWIND = _ODBG_pyth.SKYWIND
NIGHTSTARS = _ODBG_pyth.NIGHTSTARS
SCHEME4 = _ODBG_pyth.SCHEME4
SCHEME5 = _ODBG_pyth.SCHEME5
SCHEME6 = _ODBG_pyth.SCHEME6
SCHEME7 = _ODBG_pyth.SCHEME7
FIXEDFONT = _ODBG_pyth.FIXEDFONT
TERMINAL6 = _ODBG_pyth.TERMINAL6
FIXEDSYS = _ODBG_pyth.FIXEDSYS
COURIERFONT = _ODBG_pyth.COURIERFONT
LUCIDACONS = _ODBG_pyth.LUCIDACONS
FONT5 = _ODBG_pyth.FONT5
FONT6 = _ODBG_pyth.FONT6
FONT7 = _ODBG_pyth.FONT7
MAINFONT = _ODBG_pyth.MAINFONT
SYSFONT = _ODBG_pyth.SYSFONT
INFOFONT = _ODBG_pyth.INFOFONT
ADC_DEFAULT = _ODBG_pyth.ADC_DEFAULT
ADC_DIFFMOD = _ODBG_pyth.ADC_DIFFMOD
ADC_NOMODNAME = _ODBG_pyth.ADC_NOMODNAME
ADC_VALID = _ODBG_pyth.ADC_VALID
ADC_INMODULE = _ODBG_pyth.ADC_INMODULE
ADC_SAMEMOD = _ODBG_pyth.ADC_SAMEMOD
ADC_SYMBOL = _ODBG_pyth.ADC_SYMBOL
ADC_JUMP = _ODBG_pyth.ADC_JUMP
ADC_OFFSET = _ODBG_pyth.ADC_OFFSET
ADC_STRING = _ODBG_pyth.ADC_STRING
ADC_ENTRY = _ODBG_pyth.ADC_ENTRY
ADC_UPPERCASE = _ODBG_pyth.ADC_UPPERCASE
ADC_WIDEFORM = _ODBG_pyth.ADC_WIDEFORM
ADC_NONTRIVIAL = _ODBG_pyth.ADC_NONTRIVIAL
ADC_DYNAMIC = _ODBG_pyth.ADC_DYNAMIC
PLAINASCII = _ODBG_pyth.PLAINASCII
DIACRITICAL = _ODBG_pyth.DIACRITICAL
RAREASCII = _ODBG_pyth.RAREASCII
MAXCMDSIZE = _ODBG_pyth.MAXCMDSIZE
NSEQ = _ODBG_pyth.NSEQ
NMODELS = _ODBG_pyth.NMODELS
DIA_ASKGLOBAL = _ODBG_pyth.DIA_ASKGLOBAL
DIA_HEXONLY = _ODBG_pyth.DIA_HEXONLY
DIA_ALIGNED = _ODBG_pyth.DIA_ALIGNED
DIA_DEFHEX = _ODBG_pyth.DIA_DEFHEX
DIA_DEFASCII = _ODBG_pyth.DIA_DEFASCII
DIA_DEFUNICODE = _ODBG_pyth.DIA_DEFUNICODE
DIA_SEARCH = _ODBG_pyth.DIA_SEARCH
DIA_HISTORY = _ODBG_pyth.DIA_HISTORY
ANIMATE_OFF = _ODBG_pyth.ANIMATE_OFF
ANIMATE_IN = _ODBG_pyth.ANIMATE_IN
ANIMATE_OVER = _ODBG_pyth.ANIMATE_OVER
ANIMATE_RET = _ODBG_pyth.ANIMATE_RET
ANIMATE_SKPRET = _ODBG_pyth.ANIMATE_SKPRET
ANIMATE_USER = _ODBG_pyth.ANIMATE_USER
ANIMATE_TRIN = _ODBG_pyth.ANIMATE_TRIN
ANIMATE_TROVER = _ODBG_pyth.ANIMATE_TROVER
ANIMATE_STOP = _ODBG_pyth.ANIMATE_STOP
NBAR = _ODBG_pyth.NBAR
BAR_PRESSED = _ODBG_pyth.BAR_PRESSED
BAR_DISABLED = _ODBG_pyth.BAR_DISABLED
BAR_NOSORT = _ODBG_pyth.BAR_NOSORT
BAR_NORESIZE = _ODBG_pyth.BAR_NORESIZE
BAR_BUTTON = _ODBG_pyth.BAR_BUTTON
BAR_SHIFTSEL = _ODBG_pyth.BAR_SHIFTSEL
CAPT_FREE = _ODBG_pyth.CAPT_FREE
TABLE_DIR = _ODBG_pyth.TABLE_DIR
TABLE_COPYMENU = _ODBG_pyth.TABLE_COPYMENU
TABLE_SORTMENU = _ODBG_pyth.TABLE_SORTMENU
TABLE_APPMENU = _ODBG_pyth.TABLE_APPMENU
TABLE_WIDECOL = _ODBG_pyth.TABLE_WIDECOL
TABLE_USERAPP = _ODBG_pyth.TABLE_USERAPP
TABLE_USERDEF = _ODBG_pyth.TABLE_USERDEF
TABLE_NOHSCR = _ODBG_pyth.TABLE_NOHSCR
TABLE_SAVEPOS = _ODBG_pyth.TABLE_SAVEPOS
TABLE_CPU = _ODBG_pyth.TABLE_CPU
TABLE_FASTSEL = _ODBG_pyth.TABLE_FASTSEL
TABLE_COLSEL = _ODBG_pyth.TABLE_COLSEL
TABLE_SAVEAPP = _ODBG_pyth.TABLE_SAVEAPP
TABLE_HILMENU = _ODBG_pyth.TABLE_HILMENU
TABLE_ONTOP = _ODBG_pyth.TABLE_ONTOP
DRAW_NORMAL = _ODBG_pyth.DRAW_NORMAL
DRAW_GRAY = _ODBG_pyth.DRAW_GRAY
DRAW_HILITE = _ODBG_pyth.DRAW_HILITE
DRAW_UL = _ODBG_pyth.DRAW_UL
DRAW_SELECT = _ODBG_pyth.DRAW_SELECT
DRAW_EIP = _ODBG_pyth.DRAW_EIP
DRAW_BREAK = _ODBG_pyth.DRAW_BREAK
DRAW_GRAPH = _ODBG_pyth.DRAW_GRAPH
DRAW_DIRECT = _ODBG_pyth.DRAW_DIRECT
DRAW_MASK = _ODBG_pyth.DRAW_MASK
DRAW_EXTSEL = _ODBG_pyth.DRAW_EXTSEL
DRAW_UNICODE = _ODBG_pyth.DRAW_UNICODE
DRAW_TOP = _ODBG_pyth.DRAW_TOP
DRAW_BOTTOM = _ODBG_pyth.DRAW_BOTTOM
D_SPACE = _ODBG_pyth.D_SPACE
D_SEP = _ODBG_pyth.D_SEP
D_BEGIN = _ODBG_pyth.D_BEGIN
D_BODY = _ODBG_pyth.D_BODY
D_ENTRY = _ODBG_pyth.D_ENTRY
D_LEAF = _ODBG_pyth.D_LEAF
D_END = _ODBG_pyth.D_END
D_SINGLE = _ODBG_pyth.D_SINGLE
D_ENDBEG = _ODBG_pyth.D_ENDBEG
D_POINT = _ODBG_pyth.D_POINT
D_JMPUP = _ODBG_pyth.D_JMPUP
D_JMPOUT = _ODBG_pyth.D_JMPOUT
D_JMPDN = _ODBG_pyth.D_JMPDN
D_PATHUP = _ODBG_pyth.D_PATHUP
D_GRAYUP = _ODBG_pyth.D_GRAYUP
D_PATH = _ODBG_pyth.D_PATH
D_GRAYPATH = _ODBG_pyth.D_GRAYPATH
D_PATHDN = _ODBG_pyth.D_PATHDN
D_GRAYDN = _ODBG_pyth.D_GRAYDN
D_PATHUPEND = _ODBG_pyth.D_PATHUPEND
D_GRAYUPEND = _ODBG_pyth.D_GRAYUPEND
D_PATHDNEND = _ODBG_pyth.D_PATHDNEND
D_GRAYDNEND = _ODBG_pyth.D_GRAYDNEND
D_SWTOP = _ODBG_pyth.D_SWTOP
D_SWBODY = _ODBG_pyth.D_SWBODY
D_CASE = _ODBG_pyth.D_CASE
D_LASTCASE = _ODBG_pyth.D_LASTCASE
TY_NEW = _ODBG_pyth.TY_NEW
TY_CONFIRMED = _ODBG_pyth.TY_CONFIRMED
TY_MAIN = _ODBG_pyth.TY_MAIN
TY_INVALID = _ODBG_pyth.TY_INVALID
TY_SELECTED = _ODBG_pyth.TY_SELECTED
TY_REPORTED = _ODBG_pyth.TY_REPORTED
TY_REFERENCE = _ODBG_pyth.TY_REFERENCE
TY_ORIGIN = _ODBG_pyth.TY_ORIGIN
TY_STOPAN = _ODBG_pyth.TY_STOPAN
TY_SET = _ODBG_pyth.TY_SET
TY_ACTIVE = _ODBG_pyth.TY_ACTIVE
TY_DISABLED = _ODBG_pyth.TY_DISABLED
TY_ONESHOT = _ODBG_pyth.TY_ONESHOT
TY_TEMP = _ODBG_pyth.TY_TEMP
TY_KEEPCODE = _ODBG_pyth.TY_KEEPCODE
TY_KEEPCOND = _ODBG_pyth.TY_KEEPCOND
TY_NOUPDATE = _ODBG_pyth.TY_NOUPDATE
TY_RTRACE = _ODBG_pyth.TY_RTRACE
TY_EXPORT = _ODBG_pyth.TY_EXPORT
TY_IMPORT = _ODBG_pyth.TY_IMPORT
TY_LIBRARY = _ODBG_pyth.TY_LIBRARY
TY_LABEL = _ODBG_pyth.TY_LABEL
TY_ANYNAME = _ODBG_pyth.TY_ANYNAME
TY_KNOWN = _ODBG_pyth.TY_KNOWN
TY_DEFHEAP = _ODBG_pyth.TY_DEFHEAP
TY_HEAP = _ODBG_pyth.TY_HEAP
TY_SFX = _ODBG_pyth.TY_SFX
TY_CODE = _ODBG_pyth.TY_CODE
TY_DATA = _ODBG_pyth.TY_DATA
TY_IMPDATA = _ODBG_pyth.TY_IMPDATA
TY_EXPDATA = _ODBG_pyth.TY_EXPDATA
TY_RSRC = _ODBG_pyth.TY_RSRC
TY_RELOC = _ODBG_pyth.TY_RELOC
TY_STACK = _ODBG_pyth.TY_STACK
TY_THREAD = _ODBG_pyth.TY_THREAD
TY_HEADER = _ODBG_pyth.TY_HEADER
TY_ANYMEM = _ODBG_pyth.TY_ANYMEM
TY_GUARDED = _ODBG_pyth.TY_GUARDED
TY_PURE = _ODBG_pyth.TY_PURE
TY_PASCAL = _ODBG_pyth.TY_PASCAL
TY_C = _ODBG_pyth.TY_C
TY_NOTENTRY = _ODBG_pyth.TY_NOTENTRY
TY_CHARSW = _ODBG_pyth.TY_CHARSW
TY_WMSW = _ODBG_pyth.TY_WMSW
TY_EXCEPTSW = _ODBG_pyth.TY_EXCEPTSW
TY_RELIABLE = _ODBG_pyth.TY_RELIABLE
TY_GUESSED = _ODBG_pyth.TY_GUESSED
TY_BELONGS = _ODBG_pyth.TY_BELONGS
TY_RECURSIVE = _ODBG_pyth.TY_RECURSIVE
TY_TERMINAL = _ODBG_pyth.TY_TERMINAL
TY_SYSTEM = _ODBG_pyth.TY_SYSTEM
TY_DIRECT = _ODBG_pyth.TY_DIRECT
TY_NODATA = _ODBG_pyth.TY_NODATA
TY_DUMMY = _ODBG_pyth.TY_DUMMY
TY_NOSIDE = _ODBG_pyth.TY_NOSIDE
NM_NONAME = _ODBG_pyth.NM_NONAME
NM_ANYNAME = _ODBG_pyth.NM_ANYNAME
NM_PLUGCMD = _ODBG_pyth.NM_PLUGCMD
NM_LABEL = _ODBG_pyth.NM_LABEL
NM_EXPORT = _ODBG_pyth.NM_EXPORT
NM_IMPORT = _ODBG_pyth.NM_IMPORT
NM_LIBRARY = _ODBG_pyth.NM_LIBRARY
NM_CONST = _ODBG_pyth.NM_CONST
NM_COMMENT = _ODBG_pyth.NM_COMMENT
NM_LIBCOMM = _ODBG_pyth.NM_LIBCOMM
NM_BREAK = _ODBG_pyth.NM_BREAK
NM_ARG = _ODBG_pyth.NM_ARG
NM_ANALYSE = _ODBG_pyth.NM_ANALYSE
NM_BREAKEXPR = _ODBG_pyth.NM_BREAKEXPR
NM_BREAKEXPL = _ODBG_pyth.NM_BREAKEXPL
NM_ASSUME = _ODBG_pyth.NM_ASSUME
NM_STRUCT = _ODBG_pyth.NM_STRUCT
NM_CASE = _ODBG_pyth.NM_CASE
NM_INSPECT = _ODBG_pyth.NM_INSPECT
NM_WATCH = _ODBG_pyth.NM_WATCH
NM_ASM = _ODBG_pyth.NM_ASM
NM_FINDASM = _ODBG_pyth.NM_FINDASM
NM_LASTWATCH = _ODBG_pyth.NM_LASTWATCH
NM_SOURCE = _ODBG_pyth.NM_SOURCE
NM_REFTXT = _ODBG_pyth.NM_REFTXT
NM_GOTO = _ODBG_pyth.NM_GOTO
NM_GOTODUMP = _ODBG_pyth.NM_GOTODUMP
NM_TRPAUSE = _ODBG_pyth.NM_TRPAUSE
NM_IMCALL = _ODBG_pyth.NM_IMCALL
NMHISTORY = _ODBG_pyth.NMHISTORY
REG_EAX = _ODBG_pyth.REG_EAX
REG_ECX = _ODBG_pyth.REG_ECX
REG_EDX = _ODBG_pyth.REG_EDX
REG_EBX = _ODBG_pyth.REG_EBX
REG_ESP = _ODBG_pyth.REG_ESP
REG_EBP = _ODBG_pyth.REG_EBP
REG_ESI = _ODBG_pyth.REG_ESI
REG_EDI = _ODBG_pyth.REG_EDI
SEG_UNDEF = _ODBG_pyth.SEG_UNDEF
SEG_ES = _ODBG_pyth.SEG_ES
SEG_CS = _ODBG_pyth.SEG_CS
SEG_SS = _ODBG_pyth.SEG_SS
SEG_DS = _ODBG_pyth.SEG_DS
SEG_FS = _ODBG_pyth.SEG_FS
SEG_GS = _ODBG_pyth.SEG_GS
RS_NONE = _ODBG_pyth.RS_NONE
RS_INT = _ODBG_pyth.RS_INT
RS_EIP = _ODBG_pyth.RS_EIP
RS_FLG = _ODBG_pyth.RS_FLG
RS_SEG = _ODBG_pyth.RS_SEG
RS_EFL = _ODBG_pyth.RS_EFL
RS_TAG = _ODBG_pyth.RS_TAG
RS_FPU = _ODBG_pyth.RS_FPU
RS_FST = _ODBG_pyth.RS_FST
RS_FCO = _ODBG_pyth.RS_FCO
RS_FER = _ODBG_pyth.RS_FER
RS_FCW = _ODBG_pyth.RS_FCW
RS_FPR = _ODBG_pyth.RS_FPR
RS_FEM = _ODBG_pyth.RS_FEM
RS_MMX = _ODBG_pyth.RS_MMX
RS_3DN = _ODBG_pyth.RS_3DN
RS_SSE = _ODBG_pyth.RS_SSE
RS_CSR = _ODBG_pyth.RS_CSR
RS_CSB = _ODBG_pyth.RS_CSB
RS_CPR = _ODBG_pyth.RS_CPR
RS_ERR = _ODBG_pyth.RS_ERR
RS_GROUP = _ODBG_pyth.RS_GROUP
RS_INDEX = _ODBG_pyth.RS_INDEX
NREGSTACK = _ODBG_pyth.NREGSTACK
MAXCALSIZE = _ODBG_pyth.MAXCALSIZE
INT3 = _ODBG_pyth.INT3
NOP = _ODBG_pyth.NOP
TRAPFLAG = _ODBG_pyth.TRAPFLAG
C_TYPEMASK = _ODBG_pyth.C_TYPEMASK
C_CMD = _ODBG_pyth.C_CMD
C_PSH = _ODBG_pyth.C_PSH
C_POP = _ODBG_pyth.C_POP
C_MMX = _ODBG_pyth.C_MMX
C_FLT = _ODBG_pyth.C_FLT
C_JMP = _ODBG_pyth.C_JMP
C_JMC = _ODBG_pyth.C_JMC
C_CAL = _ODBG_pyth.C_CAL
C_RET = _ODBG_pyth.C_RET
C_FLG = _ODBG_pyth.C_FLG
C_RTF = _ODBG_pyth.C_RTF
C_REP = _ODBG_pyth.C_REP
C_PRI = _ODBG_pyth.C_PRI
C_SSE = _ODBG_pyth.C_SSE
C_NOW = _ODBG_pyth.C_NOW
C_BAD = _ODBG_pyth.C_BAD
C_RARE = _ODBG_pyth.C_RARE
C_SIZEMASK = _ODBG_pyth.C_SIZEMASK
C_EXPL = _ODBG_pyth.C_EXPL
C_DANGER95 = _ODBG_pyth.C_DANGER95
C_DANGER = _ODBG_pyth.C_DANGER
C_DANGERLOCK = _ODBG_pyth.C_DANGERLOCK
DEC_TYPEMASK = _ODBG_pyth.DEC_TYPEMASK
DEC_UNKNOWN = _ODBG_pyth.DEC_UNKNOWN
DEC_BYTE = _ODBG_pyth.DEC_BYTE
DEC_WORD = _ODBG_pyth.DEC_WORD
DEC_NEXTDATA = _ODBG_pyth.DEC_NEXTDATA
DEC_DWORD = _ODBG_pyth.DEC_DWORD
DEC_FLOAT4 = _ODBG_pyth.DEC_FLOAT4
DEC_FWORD = _ODBG_pyth.DEC_FWORD
DEC_FLOAT8 = _ODBG_pyth.DEC_FLOAT8
DEC_QWORD = _ODBG_pyth.DEC_QWORD
DEC_FLOAT10 = _ODBG_pyth.DEC_FLOAT10
DEC_TBYTE = _ODBG_pyth.DEC_TBYTE
DEC_STRING = _ODBG_pyth.DEC_STRING
DEC_UNICODE = _ODBG_pyth.DEC_UNICODE
DEC_3DNOW = _ODBG_pyth.DEC_3DNOW
DEC_SSE = _ODBG_pyth.DEC_SSE
DEC_TEXT = _ODBG_pyth.DEC_TEXT
DEC_BYTESW = _ODBG_pyth.DEC_BYTESW
DEC_NEXTCODE = _ODBG_pyth.DEC_NEXTCODE
DEC_COMMAND = _ODBG_pyth.DEC_COMMAND
DEC_JMPDEST = _ODBG_pyth.DEC_JMPDEST
DEC_CALLDEST = _ODBG_pyth.DEC_CALLDEST
DEC_PROCMASK = _ODBG_pyth.DEC_PROCMASK
DEC_PROC = _ODBG_pyth.DEC_PROC
DEC_PBODY = _ODBG_pyth.DEC_PBODY
DEC_PEND = _ODBG_pyth.DEC_PEND
DEC_CHECKED = _ODBG_pyth.DEC_CHECKED
DEC_SIGNED = _ODBG_pyth.DEC_SIGNED
DISASM_SIZE = _ODBG_pyth.DISASM_SIZE
DISASM_DATA = _ODBG_pyth.DISASM_DATA
DISASM_TRACE = _ODBG_pyth.DISASM_TRACE
DISASM_FILE = _ODBG_pyth.DISASM_FILE
DISASM_CODE = _ODBG_pyth.DISASM_CODE
DISASM_ALL = _ODBG_pyth.DISASM_ALL
DISASM_RTRACE = _ODBG_pyth.DISASM_RTRACE
DISASM_MODE = _ODBG_pyth.DISASM_MODE
DISASM_HILITE = _ODBG_pyth.DISASM_HILITE
DISASM_HLSHIFT = _ODBG_pyth.DISASM_HLSHIFT
DAW_FARADDR = _ODBG_pyth.DAW_FARADDR
DAW_SEGMENT = _ODBG_pyth.DAW_SEGMENT
DAW_PRIV = _ODBG_pyth.DAW_PRIV
DAW_IO = _ODBG_pyth.DAW_IO
DAW_SHIFT = _ODBG_pyth.DAW_SHIFT
DAW_PREFIX = _ODBG_pyth.DAW_PREFIX
DAW_LOCK = _ODBG_pyth.DAW_LOCK
DAW_STACK = _ODBG_pyth.DAW_STACK
DAW_DANGER95 = _ODBG_pyth.DAW_DANGER95
DAW_DANGEROUS = _ODBG_pyth.DAW_DANGEROUS
RST_INVALID = _ODBG_pyth.RST_INVALID
RST_VALUE = _ODBG_pyth.RST_VALUE
RST_VFIXUP = _ODBG_pyth.RST_VFIXUP
RST_INDIRECT = _ODBG_pyth.RST_INDIRECT
MM_RESTORE = _ODBG_pyth.MM_RESTORE
MM_SILENT = _ODBG_pyth.MM_SILENT
MM_DELANAL = _ODBG_pyth.MM_DELANAL
MM_RESILENT = _ODBG_pyth.MM_RESILENT
DU_ESCAPABLE = _ODBG_pyth.DU_ESCAPABLE
DU_BACKUP = _ODBG_pyth.DU_BACKUP
DU_TYPE = _ODBG_pyth.DU_TYPE
DU_COUNT = _ODBG_pyth.DU_COUNT
DU_SIZE = _ODBG_pyth.DU_SIZE
DU_UNDEF = _ODBG_pyth.DU_UNDEF
DU_HEXTEXT = _ODBG_pyth.DU_HEXTEXT
DU_TEXT = _ODBG_pyth.DU_TEXT
DU_UNICODE = _ODBG_pyth.DU_UNICODE
DU_INT = _ODBG_pyth.DU_INT
DU_UINT = _ODBG_pyth.DU_UINT
DU_IHEX = _ODBG_pyth.DU_IHEX
DU_FLOAT = _ODBG_pyth.DU_FLOAT
DU_ADDR = _ODBG_pyth.DU_ADDR
DU_DISASM = _ODBG_pyth.DU_DISASM
DU_HEXUNI = _ODBG_pyth.DU_HEXUNI
DU_ADRASC = _ODBG_pyth.DU_ADRASC
DU_ADRUNI = _ODBG_pyth.DU_ADRUNI
DU_SPEC = _ODBG_pyth.DU_SPEC
MT_BACKUP = _ODBG_pyth.MT_BACKUP
MT_COPY = _ODBG_pyth.MT_COPY
MT_EDIT = _ODBG_pyth.MT_EDIT
MT_SEARCH = _ODBG_pyth.MT_SEARCH
MT_DHISTORY = _ODBG_pyth.MT_DHISTORY
MAXTRACK = _ODBG_pyth.MAXTRACK
MOVETOP = _ODBG_pyth.MOVETOP
MOVEBOTTOM = _ODBG_pyth.MOVEBOTTOM
CONT_BROADCAST = _ODBG_pyth.CONT_BROADCAST
STOP_BROADCAST = _ODBG_pyth.STOP_BROADCAST
BKUP_CREATE = _ODBG_pyth.BKUP_CREATE
BKUP_VIEWDATA = _ODBG_pyth.BKUP_VIEWDATA
BKUP_VIEWCOPY = _ODBG_pyth.BKUP_VIEWCOPY
BKUP_LOADCOPY = _ODBG_pyth.BKUP_LOADCOPY
BKUP_SAVEDATA = _ODBG_pyth.BKUP_SAVEDATA
BKUP_SAVECOPY = _ODBG_pyth.BKUP_SAVECOPY
BKUP_DELETE = _ODBG_pyth.BKUP_DELETE
MEMBP_READ = _ODBG_pyth.MEMBP_READ
MEMBP_WRITE = _ODBG_pyth.MEMBP_WRITE
MEMBP_SFX = _ODBG_pyth.MEMBP_SFX
TR_HIT = _ODBG_pyth.TR_HIT
TR_SET = _ODBG_pyth.TR_SET
TR_RTSKIP = _ODBG_pyth.TR_RTSKIP
TR_RTRACE = _ODBG_pyth.TR_RTRACE
TR_TRACE = _ODBG_pyth.TR_TRACE
HB_FREE = _ODBG_pyth.HB_FREE
HB_CODE = _ODBG_pyth.HB_CODE
HB_ACCESS = _ODBG_pyth.HB_ACCESS
HB_WRITE = _ODBG_pyth.HB_WRITE
HB_IO = _ODBG_pyth.HB_IO
HB_ONESHOT = _ODBG_pyth.HB_ONESHOT
HB_STOPAN = _ODBG_pyth.HB_STOPAN
HB_TEMP = _ODBG_pyth.HB_TEMP
ATR_ADD = _ODBG_pyth.ATR_ADD
ATR_ADDPROC = _ODBG_pyth.ATR_ADDPROC
ATR_RESET = _ODBG_pyth.ATR_RESET
ATR_REMOVE = _ODBG_pyth.ATR_REMOVE
ATR_REMOVEALL = _ODBG_pyth.ATR_REMOVEALL
ATR_RESTORE = _ODBG_pyth.ATR_RESTORE
ATR_RTRADD = _ODBG_pyth.ATR_RTRADD
ATR_RTRJUMPS = _ODBG_pyth.ATR_RTRJUMPS
ATR_RTRENTRY = _ODBG_pyth.ATR_RTRENTRY
ATR_RTREMOVE = _ODBG_pyth.ATR_RTREMOVE
ATR_RTSKIP = _ODBG_pyth.ATR_RTSKIP
COND_NOBREAK = _ODBG_pyth.COND_NOBREAK
COND_LOGTRUE = _ODBG_pyth.COND_LOGTRUE
COND_LOGALWAYS = _ODBG_pyth.COND_LOGALWAYS
COND_ARGTRUE = _ODBG_pyth.COND_ARGTRUE
COND_ARGALWAYS = _ODBG_pyth.COND_ARGALWAYS
COND_BRKALWAYS = _ODBG_pyth.COND_BRKALWAYS
COND_MASK = _ODBG_pyth.COND_MASK
COND_FILLING = _ODBG_pyth.COND_FILLING
CPU_ASMHIST = _ODBG_pyth.CPU_ASMHIST
CPU_ASMCENTER = _ODBG_pyth.CPU_ASMCENTER
CPU_ASMFOCUS = _ODBG_pyth.CPU_ASMFOCUS
CPU_DUMPHIST = _ODBG_pyth.CPU_DUMPHIST
CPU_DUMPFIRST = _ODBG_pyth.CPU_DUMPFIRST
CPU_DUMPFOCUS = _ODBG_pyth.CPU_DUMPFOCUS
CPU_REGAUTO = _ODBG_pyth.CPU_REGAUTO
CPU_RUNTRACE = _ODBG_pyth.CPU_RUNTRACE
CPU_STACKFOCUS = _ODBG_pyth.CPU_STACKFOCUS
CPU_NOCREATE = _ODBG_pyth.CPU_NOCREATE
CPU_REDRAW = _ODBG_pyth.CPU_REDRAW
CPU_NOFOCUS = _ODBG_pyth.CPU_NOFOCUS
STEP_SAME = _ODBG_pyth.STEP_SAME
STEP_RUN = _ODBG_pyth.STEP_RUN
STEP_OVER = _ODBG_pyth.STEP_OVER
STEP_IN = _ODBG_pyth.STEP_IN
STEP_SKIP = _ODBG_pyth.STEP_SKIP
DASC_TEST = _ODBG_pyth.DASC_TEST
DASC_NOHEX = _ODBG_pyth.DASC_NOHEX
DASC_ASCII = _ODBG_pyth.DASC_ASCII
DASC_PASCAL = _ODBG_pyth.DASC_PASCAL
FIRST_CODE_LINE = _ODBG_pyth.FIRST_CODE_LINE
MAXNEST = _ODBG_pyth.MAXNEST
VAL_HINST = _ODBG_pyth.VAL_HINST
VAL_HWMAIN = _ODBG_pyth.VAL_HWMAIN
VAL_HWCLIENT = _ODBG_pyth.VAL_HWCLIENT
VAL_NCOLORS = _ODBG_pyth.VAL_NCOLORS
VAL_COLORS = _ODBG_pyth.VAL_COLORS
VAL_BRUSHES = _ODBG_pyth.VAL_BRUSHES
VAL_PENS = _ODBG_pyth.VAL_PENS
VAL_NFONTS = _ODBG_pyth.VAL_NFONTS
VAL_FONTS = _ODBG_pyth.VAL_FONTS
VAL_FONTNAMES = _ODBG_pyth.VAL_FONTNAMES
VAL_FONTWIDTHS = _ODBG_pyth.VAL_FONTWIDTHS
VAL_FONTHEIGHTS = _ODBG_pyth.VAL_FONTHEIGHTS
VAL_NFIXFONTS = _ODBG_pyth.VAL_NFIXFONTS
VAL_DEFFONT = _ODBG_pyth.VAL_DEFFONT
VAL_NSCHEMES = _ODBG_pyth.VAL_NSCHEMES
VAL_SCHEMES = _ODBG_pyth.VAL_SCHEMES
VAL_DEFSCHEME = _ODBG_pyth.VAL_DEFSCHEME
VAL_DEFHSCROLL = _ODBG_pyth.VAL_DEFHSCROLL
VAL_RESTOREWINDOWPOS = _ODBG_pyth.VAL_RESTOREWINDOWPOS
VAL_HPROCESS = _ODBG_pyth.VAL_HPROCESS
VAL_PROCESSID = _ODBG_pyth.VAL_PROCESSID
VAL_HMAINTHREAD = _ODBG_pyth.VAL_HMAINTHREAD
VAL_MAINTHREADID = _ODBG_pyth.VAL_MAINTHREADID
VAL_MAINBASE = _ODBG_pyth.VAL_MAINBASE
VAL_PROCESSNAME = _ODBG_pyth.VAL_PROCESSNAME
VAL_EXEFILENAME = _ODBG_pyth.VAL_EXEFILENAME
VAL_CURRENTDIR = _ODBG_pyth.VAL_CURRENTDIR
VAL_SYSTEMDIR = _ODBG_pyth.VAL_SYSTEMDIR
VAL_DECODEANYIP = _ODBG_pyth.VAL_DECODEANYIP
VAL_PASCALSTRINGS = _ODBG_pyth.VAL_PASCALSTRINGS
VAL_ONLYASCII = _ODBG_pyth.VAL_ONLYASCII
VAL_DIACRITICALS = _ODBG_pyth.VAL_DIACRITICALS
VAL_GLOBALSEARCH = _ODBG_pyth.VAL_GLOBALSEARCH
VAL_ALIGNEDSEARCH = _ODBG_pyth.VAL_ALIGNEDSEARCH
VAL_IGNORECASE = _ODBG_pyth.VAL_IGNORECASE
VAL_SEARCHMARGIN = _ODBG_pyth.VAL_SEARCHMARGIN
VAL_KEEPSELSIZE = _ODBG_pyth.VAL_KEEPSELSIZE
VAL_MMXDISPLAY = _ODBG_pyth.VAL_MMXDISPLAY
VAL_WINDOWFONT = _ODBG_pyth.VAL_WINDOWFONT
VAL_TABSTOPS = _ODBG_pyth.VAL_TABSTOPS
VAL_MODULES = _ODBG_pyth.VAL_MODULES
VAL_MEMORY = _ODBG_pyth.VAL_MEMORY
VAL_THREADS = _ODBG_pyth.VAL_THREADS
VAL_BREAKPOINTS = _ODBG_pyth.VAL_BREAKPOINTS
VAL_REFERENCES = _ODBG_pyth.VAL_REFERENCES
VAL_SOURCELIST = _ODBG_pyth.VAL_SOURCELIST
VAL_WATCHES = _ODBG_pyth.VAL_WATCHES
VAL_CPUFEATURES = _ODBG_pyth.VAL_CPUFEATURES
VAL_TRACEFILE = _ODBG_pyth.VAL_TRACEFILE
VAL_ALIGNDIALOGS = _ODBG_pyth.VAL_ALIGNDIALOGS
VAL_CPUDASM = _ODBG_pyth.VAL_CPUDASM
VAL_CPUDDUMP = _ODBG_pyth.VAL_CPUDDUMP
VAL_CPUDSTACK = _ODBG_pyth.VAL_CPUDSTACK
VAL_APIHELP = _ODBG_pyth.VAL_APIHELP
VAL_HARDBP = _ODBG_pyth.VAL_HARDBP
VAL_PATCHES = _ODBG_pyth.VAL_PATCHES
VAL_HINTS = _ODBG_pyth.VAL_HINTS
PM_MAIN = _ODBG_pyth.PM_MAIN
PM_DUMP = _ODBG_pyth.PM_DUMP
PM_MODULES = _ODBG_pyth.PM_MODULES
PM_MEMORY = _ODBG_pyth.PM_MEMORY
PM_THREADS = _ODBG_pyth.PM_THREADS
PM_BREAKPOINTS = _ODBG_pyth.PM_BREAKPOINTS
PM_REFERENCES = _ODBG_pyth.PM_REFERENCES
PM_RTRACE = _ODBG_pyth.PM_RTRACE
PM_WATCHES = _ODBG_pyth.PM_WATCHES
PM_WINDOWS = _ODBG_pyth.PM_WINDOWS
PM_DISASM = _ODBG_pyth.PM_DISASM
PM_CPUDUMP = _ODBG_pyth.PM_CPUDUMP
PM_CPUSTACK = _ODBG_pyth.PM_CPUSTACK
PM_CPUREGS = _ODBG_pyth.PM_CPUREGS
PP_MAIN = _ODBG_pyth.PP_MAIN
PP_EVENT = _ODBG_pyth.PP_EVENT
PP_PAUSE = _ODBG_pyth.PP_PAUSE
PP_TERMINATED = _ODBG_pyth.PP_TERMINATED
PP_BYPROGRAM = _ODBG_pyth.PP_BYPROGRAM
PP_INT3BREAK = _ODBG_pyth.PP_INT3BREAK
PP_MEMBREAK = _ODBG_pyth.PP_MEMBREAK
PP_HWBREAK = _ODBG_pyth.PP_HWBREAK
PP_SINGLESTEP = _ODBG_pyth.PP_SINGLESTEP
PP_EXCEPTION = _ODBG_pyth.PP_EXCEPTION
PP_ACCESS = _ODBG_pyth.PP_ACCESS
PP_GUARDED = _ODBG_pyth.PP_GUARDED
MI_SIGNATURE = _ODBG_pyth.MI_SIGNATURE
MI_VERSION = _ODBG_pyth.MI_VERSION
MI_FILENAME = _ODBG_pyth.MI_FILENAME
MI_FILESIZE = _ODBG_pyth.MI_FILESIZE
MI_TIMESTAMP = _ODBG_pyth.MI_TIMESTAMP
MI_SFXENTRY = _ODBG_pyth.MI_SFXENTRY
MI_PATCH = _ODBG_pyth.MI_PATCH
MI_USER = _ODBG_pyth.MI_USER
MI_PROCDATA = _ODBG_pyth.MI_PROCDATA
MI_SWDATA = _ODBG_pyth.MI_SWDATA
MI_CALLFINT = _ODBG_pyth.MI_CALLFINT
MI_CALLFMOD = _ODBG_pyth.MI_CALLFMOD
MI_CALLFABS = _ODBG_pyth.MI_CALLFABS
MI_INT3BREAK = _ODBG_pyth.MI_INT3BREAK
MI_INT3BRKC = _ODBG_pyth.MI_INT3BRKC
MI_HDWRBREAK = _ODBG_pyth.MI_HDWRBREAK
MI_JDDATA = _ODBG_pyth.MI_JDDATA
MI_ANALYSIS = _ODBG_pyth.MI_ANALYSIS
MI_ANALPACK = _ODBG_pyth.MI_ANALPACK
MI_AHINT = _ODBG_pyth.MI_AHINT
MI_TRACE = _ODBG_pyth.MI_TRACE
MI_TRACEPACK = _ODBG_pyth.MI_TRACEPACK
MI_CODECRC = _ODBG_pyth.MI_CODECRC
MI_SAVEAREA = _ODBG_pyth.MI_SAVEAREA
MI_END = _ODBG_pyth.MI_END
MI_WINJUG = _ODBG_pyth.MI_WINJUG
MI_WINJU1 = _ODBG_pyth.MI_WINJU1
MI_WINJU2 = _ODBG_pyth.MI_WINJU2
MI_WINJU3 = _ODBG_pyth.MI_WINJU3
MI_APPST = _ODBG_pyth.MI_APPST
class t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uc"] = _ODBG_pyth.t_uc_set
    __swig_getmethods__["uc"] = _ODBG_pyth.t_uc_get
    if _newclass:uc = _swig_property(_ODBG_pyth.t_uc_get, _ODBG_pyth.t_uc_set)
    __swig_setmethods__["buf"] = _ODBG_pyth.t_buf_set
    __swig_getmethods__["buf"] = _ODBG_pyth.t_buf_get
    if _newclass:buf = _swig_property(_ODBG_pyth.t_buf_get, _ODBG_pyth.t_buf_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t
    __del__ = lambda self : None;
t_swigregister = _ODBG_pyth.t_swigregister
t_swigregister(t)

class mod_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mod_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mod_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ODBG_pyth.mod_info_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.mod_info_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.mod_info_base_get, _ODBG_pyth.mod_info_base_set)
    __swig_setmethods__["size"] = _ODBG_pyth.mod_info_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.mod_info_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.mod_info_size_get, _ODBG_pyth.mod_info_size_set)
    __swig_setmethods__["any"] = _ODBG_pyth.mod_info_any_set
    __swig_getmethods__["any"] = _ODBG_pyth.mod_info_any_get
    if _newclass:any = _swig_property(_ODBG_pyth.mod_info_any_get, _ODBG_pyth.mod_info_any_set)
    __swig_setmethods__["code_begin"] = _ODBG_pyth.mod_info_code_begin_set
    __swig_getmethods__["code_begin"] = _ODBG_pyth.mod_info_code_begin_get
    if _newclass:code_begin = _swig_property(_ODBG_pyth.mod_info_code_begin_get, _ODBG_pyth.mod_info_code_begin_set)
    __swig_setmethods__["code_size"] = _ODBG_pyth.mod_info_code_size_set
    __swig_getmethods__["code_size"] = _ODBG_pyth.mod_info_code_size_get
    if _newclass:code_size = _swig_property(_ODBG_pyth.mod_info_code_size_get, _ODBG_pyth.mod_info_code_size_set)
    __swig_setmethods__["resource"] = _ODBG_pyth.mod_info_resource_set
    __swig_getmethods__["resource"] = _ODBG_pyth.mod_info_resource_get
    if _newclass:resource = _swig_property(_ODBG_pyth.mod_info_resource_get, _ODBG_pyth.mod_info_resource_set)
    __swig_setmethods__["any_2"] = _ODBG_pyth.mod_info_any_2_set
    __swig_getmethods__["any_2"] = _ODBG_pyth.mod_info_any_2_get
    if _newclass:any_2 = _swig_property(_ODBG_pyth.mod_info_any_2_get, _ODBG_pyth.mod_info_any_2_set)
    __swig_setmethods__["any_3"] = _ODBG_pyth.mod_info_any_3_set
    __swig_getmethods__["any_3"] = _ODBG_pyth.mod_info_any_3_get
    if _newclass:any_3 = _swig_property(_ODBG_pyth.mod_info_any_3_get, _ODBG_pyth.mod_info_any_3_set)
    __swig_setmethods__["any_4"] = _ODBG_pyth.mod_info_any_4_set
    __swig_getmethods__["any_4"] = _ODBG_pyth.mod_info_any_4_get
    if _newclass:any_4 = _swig_property(_ODBG_pyth.mod_info_any_4_get, _ODBG_pyth.mod_info_any_4_set)
    __swig_setmethods__["any_5"] = _ODBG_pyth.mod_info_any_5_set
    __swig_getmethods__["any_5"] = _ODBG_pyth.mod_info_any_5_get
    if _newclass:any_5 = _swig_property(_ODBG_pyth.mod_info_any_5_get, _ODBG_pyth.mod_info_any_5_set)
    __swig_setmethods__["Entry"] = _ODBG_pyth.mod_info_Entry_set
    __swig_getmethods__["Entry"] = _ODBG_pyth.mod_info_Entry_get
    if _newclass:Entry = _swig_property(_ODBG_pyth.mod_info_Entry_get, _ODBG_pyth.mod_info_Entry_set)
    __swig_setmethods__["data_addr"] = _ODBG_pyth.mod_info_data_addr_set
    __swig_getmethods__["data_addr"] = _ODBG_pyth.mod_info_data_addr_get
    if _newclass:data_addr = _swig_property(_ODBG_pyth.mod_info_data_addr_get, _ODBG_pyth.mod_info_data_addr_set)
    __swig_setmethods__["imp"] = _ODBG_pyth.mod_info_imp_set
    __swig_getmethods__["imp"] = _ODBG_pyth.mod_info_imp_get
    if _newclass:imp = _swig_property(_ODBG_pyth.mod_info_imp_get, _ODBG_pyth.mod_info_imp_set)
    __swig_setmethods__["imp_2"] = _ODBG_pyth.mod_info_imp_2_set
    __swig_getmethods__["imp_2"] = _ODBG_pyth.mod_info_imp_2_get
    if _newclass:imp_2 = _swig_property(_ODBG_pyth.mod_info_imp_2_get, _ODBG_pyth.mod_info_imp_2_set)
    __swig_setmethods__["export_addr"] = _ODBG_pyth.mod_info_export_addr_set
    __swig_getmethods__["export_addr"] = _ODBG_pyth.mod_info_export_addr_get
    if _newclass:export_addr = _swig_property(_ODBG_pyth.mod_info_export_addr_get, _ODBG_pyth.mod_info_export_addr_set)
    __swig_setmethods__["any_6"] = _ODBG_pyth.mod_info_any_6_set
    __swig_getmethods__["any_6"] = _ODBG_pyth.mod_info_any_6_get
    if _newclass:any_6 = _swig_property(_ODBG_pyth.mod_info_any_6_get, _ODBG_pyth.mod_info_any_6_set)
    __swig_setmethods__["any_7"] = _ODBG_pyth.mod_info_any_7_set
    __swig_getmethods__["any_7"] = _ODBG_pyth.mod_info_any_7_get
    if _newclass:any_7 = _swig_property(_ODBG_pyth.mod_info_any_7_get, _ODBG_pyth.mod_info_any_7_set)
    __swig_setmethods__["any_8"] = _ODBG_pyth.mod_info_any_8_set
    __swig_getmethods__["any_8"] = _ODBG_pyth.mod_info_any_8_get
    if _newclass:any_8 = _swig_property(_ODBG_pyth.mod_info_any_8_get, _ODBG_pyth.mod_info_any_8_set)
    __swig_setmethods__["name"] = _ODBG_pyth.mod_info_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.mod_info_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.mod_info_name_get, _ODBG_pyth.mod_info_name_set)
    __swig_setmethods__["path"] = _ODBG_pyth.mod_info_path_set
    __swig_getmethods__["path"] = _ODBG_pyth.mod_info_path_get
    if _newclass:path = _swig_property(_ODBG_pyth.mod_info_path_get, _ODBG_pyth.mod_info_path_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_mod_info(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_mod_info
    __del__ = lambda self : None;
mod_info_swigregister = _ODBG_pyth.mod_info_swigregister
mod_info_swigregister(mod_info)

class mem_blocks(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mem_blocks, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mem_blocks, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.mem_blocks_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.mem_blocks_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.mem_blocks_addr_get, _ODBG_pyth.mem_blocks_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.mem_blocks_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.mem_blocks_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.mem_blocks_size_get, _ODBG_pyth.mem_blocks_size_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_mem_blocks(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_mem_blocks
    __del__ = lambda self : None;
mem_blocks_swigregister = _ODBG_pyth.mem_blocks_swigregister
mem_blocks_swigregister(mem_blocks)

class t_hexstr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_hexstr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_hexstr, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _ODBG_pyth.t_hexstr_n_set
    __swig_getmethods__["n"] = _ODBG_pyth.t_hexstr_n_get
    if _newclass:n = _swig_property(_ODBG_pyth.t_hexstr_n_get, _ODBG_pyth.t_hexstr_n_set)
    __swig_setmethods__["data"] = _ODBG_pyth.t_hexstr_data_set
    __swig_getmethods__["data"] = _ODBG_pyth.t_hexstr_data_get
    if _newclass:data = _swig_property(_ODBG_pyth.t_hexstr_data_get, _ODBG_pyth.t_hexstr_data_set)
    __swig_setmethods__["mask"] = _ODBG_pyth.t_hexstr_mask_set
    __swig_getmethods__["mask"] = _ODBG_pyth.t_hexstr_mask_get
    if _newclass:mask = _swig_property(_ODBG_pyth.t_hexstr_mask_get, _ODBG_pyth.t_hexstr_mask_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_hexstr(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_hexstr
    __del__ = lambda self : None;
t_hexstr_swigregister = _ODBG_pyth.t_hexstr_swigregister
t_hexstr_swigregister(t_hexstr)

class t_asmmodel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_asmmodel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_asmmodel, name)
    __repr__ = _swig_repr
    __swig_setmethods__["code"] = _ODBG_pyth.t_asmmodel_code_set
    __swig_getmethods__["code"] = _ODBG_pyth.t_asmmodel_code_get
    if _newclass:code = _swig_property(_ODBG_pyth.t_asmmodel_code_get, _ODBG_pyth.t_asmmodel_code_set)
    __swig_setmethods__["mask"] = _ODBG_pyth.t_asmmodel_mask_set
    __swig_getmethods__["mask"] = _ODBG_pyth.t_asmmodel_mask_get
    if _newclass:mask = _swig_property(_ODBG_pyth.t_asmmodel_mask_get, _ODBG_pyth.t_asmmodel_mask_set)
    __swig_setmethods__["length"] = _ODBG_pyth.t_asmmodel_length_set
    __swig_getmethods__["length"] = _ODBG_pyth.t_asmmodel_length_get
    if _newclass:length = _swig_property(_ODBG_pyth.t_asmmodel_length_get, _ODBG_pyth.t_asmmodel_length_set)
    __swig_setmethods__["jmpsize"] = _ODBG_pyth.t_asmmodel_jmpsize_set
    __swig_getmethods__["jmpsize"] = _ODBG_pyth.t_asmmodel_jmpsize_get
    if _newclass:jmpsize = _swig_property(_ODBG_pyth.t_asmmodel_jmpsize_get, _ODBG_pyth.t_asmmodel_jmpsize_set)
    __swig_setmethods__["jmpoffset"] = _ODBG_pyth.t_asmmodel_jmpoffset_set
    __swig_getmethods__["jmpoffset"] = _ODBG_pyth.t_asmmodel_jmpoffset_get
    if _newclass:jmpoffset = _swig_property(_ODBG_pyth.t_asmmodel_jmpoffset_get, _ODBG_pyth.t_asmmodel_jmpoffset_set)
    __swig_setmethods__["jmppos"] = _ODBG_pyth.t_asmmodel_jmppos_set
    __swig_getmethods__["jmppos"] = _ODBG_pyth.t_asmmodel_jmppos_get
    if _newclass:jmppos = _swig_property(_ODBG_pyth.t_asmmodel_jmppos_get, _ODBG_pyth.t_asmmodel_jmppos_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_asmmodel(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_asmmodel
    __del__ = lambda self : None;
t_asmmodel_swigregister = _ODBG_pyth.t_asmmodel_swigregister
t_asmmodel_swigregister(t_asmmodel)

class t_extmodel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_extmodel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_extmodel, name)
    __repr__ = _swig_repr
    __swig_setmethods__["code"] = _ODBG_pyth.t_extmodel_code_set
    __swig_getmethods__["code"] = _ODBG_pyth.t_extmodel_code_get
    if _newclass:code = _swig_property(_ODBG_pyth.t_extmodel_code_get, _ODBG_pyth.t_extmodel_code_set)
    __swig_setmethods__["mask"] = _ODBG_pyth.t_extmodel_mask_set
    __swig_getmethods__["mask"] = _ODBG_pyth.t_extmodel_mask_get
    if _newclass:mask = _swig_property(_ODBG_pyth.t_extmodel_mask_get, _ODBG_pyth.t_extmodel_mask_set)
    __swig_setmethods__["length"] = _ODBG_pyth.t_extmodel_length_set
    __swig_getmethods__["length"] = _ODBG_pyth.t_extmodel_length_get
    if _newclass:length = _swig_property(_ODBG_pyth.t_extmodel_length_get, _ODBG_pyth.t_extmodel_length_set)
    __swig_setmethods__["jmpsize"] = _ODBG_pyth.t_extmodel_jmpsize_set
    __swig_getmethods__["jmpsize"] = _ODBG_pyth.t_extmodel_jmpsize_get
    if _newclass:jmpsize = _swig_property(_ODBG_pyth.t_extmodel_jmpsize_get, _ODBG_pyth.t_extmodel_jmpsize_set)
    __swig_setmethods__["jmpoffset"] = _ODBG_pyth.t_extmodel_jmpoffset_set
    __swig_getmethods__["jmpoffset"] = _ODBG_pyth.t_extmodel_jmpoffset_get
    if _newclass:jmpoffset = _swig_property(_ODBG_pyth.t_extmodel_jmpoffset_get, _ODBG_pyth.t_extmodel_jmpoffset_set)
    __swig_setmethods__["jmppos"] = _ODBG_pyth.t_extmodel_jmppos_set
    __swig_getmethods__["jmppos"] = _ODBG_pyth.t_extmodel_jmppos_get
    if _newclass:jmppos = _swig_property(_ODBG_pyth.t_extmodel_jmppos_get, _ODBG_pyth.t_extmodel_jmppos_set)
    __swig_setmethods__["isany"] = _ODBG_pyth.t_extmodel_isany_set
    __swig_getmethods__["isany"] = _ODBG_pyth.t_extmodel_isany_get
    if _newclass:isany = _swig_property(_ODBG_pyth.t_extmodel_isany_get, _ODBG_pyth.t_extmodel_isany_set)
    __swig_setmethods__["cmdoffset"] = _ODBG_pyth.t_extmodel_cmdoffset_set
    __swig_getmethods__["cmdoffset"] = _ODBG_pyth.t_extmodel_cmdoffset_get
    if _newclass:cmdoffset = _swig_property(_ODBG_pyth.t_extmodel_cmdoffset_get, _ODBG_pyth.t_extmodel_cmdoffset_set)
    __swig_setmethods__["ramask"] = _ODBG_pyth.t_extmodel_ramask_set
    __swig_getmethods__["ramask"] = _ODBG_pyth.t_extmodel_ramask_get
    if _newclass:ramask = _swig_property(_ODBG_pyth.t_extmodel_ramask_get, _ODBG_pyth.t_extmodel_ramask_set)
    __swig_setmethods__["rbmask"] = _ODBG_pyth.t_extmodel_rbmask_set
    __swig_getmethods__["rbmask"] = _ODBG_pyth.t_extmodel_rbmask_get
    if _newclass:rbmask = _swig_property(_ODBG_pyth.t_extmodel_rbmask_get, _ODBG_pyth.t_extmodel_rbmask_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_extmodel(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_extmodel
    __del__ = lambda self : None;
t_extmodel_swigregister = _ODBG_pyth.t_extmodel_swigregister
t_extmodel_swigregister(t_extmodel)

class t_scheme(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_scheme, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_scheme, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ODBG_pyth.t_scheme_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.t_scheme_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.t_scheme_name_get, _ODBG_pyth.t_scheme_name_set)
    __swig_setmethods__["textcolor"] = _ODBG_pyth.t_scheme_textcolor_set
    __swig_getmethods__["textcolor"] = _ODBG_pyth.t_scheme_textcolor_get
    if _newclass:textcolor = _swig_property(_ODBG_pyth.t_scheme_textcolor_get, _ODBG_pyth.t_scheme_textcolor_set)
    __swig_setmethods__["hitextcolor"] = _ODBG_pyth.t_scheme_hitextcolor_set
    __swig_getmethods__["hitextcolor"] = _ODBG_pyth.t_scheme_hitextcolor_get
    if _newclass:hitextcolor = _swig_property(_ODBG_pyth.t_scheme_hitextcolor_get, _ODBG_pyth.t_scheme_hitextcolor_set)
    __swig_setmethods__["lowcolor"] = _ODBG_pyth.t_scheme_lowcolor_set
    __swig_getmethods__["lowcolor"] = _ODBG_pyth.t_scheme_lowcolor_get
    if _newclass:lowcolor = _swig_property(_ODBG_pyth.t_scheme_lowcolor_get, _ODBG_pyth.t_scheme_lowcolor_set)
    __swig_setmethods__["bkcolor"] = _ODBG_pyth.t_scheme_bkcolor_set
    __swig_getmethods__["bkcolor"] = _ODBG_pyth.t_scheme_bkcolor_get
    if _newclass:bkcolor = _swig_property(_ODBG_pyth.t_scheme_bkcolor_get, _ODBG_pyth.t_scheme_bkcolor_set)
    __swig_setmethods__["selbkcolor"] = _ODBG_pyth.t_scheme_selbkcolor_set
    __swig_getmethods__["selbkcolor"] = _ODBG_pyth.t_scheme_selbkcolor_get
    if _newclass:selbkcolor = _swig_property(_ODBG_pyth.t_scheme_selbkcolor_get, _ODBG_pyth.t_scheme_selbkcolor_set)
    __swig_setmethods__["linecolor"] = _ODBG_pyth.t_scheme_linecolor_set
    __swig_getmethods__["linecolor"] = _ODBG_pyth.t_scheme_linecolor_get
    if _newclass:linecolor = _swig_property(_ODBG_pyth.t_scheme_linecolor_get, _ODBG_pyth.t_scheme_linecolor_set)
    __swig_setmethods__["auxcolor"] = _ODBG_pyth.t_scheme_auxcolor_set
    __swig_getmethods__["auxcolor"] = _ODBG_pyth.t_scheme_auxcolor_get
    if _newclass:auxcolor = _swig_property(_ODBG_pyth.t_scheme_auxcolor_get, _ODBG_pyth.t_scheme_auxcolor_set)
    __swig_setmethods__["condbkcolor"] = _ODBG_pyth.t_scheme_condbkcolor_set
    __swig_getmethods__["condbkcolor"] = _ODBG_pyth.t_scheme_condbkcolor_get
    if _newclass:condbkcolor = _swig_property(_ODBG_pyth.t_scheme_condbkcolor_get, _ODBG_pyth.t_scheme_condbkcolor_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_scheme(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_scheme
    __del__ = lambda self : None;
t_scheme_swigregister = _ODBG_pyth.t_scheme_swigregister
t_scheme_swigregister(t_scheme)

class t_schemeopt(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_schemeopt, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_schemeopt, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ODBG_pyth.t_schemeopt_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.t_schemeopt_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.t_schemeopt_name_get, _ODBG_pyth.t_schemeopt_name_set)
    __swig_setmethods__["color"] = _ODBG_pyth.t_schemeopt_color_set
    __swig_getmethods__["color"] = _ODBG_pyth.t_schemeopt_color_get
    if _newclass:color = _swig_property(_ODBG_pyth.t_schemeopt_color_get, _ODBG_pyth.t_schemeopt_color_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_schemeopt(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_schemeopt
    __del__ = lambda self : None;
t_schemeopt_swigregister = _ODBG_pyth.t_schemeopt_swigregister
t_schemeopt_swigregister(t_schemeopt)

class t_bar(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_bar, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_bar, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nbar"] = _ODBG_pyth.t_bar_nbar_set
    __swig_getmethods__["nbar"] = _ODBG_pyth.t_bar_nbar_get
    if _newclass:nbar = _swig_property(_ODBG_pyth.t_bar_nbar_get, _ODBG_pyth.t_bar_nbar_set)
    __swig_setmethods__["font"] = _ODBG_pyth.t_bar_font_set
    __swig_getmethods__["font"] = _ODBG_pyth.t_bar_font_get
    if _newclass:font = _swig_property(_ODBG_pyth.t_bar_font_get, _ODBG_pyth.t_bar_font_set)
    __swig_setmethods__["dx"] = _ODBG_pyth.t_bar_dx_set
    __swig_getmethods__["dx"] = _ODBG_pyth.t_bar_dx_get
    if _newclass:dx = _swig_property(_ODBG_pyth.t_bar_dx_get, _ODBG_pyth.t_bar_dx_set)
    __swig_setmethods__["defdx"] = _ODBG_pyth.t_bar_defdx_set
    __swig_getmethods__["defdx"] = _ODBG_pyth.t_bar_defdx_get
    if _newclass:defdx = _swig_property(_ODBG_pyth.t_bar_defdx_get, _ODBG_pyth.t_bar_defdx_set)
    __swig_setmethods__["name"] = _ODBG_pyth.t_bar_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.t_bar_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.t_bar_name_get, _ODBG_pyth.t_bar_name_set)
    __swig_setmethods__["mode"] = _ODBG_pyth.t_bar_mode_set
    __swig_getmethods__["mode"] = _ODBG_pyth.t_bar_mode_get
    if _newclass:mode = _swig_property(_ODBG_pyth.t_bar_mode_get, _ODBG_pyth.t_bar_mode_set)
    __swig_setmethods__["captured"] = _ODBG_pyth.t_bar_captured_set
    __swig_getmethods__["captured"] = _ODBG_pyth.t_bar_captured_get
    if _newclass:captured = _swig_property(_ODBG_pyth.t_bar_captured_get, _ODBG_pyth.t_bar_captured_set)
    __swig_setmethods__["active"] = _ODBG_pyth.t_bar_active_set
    __swig_getmethods__["active"] = _ODBG_pyth.t_bar_active_get
    if _newclass:active = _swig_property(_ODBG_pyth.t_bar_active_get, _ODBG_pyth.t_bar_active_set)
    __swig_setmethods__["prevx"] = _ODBG_pyth.t_bar_prevx_set
    __swig_getmethods__["prevx"] = _ODBG_pyth.t_bar_prevx_get
    if _newclass:prevx = _swig_property(_ODBG_pyth.t_bar_prevx_get, _ODBG_pyth.t_bar_prevx_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_bar(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_bar
    __del__ = lambda self : None;
t_bar_swigregister = _ODBG_pyth.t_bar_swigregister
t_bar_swigregister(t_bar)

class t_sortheader(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_sortheader, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_sortheader, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_sortheader_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_sortheader_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_sortheader_addr_get, _ODBG_pyth.t_sortheader_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_sortheader_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_sortheader_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_sortheader_size_get, _ODBG_pyth.t_sortheader_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_sortheader_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_sortheader_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_sortheader_type_get, _ODBG_pyth.t_sortheader_type_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_sortheader(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_sortheader
    __del__ = lambda self : None;
t_sortheader_swigregister = _ODBG_pyth.t_sortheader_swigregister
t_sortheader_swigregister(t_sortheader)

class t_sorted(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_sorted, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_sorted, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ODBG_pyth.t_sorted_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.t_sorted_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.t_sorted_name_get, _ODBG_pyth.t_sorted_name_set)
    __swig_setmethods__["n"] = _ODBG_pyth.t_sorted_n_set
    __swig_getmethods__["n"] = _ODBG_pyth.t_sorted_n_get
    if _newclass:n = _swig_property(_ODBG_pyth.t_sorted_n_get, _ODBG_pyth.t_sorted_n_set)
    __swig_setmethods__["nmax"] = _ODBG_pyth.t_sorted_nmax_set
    __swig_getmethods__["nmax"] = _ODBG_pyth.t_sorted_nmax_get
    if _newclass:nmax = _swig_property(_ODBG_pyth.t_sorted_nmax_get, _ODBG_pyth.t_sorted_nmax_set)
    __swig_setmethods__["selected"] = _ODBG_pyth.t_sorted_selected_set
    __swig_getmethods__["selected"] = _ODBG_pyth.t_sorted_selected_get
    if _newclass:selected = _swig_property(_ODBG_pyth.t_sorted_selected_get, _ODBG_pyth.t_sorted_selected_set)
    __swig_setmethods__["seladdr"] = _ODBG_pyth.t_sorted_seladdr_set
    __swig_getmethods__["seladdr"] = _ODBG_pyth.t_sorted_seladdr_get
    if _newclass:seladdr = _swig_property(_ODBG_pyth.t_sorted_seladdr_get, _ODBG_pyth.t_sorted_seladdr_set)
    __swig_setmethods__["itemsize"] = _ODBG_pyth.t_sorted_itemsize_set
    __swig_getmethods__["itemsize"] = _ODBG_pyth.t_sorted_itemsize_get
    if _newclass:itemsize = _swig_property(_ODBG_pyth.t_sorted_itemsize_get, _ODBG_pyth.t_sorted_itemsize_set)
    __swig_setmethods__["version"] = _ODBG_pyth.t_sorted_version_set
    __swig_getmethods__["version"] = _ODBG_pyth.t_sorted_version_get
    if _newclass:version = _swig_property(_ODBG_pyth.t_sorted_version_get, _ODBG_pyth.t_sorted_version_set)
    __swig_setmethods__["data"] = _ODBG_pyth.t_sorted_data_set
    __swig_getmethods__["data"] = _ODBG_pyth.t_sorted_data_get
    if _newclass:data = _swig_property(_ODBG_pyth.t_sorted_data_get, _ODBG_pyth.t_sorted_data_set)
    __swig_setmethods__["sortfunc"] = _ODBG_pyth.t_sorted_sortfunc_set
    __swig_getmethods__["sortfunc"] = _ODBG_pyth.t_sorted_sortfunc_get
    if _newclass:sortfunc = _swig_property(_ODBG_pyth.t_sorted_sortfunc_get, _ODBG_pyth.t_sorted_sortfunc_set)
    __swig_setmethods__["destfunc"] = _ODBG_pyth.t_sorted_destfunc_set
    __swig_getmethods__["destfunc"] = _ODBG_pyth.t_sorted_destfunc_get
    if _newclass:destfunc = _swig_property(_ODBG_pyth.t_sorted_destfunc_get, _ODBG_pyth.t_sorted_destfunc_set)
    __swig_setmethods__["sort"] = _ODBG_pyth.t_sorted_sort_set
    __swig_getmethods__["sort"] = _ODBG_pyth.t_sorted_sort_get
    if _newclass:sort = _swig_property(_ODBG_pyth.t_sorted_sort_get, _ODBG_pyth.t_sorted_sort_set)
    __swig_setmethods__["sorted"] = _ODBG_pyth.t_sorted_sorted_set
    __swig_getmethods__["sorted"] = _ODBG_pyth.t_sorted_sorted_get
    if _newclass:sorted = _swig_property(_ODBG_pyth.t_sorted_sorted_get, _ODBG_pyth.t_sorted_sorted_set)
    __swig_setmethods__["index"] = _ODBG_pyth.t_sorted_index_set
    __swig_getmethods__["index"] = _ODBG_pyth.t_sorted_index_get
    if _newclass:index = _swig_property(_ODBG_pyth.t_sorted_index_get, _ODBG_pyth.t_sorted_index_set)
    __swig_setmethods__["suppresserr"] = _ODBG_pyth.t_sorted_suppresserr_set
    __swig_getmethods__["suppresserr"] = _ODBG_pyth.t_sorted_suppresserr_get
    if _newclass:suppresserr = _swig_property(_ODBG_pyth.t_sorted_suppresserr_get, _ODBG_pyth.t_sorted_suppresserr_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_sorted(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_sorted
    __del__ = lambda self : None;
t_sorted_swigregister = _ODBG_pyth.t_sorted_swigregister
t_sorted_swigregister(t_sorted)

class t_table(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_table, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_table, name)
    __repr__ = _swig_repr
    __swig_setmethods__["hw"] = _ODBG_pyth.t_table_hw_set
    __swig_getmethods__["hw"] = _ODBG_pyth.t_table_hw_get
    if _newclass:hw = _swig_property(_ODBG_pyth.t_table_hw_get, _ODBG_pyth.t_table_hw_set)
    __swig_setmethods__["data"] = _ODBG_pyth.t_table_data_set
    __swig_getmethods__["data"] = _ODBG_pyth.t_table_data_get
    if _newclass:data = _swig_property(_ODBG_pyth.t_table_data_get, _ODBG_pyth.t_table_data_set)
    __swig_setmethods__["bar"] = _ODBG_pyth.t_table_bar_set
    __swig_getmethods__["bar"] = _ODBG_pyth.t_table_bar_get
    if _newclass:bar = _swig_property(_ODBG_pyth.t_table_bar_get, _ODBG_pyth.t_table_bar_set)
    __swig_setmethods__["showbar"] = _ODBG_pyth.t_table_showbar_set
    __swig_getmethods__["showbar"] = _ODBG_pyth.t_table_showbar_get
    if _newclass:showbar = _swig_property(_ODBG_pyth.t_table_showbar_get, _ODBG_pyth.t_table_showbar_set)
    __swig_setmethods__["hscroll"] = _ODBG_pyth.t_table_hscroll_set
    __swig_getmethods__["hscroll"] = _ODBG_pyth.t_table_hscroll_get
    if _newclass:hscroll = _swig_property(_ODBG_pyth.t_table_hscroll_get, _ODBG_pyth.t_table_hscroll_set)
    __swig_setmethods__["colsel"] = _ODBG_pyth.t_table_colsel_set
    __swig_getmethods__["colsel"] = _ODBG_pyth.t_table_colsel_get
    if _newclass:colsel = _swig_property(_ODBG_pyth.t_table_colsel_get, _ODBG_pyth.t_table_colsel_set)
    __swig_setmethods__["mode"] = _ODBG_pyth.t_table_mode_set
    __swig_getmethods__["mode"] = _ODBG_pyth.t_table_mode_get
    if _newclass:mode = _swig_property(_ODBG_pyth.t_table_mode_get, _ODBG_pyth.t_table_mode_set)
    __swig_setmethods__["font"] = _ODBG_pyth.t_table_font_set
    __swig_getmethods__["font"] = _ODBG_pyth.t_table_font_get
    if _newclass:font = _swig_property(_ODBG_pyth.t_table_font_get, _ODBG_pyth.t_table_font_set)
    __swig_setmethods__["scheme"] = _ODBG_pyth.t_table_scheme_set
    __swig_getmethods__["scheme"] = _ODBG_pyth.t_table_scheme_get
    if _newclass:scheme = _swig_property(_ODBG_pyth.t_table_scheme_get, _ODBG_pyth.t_table_scheme_set)
    __swig_setmethods__["hilite"] = _ODBG_pyth.t_table_hilite_set
    __swig_getmethods__["hilite"] = _ODBG_pyth.t_table_hilite_get
    if _newclass:hilite = _swig_property(_ODBG_pyth.t_table_hilite_get, _ODBG_pyth.t_table_hilite_set)
    __swig_setmethods__["offset"] = _ODBG_pyth.t_table_offset_set
    __swig_getmethods__["offset"] = _ODBG_pyth.t_table_offset_get
    if _newclass:offset = _swig_property(_ODBG_pyth.t_table_offset_get, _ODBG_pyth.t_table_offset_set)
    __swig_setmethods__["xshift"] = _ODBG_pyth.t_table_xshift_set
    __swig_getmethods__["xshift"] = _ODBG_pyth.t_table_xshift_get
    if _newclass:xshift = _swig_property(_ODBG_pyth.t_table_xshift_get, _ODBG_pyth.t_table_xshift_set)
    __swig_setmethods__["drawfunc"] = _ODBG_pyth.t_table_drawfunc_set
    __swig_getmethods__["drawfunc"] = _ODBG_pyth.t_table_drawfunc_get
    if _newclass:drawfunc = _swig_property(_ODBG_pyth.t_table_drawfunc_get, _ODBG_pyth.t_table_drawfunc_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_table(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_table
    __del__ = lambda self : None;
t_table_swigregister = _ODBG_pyth.t_table_swigregister
t_table_swigregister(t_table)

class t_reg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_reg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_reg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modified"] = _ODBG_pyth.t_reg_modified_set
    __swig_getmethods__["modified"] = _ODBG_pyth.t_reg_modified_get
    if _newclass:modified = _swig_property(_ODBG_pyth.t_reg_modified_get, _ODBG_pyth.t_reg_modified_set)
    __swig_setmethods__["modifiedbyuser"] = _ODBG_pyth.t_reg_modifiedbyuser_set
    __swig_getmethods__["modifiedbyuser"] = _ODBG_pyth.t_reg_modifiedbyuser_get
    if _newclass:modifiedbyuser = _swig_property(_ODBG_pyth.t_reg_modifiedbyuser_get, _ODBG_pyth.t_reg_modifiedbyuser_set)
    __swig_setmethods__["singlestep"] = _ODBG_pyth.t_reg_singlestep_set
    __swig_getmethods__["singlestep"] = _ODBG_pyth.t_reg_singlestep_get
    if _newclass:singlestep = _swig_property(_ODBG_pyth.t_reg_singlestep_get, _ODBG_pyth.t_reg_singlestep_set)
    __swig_setmethods__["r"] = _ODBG_pyth.t_reg_r_set
    __swig_getmethods__["r"] = _ODBG_pyth.t_reg_r_get
    if _newclass:r = _swig_property(_ODBG_pyth.t_reg_r_get, _ODBG_pyth.t_reg_r_set)
    __swig_setmethods__["ip"] = _ODBG_pyth.t_reg_ip_set
    __swig_getmethods__["ip"] = _ODBG_pyth.t_reg_ip_get
    if _newclass:ip = _swig_property(_ODBG_pyth.t_reg_ip_get, _ODBG_pyth.t_reg_ip_set)
    __swig_setmethods__["flags"] = _ODBG_pyth.t_reg_flags_set
    __swig_getmethods__["flags"] = _ODBG_pyth.t_reg_flags_get
    if _newclass:flags = _swig_property(_ODBG_pyth.t_reg_flags_get, _ODBG_pyth.t_reg_flags_set)
    __swig_setmethods__["top"] = _ODBG_pyth.t_reg_top_set
    __swig_getmethods__["top"] = _ODBG_pyth.t_reg_top_get
    if _newclass:top = _swig_property(_ODBG_pyth.t_reg_top_get, _ODBG_pyth.t_reg_top_set)
    __swig_setmethods__["f"] = _ODBG_pyth.t_reg_f_set
    __swig_getmethods__["f"] = _ODBG_pyth.t_reg_f_get
    if _newclass:f = _swig_property(_ODBG_pyth.t_reg_f_get, _ODBG_pyth.t_reg_f_set)
    __swig_setmethods__["tag"] = _ODBG_pyth.t_reg_tag_set
    __swig_getmethods__["tag"] = _ODBG_pyth.t_reg_tag_get
    if _newclass:tag = _swig_property(_ODBG_pyth.t_reg_tag_get, _ODBG_pyth.t_reg_tag_set)
    __swig_setmethods__["fst"] = _ODBG_pyth.t_reg_fst_set
    __swig_getmethods__["fst"] = _ODBG_pyth.t_reg_fst_get
    if _newclass:fst = _swig_property(_ODBG_pyth.t_reg_fst_get, _ODBG_pyth.t_reg_fst_set)
    __swig_setmethods__["fcw"] = _ODBG_pyth.t_reg_fcw_set
    __swig_getmethods__["fcw"] = _ODBG_pyth.t_reg_fcw_get
    if _newclass:fcw = _swig_property(_ODBG_pyth.t_reg_fcw_get, _ODBG_pyth.t_reg_fcw_set)
    __swig_setmethods__["s"] = _ODBG_pyth.t_reg_s_set
    __swig_getmethods__["s"] = _ODBG_pyth.t_reg_s_get
    if _newclass:s = _swig_property(_ODBG_pyth.t_reg_s_get, _ODBG_pyth.t_reg_s_set)
    __swig_setmethods__["base"] = _ODBG_pyth.t_reg_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.t_reg_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.t_reg_base_get, _ODBG_pyth.t_reg_base_set)
    __swig_setmethods__["limit"] = _ODBG_pyth.t_reg_limit_set
    __swig_getmethods__["limit"] = _ODBG_pyth.t_reg_limit_get
    if _newclass:limit = _swig_property(_ODBG_pyth.t_reg_limit_get, _ODBG_pyth.t_reg_limit_set)
    __swig_setmethods__["big"] = _ODBG_pyth.t_reg_big_set
    __swig_getmethods__["big"] = _ODBG_pyth.t_reg_big_get
    if _newclass:big = _swig_property(_ODBG_pyth.t_reg_big_get, _ODBG_pyth.t_reg_big_set)
    __swig_setmethods__["dr6"] = _ODBG_pyth.t_reg_dr6_set
    __swig_getmethods__["dr6"] = _ODBG_pyth.t_reg_dr6_get
    if _newclass:dr6 = _swig_property(_ODBG_pyth.t_reg_dr6_get, _ODBG_pyth.t_reg_dr6_set)
    __swig_setmethods__["threadid"] = _ODBG_pyth.t_reg_threadid_set
    __swig_getmethods__["threadid"] = _ODBG_pyth.t_reg_threadid_get
    if _newclass:threadid = _swig_property(_ODBG_pyth.t_reg_threadid_get, _ODBG_pyth.t_reg_threadid_set)
    __swig_setmethods__["lasterror"] = _ODBG_pyth.t_reg_lasterror_set
    __swig_getmethods__["lasterror"] = _ODBG_pyth.t_reg_lasterror_get
    if _newclass:lasterror = _swig_property(_ODBG_pyth.t_reg_lasterror_get, _ODBG_pyth.t_reg_lasterror_set)
    __swig_setmethods__["ssevalid"] = _ODBG_pyth.t_reg_ssevalid_set
    __swig_getmethods__["ssevalid"] = _ODBG_pyth.t_reg_ssevalid_get
    if _newclass:ssevalid = _swig_property(_ODBG_pyth.t_reg_ssevalid_get, _ODBG_pyth.t_reg_ssevalid_set)
    __swig_setmethods__["ssemodified"] = _ODBG_pyth.t_reg_ssemodified_set
    __swig_getmethods__["ssemodified"] = _ODBG_pyth.t_reg_ssemodified_get
    if _newclass:ssemodified = _swig_property(_ODBG_pyth.t_reg_ssemodified_get, _ODBG_pyth.t_reg_ssemodified_set)
    __swig_setmethods__["ssereg"] = _ODBG_pyth.t_reg_ssereg_set
    __swig_getmethods__["ssereg"] = _ODBG_pyth.t_reg_ssereg_get
    if _newclass:ssereg = _swig_property(_ODBG_pyth.t_reg_ssereg_get, _ODBG_pyth.t_reg_ssereg_set)
    __swig_setmethods__["mxcsr"] = _ODBG_pyth.t_reg_mxcsr_set
    __swig_getmethods__["mxcsr"] = _ODBG_pyth.t_reg_mxcsr_get
    if _newclass:mxcsr = _swig_property(_ODBG_pyth.t_reg_mxcsr_get, _ODBG_pyth.t_reg_mxcsr_set)
    __swig_setmethods__["selected"] = _ODBG_pyth.t_reg_selected_set
    __swig_getmethods__["selected"] = _ODBG_pyth.t_reg_selected_get
    if _newclass:selected = _swig_property(_ODBG_pyth.t_reg_selected_get, _ODBG_pyth.t_reg_selected_set)
    __swig_setmethods__["drlin"] = _ODBG_pyth.t_reg_drlin_set
    __swig_getmethods__["drlin"] = _ODBG_pyth.t_reg_drlin_get
    if _newclass:drlin = _swig_property(_ODBG_pyth.t_reg_drlin_get, _ODBG_pyth.t_reg_drlin_set)
    __swig_setmethods__["dr7"] = _ODBG_pyth.t_reg_dr7_set
    __swig_getmethods__["dr7"] = _ODBG_pyth.t_reg_dr7_get
    if _newclass:dr7 = _swig_property(_ODBG_pyth.t_reg_dr7_get, _ODBG_pyth.t_reg_dr7_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_reg(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_reg
    __del__ = lambda self : None;
t_reg_swigregister = _ODBG_pyth.t_reg_swigregister
t_reg_swigregister(t_reg)

class t_operand(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_operand, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_operand, name)
    __repr__ = _swig_repr
    __swig_setmethods__["optype"] = _ODBG_pyth.t_operand_optype_set
    __swig_getmethods__["optype"] = _ODBG_pyth.t_operand_optype_get
    if _newclass:optype = _swig_property(_ODBG_pyth.t_operand_optype_get, _ODBG_pyth.t_operand_optype_set)
    __swig_setmethods__["opsize"] = _ODBG_pyth.t_operand_opsize_set
    __swig_getmethods__["opsize"] = _ODBG_pyth.t_operand_opsize_get
    if _newclass:opsize = _swig_property(_ODBG_pyth.t_operand_opsize_get, _ODBG_pyth.t_operand_opsize_set)
    __swig_setmethods__["regscale"] = _ODBG_pyth.t_operand_regscale_set
    __swig_getmethods__["regscale"] = _ODBG_pyth.t_operand_regscale_get
    if _newclass:regscale = _swig_property(_ODBG_pyth.t_operand_regscale_get, _ODBG_pyth.t_operand_regscale_set)
    __swig_setmethods__["seg"] = _ODBG_pyth.t_operand_seg_set
    __swig_getmethods__["seg"] = _ODBG_pyth.t_operand_seg_get
    if _newclass:seg = _swig_property(_ODBG_pyth.t_operand_seg_get, _ODBG_pyth.t_operand_seg_set)
    __swig_setmethods__["opconst"] = _ODBG_pyth.t_operand_opconst_set
    __swig_getmethods__["opconst"] = _ODBG_pyth.t_operand_opconst_get
    if _newclass:opconst = _swig_property(_ODBG_pyth.t_operand_opconst_get, _ODBG_pyth.t_operand_opconst_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_operand(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_operand
    __del__ = lambda self : None;
t_operand_swigregister = _ODBG_pyth.t_operand_swigregister
t_operand_swigregister(t_operand)

class t_disasm(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_disasm, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_disasm, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ip"] = _ODBG_pyth.t_disasm_ip_set
    __swig_getmethods__["ip"] = _ODBG_pyth.t_disasm_ip_get
    if _newclass:ip = _swig_property(_ODBG_pyth.t_disasm_ip_get, _ODBG_pyth.t_disasm_ip_set)
    __swig_setmethods__["dump"] = _ODBG_pyth.t_disasm_dump_set
    __swig_getmethods__["dump"] = _ODBG_pyth.t_disasm_dump_get
    if _newclass:dump = _swig_property(_ODBG_pyth.t_disasm_dump_get, _ODBG_pyth.t_disasm_dump_set)
    __swig_setmethods__["result"] = _ODBG_pyth.t_disasm_result_set
    __swig_getmethods__["result"] = _ODBG_pyth.t_disasm_result_get
    if _newclass:result = _swig_property(_ODBG_pyth.t_disasm_result_get, _ODBG_pyth.t_disasm_result_set)
    __swig_setmethods__["comment"] = _ODBG_pyth.t_disasm_comment_set
    __swig_getmethods__["comment"] = _ODBG_pyth.t_disasm_comment_get
    if _newclass:comment = _swig_property(_ODBG_pyth.t_disasm_comment_get, _ODBG_pyth.t_disasm_comment_set)
    __swig_setmethods__["opinfo"] = _ODBG_pyth.t_disasm_opinfo_set
    __swig_getmethods__["opinfo"] = _ODBG_pyth.t_disasm_opinfo_get
    if _newclass:opinfo = _swig_property(_ODBG_pyth.t_disasm_opinfo_get, _ODBG_pyth.t_disasm_opinfo_set)
    __swig_setmethods__["cmdtype"] = _ODBG_pyth.t_disasm_cmdtype_set
    __swig_getmethods__["cmdtype"] = _ODBG_pyth.t_disasm_cmdtype_get
    if _newclass:cmdtype = _swig_property(_ODBG_pyth.t_disasm_cmdtype_get, _ODBG_pyth.t_disasm_cmdtype_set)
    __swig_setmethods__["memtype"] = _ODBG_pyth.t_disasm_memtype_set
    __swig_getmethods__["memtype"] = _ODBG_pyth.t_disasm_memtype_get
    if _newclass:memtype = _swig_property(_ODBG_pyth.t_disasm_memtype_get, _ODBG_pyth.t_disasm_memtype_set)
    __swig_setmethods__["nprefix"] = _ODBG_pyth.t_disasm_nprefix_set
    __swig_getmethods__["nprefix"] = _ODBG_pyth.t_disasm_nprefix_get
    if _newclass:nprefix = _swig_property(_ODBG_pyth.t_disasm_nprefix_get, _ODBG_pyth.t_disasm_nprefix_set)
    __swig_setmethods__["indexed"] = _ODBG_pyth.t_disasm_indexed_set
    __swig_getmethods__["indexed"] = _ODBG_pyth.t_disasm_indexed_get
    if _newclass:indexed = _swig_property(_ODBG_pyth.t_disasm_indexed_get, _ODBG_pyth.t_disasm_indexed_set)
    __swig_setmethods__["jmpconst"] = _ODBG_pyth.t_disasm_jmpconst_set
    __swig_getmethods__["jmpconst"] = _ODBG_pyth.t_disasm_jmpconst_get
    if _newclass:jmpconst = _swig_property(_ODBG_pyth.t_disasm_jmpconst_get, _ODBG_pyth.t_disasm_jmpconst_set)
    __swig_setmethods__["jmptable"] = _ODBG_pyth.t_disasm_jmptable_set
    __swig_getmethods__["jmptable"] = _ODBG_pyth.t_disasm_jmptable_get
    if _newclass:jmptable = _swig_property(_ODBG_pyth.t_disasm_jmptable_get, _ODBG_pyth.t_disasm_jmptable_set)
    __swig_setmethods__["adrconst"] = _ODBG_pyth.t_disasm_adrconst_set
    __swig_getmethods__["adrconst"] = _ODBG_pyth.t_disasm_adrconst_get
    if _newclass:adrconst = _swig_property(_ODBG_pyth.t_disasm_adrconst_get, _ODBG_pyth.t_disasm_adrconst_set)
    __swig_setmethods__["immconst"] = _ODBG_pyth.t_disasm_immconst_set
    __swig_getmethods__["immconst"] = _ODBG_pyth.t_disasm_immconst_get
    if _newclass:immconst = _swig_property(_ODBG_pyth.t_disasm_immconst_get, _ODBG_pyth.t_disasm_immconst_set)
    __swig_setmethods__["zeroconst"] = _ODBG_pyth.t_disasm_zeroconst_set
    __swig_getmethods__["zeroconst"] = _ODBG_pyth.t_disasm_zeroconst_get
    if _newclass:zeroconst = _swig_property(_ODBG_pyth.t_disasm_zeroconst_get, _ODBG_pyth.t_disasm_zeroconst_set)
    __swig_setmethods__["fixupoffset"] = _ODBG_pyth.t_disasm_fixupoffset_set
    __swig_getmethods__["fixupoffset"] = _ODBG_pyth.t_disasm_fixupoffset_get
    if _newclass:fixupoffset = _swig_property(_ODBG_pyth.t_disasm_fixupoffset_get, _ODBG_pyth.t_disasm_fixupoffset_set)
    __swig_setmethods__["fixupsize"] = _ODBG_pyth.t_disasm_fixupsize_set
    __swig_getmethods__["fixupsize"] = _ODBG_pyth.t_disasm_fixupsize_get
    if _newclass:fixupsize = _swig_property(_ODBG_pyth.t_disasm_fixupsize_get, _ODBG_pyth.t_disasm_fixupsize_set)
    __swig_setmethods__["jmpaddr"] = _ODBG_pyth.t_disasm_jmpaddr_set
    __swig_getmethods__["jmpaddr"] = _ODBG_pyth.t_disasm_jmpaddr_get
    if _newclass:jmpaddr = _swig_property(_ODBG_pyth.t_disasm_jmpaddr_get, _ODBG_pyth.t_disasm_jmpaddr_set)
    __swig_setmethods__["condition"] = _ODBG_pyth.t_disasm_condition_set
    __swig_getmethods__["condition"] = _ODBG_pyth.t_disasm_condition_get
    if _newclass:condition = _swig_property(_ODBG_pyth.t_disasm_condition_get, _ODBG_pyth.t_disasm_condition_set)
    __swig_setmethods__["error"] = _ODBG_pyth.t_disasm_error_set
    __swig_getmethods__["error"] = _ODBG_pyth.t_disasm_error_get
    if _newclass:error = _swig_property(_ODBG_pyth.t_disasm_error_get, _ODBG_pyth.t_disasm_error_set)
    __swig_setmethods__["warnings"] = _ODBG_pyth.t_disasm_warnings_set
    __swig_getmethods__["warnings"] = _ODBG_pyth.t_disasm_warnings_get
    if _newclass:warnings = _swig_property(_ODBG_pyth.t_disasm_warnings_get, _ODBG_pyth.t_disasm_warnings_set)
    __swig_setmethods__["optype"] = _ODBG_pyth.t_disasm_optype_set
    __swig_getmethods__["optype"] = _ODBG_pyth.t_disasm_optype_get
    if _newclass:optype = _swig_property(_ODBG_pyth.t_disasm_optype_get, _ODBG_pyth.t_disasm_optype_set)
    __swig_setmethods__["opsize"] = _ODBG_pyth.t_disasm_opsize_set
    __swig_getmethods__["opsize"] = _ODBG_pyth.t_disasm_opsize_get
    if _newclass:opsize = _swig_property(_ODBG_pyth.t_disasm_opsize_get, _ODBG_pyth.t_disasm_opsize_set)
    __swig_setmethods__["opgood"] = _ODBG_pyth.t_disasm_opgood_set
    __swig_getmethods__["opgood"] = _ODBG_pyth.t_disasm_opgood_get
    if _newclass:opgood = _swig_property(_ODBG_pyth.t_disasm_opgood_get, _ODBG_pyth.t_disasm_opgood_set)
    __swig_setmethods__["opaddr"] = _ODBG_pyth.t_disasm_opaddr_set
    __swig_getmethods__["opaddr"] = _ODBG_pyth.t_disasm_opaddr_get
    if _newclass:opaddr = _swig_property(_ODBG_pyth.t_disasm_opaddr_get, _ODBG_pyth.t_disasm_opaddr_set)
    __swig_setmethods__["opdata"] = _ODBG_pyth.t_disasm_opdata_set
    __swig_getmethods__["opdata"] = _ODBG_pyth.t_disasm_opdata_get
    if _newclass:opdata = _swig_property(_ODBG_pyth.t_disasm_opdata_get, _ODBG_pyth.t_disasm_opdata_set)
    __swig_setmethods__["op"] = _ODBG_pyth.t_disasm_op_set
    __swig_getmethods__["op"] = _ODBG_pyth.t_disasm_op_get
    if _newclass:op = _swig_property(_ODBG_pyth.t_disasm_op_get, _ODBG_pyth.t_disasm_op_set)
    __swig_setmethods__["regdata"] = _ODBG_pyth.t_disasm_regdata_set
    __swig_getmethods__["regdata"] = _ODBG_pyth.t_disasm_regdata_get
    if _newclass:regdata = _swig_property(_ODBG_pyth.t_disasm_regdata_get, _ODBG_pyth.t_disasm_regdata_set)
    __swig_setmethods__["regstatus"] = _ODBG_pyth.t_disasm_regstatus_set
    __swig_getmethods__["regstatus"] = _ODBG_pyth.t_disasm_regstatus_get
    if _newclass:regstatus = _swig_property(_ODBG_pyth.t_disasm_regstatus_get, _ODBG_pyth.t_disasm_regstatus_set)
    __swig_setmethods__["addrdata"] = _ODBG_pyth.t_disasm_addrdata_set
    __swig_getmethods__["addrdata"] = _ODBG_pyth.t_disasm_addrdata_get
    if _newclass:addrdata = _swig_property(_ODBG_pyth.t_disasm_addrdata_get, _ODBG_pyth.t_disasm_addrdata_set)
    __swig_setmethods__["addrstatus"] = _ODBG_pyth.t_disasm_addrstatus_set
    __swig_getmethods__["addrstatus"] = _ODBG_pyth.t_disasm_addrstatus_get
    if _newclass:addrstatus = _swig_property(_ODBG_pyth.t_disasm_addrstatus_get, _ODBG_pyth.t_disasm_addrstatus_set)
    __swig_setmethods__["regstack"] = _ODBG_pyth.t_disasm_regstack_set
    __swig_getmethods__["regstack"] = _ODBG_pyth.t_disasm_regstack_get
    if _newclass:regstack = _swig_property(_ODBG_pyth.t_disasm_regstack_get, _ODBG_pyth.t_disasm_regstack_set)
    __swig_setmethods__["rststatus"] = _ODBG_pyth.t_disasm_rststatus_set
    __swig_getmethods__["rststatus"] = _ODBG_pyth.t_disasm_rststatus_get
    if _newclass:rststatus = _swig_property(_ODBG_pyth.t_disasm_rststatus_get, _ODBG_pyth.t_disasm_rststatus_set)
    __swig_setmethods__["nregstack"] = _ODBG_pyth.t_disasm_nregstack_set
    __swig_getmethods__["nregstack"] = _ODBG_pyth.t_disasm_nregstack_get
    if _newclass:nregstack = _swig_property(_ODBG_pyth.t_disasm_nregstack_get, _ODBG_pyth.t_disasm_nregstack_set)
    __swig_setmethods__["reserved"] = _ODBG_pyth.t_disasm_reserved_set
    __swig_getmethods__["reserved"] = _ODBG_pyth.t_disasm_reserved_get
    if _newclass:reserved = _swig_property(_ODBG_pyth.t_disasm_reserved_get, _ODBG_pyth.t_disasm_reserved_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_disasm(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_disasm
    __del__ = lambda self : None;
t_disasm_swigregister = _ODBG_pyth.t_disasm_swigregister
t_disasm_swigregister(t_disasm)

class t_result(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_result, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_result, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _ODBG_pyth.t_result_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_result_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_result_type_get, _ODBG_pyth.t_result_type_set)
    __swig_setmethods__["dtype"] = _ODBG_pyth.t_result_dtype_set
    __swig_getmethods__["dtype"] = _ODBG_pyth.t_result_dtype_get
    if _newclass:dtype = _swig_property(_ODBG_pyth.t_result_dtype_get, _ODBG_pyth.t_result_dtype_set)
    __swig_setmethods__["data"] = _ODBG_pyth.t_result_data_set
    __swig_getmethods__["data"] = _ODBG_pyth.t_result_data_get
    if _newclass:data = _swig_property(_ODBG_pyth.t_result_data_get, _ODBG_pyth.t_result_data_set)
    __swig_setmethods__["u"] = _ODBG_pyth.t_result_u_set
    __swig_getmethods__["u"] = _ODBG_pyth.t_result_u_get
    if _newclass:u = _swig_property(_ODBG_pyth.t_result_u_get, _ODBG_pyth.t_result_u_set)
    __swig_setmethods__["l"] = _ODBG_pyth.t_result_l_set
    __swig_getmethods__["l"] = _ODBG_pyth.t_result_l_get
    if _newclass:l = _swig_property(_ODBG_pyth.t_result_l_get, _ODBG_pyth.t_result_l_set)
    __swig_setmethods__["f"] = _ODBG_pyth.t_result_f_set
    __swig_getmethods__["f"] = _ODBG_pyth.t_result_f_get
    if _newclass:f = _swig_property(_ODBG_pyth.t_result_f_get, _ODBG_pyth.t_result_f_set)
    __swig_setmethods__["value"] = _ODBG_pyth.t_result_value_set
    __swig_getmethods__["value"] = _ODBG_pyth.t_result_value_get
    if _newclass:value = _swig_property(_ODBG_pyth.t_result_value_get, _ODBG_pyth.t_result_value_set)
    __swig_setmethods__["wvalue"] = _ODBG_pyth.t_result_wvalue_set
    __swig_getmethods__["wvalue"] = _ODBG_pyth.t_result_wvalue_get
    if _newclass:wvalue = _swig_property(_ODBG_pyth.t_result_wvalue_get, _ODBG_pyth.t_result_wvalue_set)
    __swig_setmethods__["lvaddr"] = _ODBG_pyth.t_result_lvaddr_set
    __swig_getmethods__["lvaddr"] = _ODBG_pyth.t_result_lvaddr_get
    if _newclass:lvaddr = _swig_property(_ODBG_pyth.t_result_lvaddr_get, _ODBG_pyth.t_result_lvaddr_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_result(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_result
    __del__ = lambda self : None;
t_result_swigregister = _ODBG_pyth.t_result_swigregister
t_result_swigregister(t_result)

class t_thread(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_thread, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_thread, name)
    __repr__ = _swig_repr
    __swig_setmethods__["threadid"] = _ODBG_pyth.t_thread_threadid_set
    __swig_getmethods__["threadid"] = _ODBG_pyth.t_thread_threadid_get
    if _newclass:threadid = _swig_property(_ODBG_pyth.t_thread_threadid_get, _ODBG_pyth.t_thread_threadid_set)
    __swig_setmethods__["dummy"] = _ODBG_pyth.t_thread_dummy_set
    __swig_getmethods__["dummy"] = _ODBG_pyth.t_thread_dummy_get
    if _newclass:dummy = _swig_property(_ODBG_pyth.t_thread_dummy_get, _ODBG_pyth.t_thread_dummy_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_thread_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_thread_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_thread_type_get, _ODBG_pyth.t_thread_type_set)
    __swig_setmethods__["thread"] = _ODBG_pyth.t_thread_thread_set
    __swig_getmethods__["thread"] = _ODBG_pyth.t_thread_thread_get
    if _newclass:thread = _swig_property(_ODBG_pyth.t_thread_thread_get, _ODBG_pyth.t_thread_thread_set)
    __swig_setmethods__["datablock"] = _ODBG_pyth.t_thread_datablock_set
    __swig_getmethods__["datablock"] = _ODBG_pyth.t_thread_datablock_get
    if _newclass:datablock = _swig_property(_ODBG_pyth.t_thread_datablock_get, _ODBG_pyth.t_thread_datablock_set)
    __swig_setmethods__["entry"] = _ODBG_pyth.t_thread_entry_set
    __swig_getmethods__["entry"] = _ODBG_pyth.t_thread_entry_get
    if _newclass:entry = _swig_property(_ODBG_pyth.t_thread_entry_get, _ODBG_pyth.t_thread_entry_set)
    __swig_setmethods__["stacktop"] = _ODBG_pyth.t_thread_stacktop_set
    __swig_getmethods__["stacktop"] = _ODBG_pyth.t_thread_stacktop_get
    if _newclass:stacktop = _swig_property(_ODBG_pyth.t_thread_stacktop_get, _ODBG_pyth.t_thread_stacktop_set)
    __swig_setmethods__["stackbottom"] = _ODBG_pyth.t_thread_stackbottom_set
    __swig_getmethods__["stackbottom"] = _ODBG_pyth.t_thread_stackbottom_get
    if _newclass:stackbottom = _swig_property(_ODBG_pyth.t_thread_stackbottom_get, _ODBG_pyth.t_thread_stackbottom_set)
    __swig_setmethods__["context"] = _ODBG_pyth.t_thread_context_set
    __swig_getmethods__["context"] = _ODBG_pyth.t_thread_context_get
    if _newclass:context = _swig_property(_ODBG_pyth.t_thread_context_get, _ODBG_pyth.t_thread_context_set)
    __swig_setmethods__["reg"] = _ODBG_pyth.t_thread_reg_set
    __swig_getmethods__["reg"] = _ODBG_pyth.t_thread_reg_get
    if _newclass:reg = _swig_property(_ODBG_pyth.t_thread_reg_get, _ODBG_pyth.t_thread_reg_set)
    __swig_setmethods__["regvalid"] = _ODBG_pyth.t_thread_regvalid_set
    __swig_getmethods__["regvalid"] = _ODBG_pyth.t_thread_regvalid_get
    if _newclass:regvalid = _swig_property(_ODBG_pyth.t_thread_regvalid_get, _ODBG_pyth.t_thread_regvalid_set)
    __swig_setmethods__["oldreg"] = _ODBG_pyth.t_thread_oldreg_set
    __swig_getmethods__["oldreg"] = _ODBG_pyth.t_thread_oldreg_get
    if _newclass:oldreg = _swig_property(_ODBG_pyth.t_thread_oldreg_get, _ODBG_pyth.t_thread_oldreg_set)
    __swig_setmethods__["oldregvalid"] = _ODBG_pyth.t_thread_oldregvalid_set
    __swig_getmethods__["oldregvalid"] = _ODBG_pyth.t_thread_oldregvalid_get
    if _newclass:oldregvalid = _swig_property(_ODBG_pyth.t_thread_oldregvalid_get, _ODBG_pyth.t_thread_oldregvalid_set)
    __swig_setmethods__["suspendcount"] = _ODBG_pyth.t_thread_suspendcount_set
    __swig_getmethods__["suspendcount"] = _ODBG_pyth.t_thread_suspendcount_get
    if _newclass:suspendcount = _swig_property(_ODBG_pyth.t_thread_suspendcount_get, _ODBG_pyth.t_thread_suspendcount_set)
    __swig_setmethods__["usertime"] = _ODBG_pyth.t_thread_usertime_set
    __swig_getmethods__["usertime"] = _ODBG_pyth.t_thread_usertime_get
    if _newclass:usertime = _swig_property(_ODBG_pyth.t_thread_usertime_get, _ODBG_pyth.t_thread_usertime_set)
    __swig_setmethods__["systime"] = _ODBG_pyth.t_thread_systime_set
    __swig_getmethods__["systime"] = _ODBG_pyth.t_thread_systime_get
    if _newclass:systime = _swig_property(_ODBG_pyth.t_thread_systime_get, _ODBG_pyth.t_thread_systime_set)
    __swig_setmethods__["reserved"] = _ODBG_pyth.t_thread_reserved_set
    __swig_getmethods__["reserved"] = _ODBG_pyth.t_thread_reserved_get
    if _newclass:reserved = _swig_property(_ODBG_pyth.t_thread_reserved_get, _ODBG_pyth.t_thread_reserved_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_thread(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_thread
    __del__ = lambda self : None;
t_thread_swigregister = _ODBG_pyth.t_thread_swigregister
t_thread_swigregister(t_thread)

class t_memory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_memory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_memory, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ODBG_pyth.t_memory_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.t_memory_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.t_memory_base_get, _ODBG_pyth.t_memory_base_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_memory_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_memory_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_memory_size_get, _ODBG_pyth.t_memory_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_memory_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_memory_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_memory_type_get, _ODBG_pyth.t_memory_type_set)
    __swig_setmethods__["owner"] = _ODBG_pyth.t_memory_owner_set
    __swig_getmethods__["owner"] = _ODBG_pyth.t_memory_owner_get
    if _newclass:owner = _swig_property(_ODBG_pyth.t_memory_owner_get, _ODBG_pyth.t_memory_owner_set)
    __swig_setmethods__["initaccess"] = _ODBG_pyth.t_memory_initaccess_set
    __swig_getmethods__["initaccess"] = _ODBG_pyth.t_memory_initaccess_get
    if _newclass:initaccess = _swig_property(_ODBG_pyth.t_memory_initaccess_get, _ODBG_pyth.t_memory_initaccess_set)
    __swig_setmethods__["access"] = _ODBG_pyth.t_memory_access_set
    __swig_getmethods__["access"] = _ODBG_pyth.t_memory_access_get
    if _newclass:access = _swig_property(_ODBG_pyth.t_memory_access_get, _ODBG_pyth.t_memory_access_set)
    __swig_setmethods__["threadid"] = _ODBG_pyth.t_memory_threadid_set
    __swig_getmethods__["threadid"] = _ODBG_pyth.t_memory_threadid_get
    if _newclass:threadid = _swig_property(_ODBG_pyth.t_memory_threadid_get, _ODBG_pyth.t_memory_threadid_set)
    __swig_setmethods__["sect"] = _ODBG_pyth.t_memory_sect_set
    __swig_getmethods__["sect"] = _ODBG_pyth.t_memory_sect_get
    if _newclass:sect = _swig_property(_ODBG_pyth.t_memory_sect_get, _ODBG_pyth.t_memory_sect_set)
    __swig_setmethods__["copy"] = _ODBG_pyth.t_memory_copy_set
    __swig_getmethods__["copy"] = _ODBG_pyth.t_memory_copy_get
    if _newclass:copy = _swig_property(_ODBG_pyth.t_memory_copy_get, _ODBG_pyth.t_memory_copy_set)
    __swig_setmethods__["reserved"] = _ODBG_pyth.t_memory_reserved_set
    __swig_getmethods__["reserved"] = _ODBG_pyth.t_memory_reserved_get
    if _newclass:reserved = _swig_property(_ODBG_pyth.t_memory_reserved_get, _ODBG_pyth.t_memory_reserved_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_memory(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_memory
    __del__ = lambda self : None;
t_memory_swigregister = _ODBG_pyth.t_memory_swigregister
t_memory_swigregister(t_memory)

class t_heap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_heap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_heap, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ODBG_pyth.t_heap_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.t_heap_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.t_heap_base_get, _ODBG_pyth.t_heap_base_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_heap_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_heap_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_heap_size_get, _ODBG_pyth.t_heap_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_heap_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_heap_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_heap_type_get, _ODBG_pyth.t_heap_type_set)
    __swig_setmethods__["parent"] = _ODBG_pyth.t_heap_parent_set
    __swig_getmethods__["parent"] = _ODBG_pyth.t_heap_parent_get
    if _newclass:parent = _swig_property(_ODBG_pyth.t_heap_parent_get, _ODBG_pyth.t_heap_parent_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_heap(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_heap
    __del__ = lambda self : None;
t_heap_swigregister = _ODBG_pyth.t_heap_swigregister
t_heap_swigregister(t_heap)

class t_ahint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_ahint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_ahint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_ahint_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_ahint_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_ahint_addr_get, _ODBG_pyth.t_ahint_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_ahint_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_ahint_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_ahint_size_get, _ODBG_pyth.t_ahint_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_ahint_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_ahint_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_ahint_type_get, _ODBG_pyth.t_ahint_type_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_ahint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_ahint
    __del__ = lambda self : None;
t_ahint_swigregister = _ODBG_pyth.t_ahint_swigregister
t_ahint_swigregister(t_ahint)

class t_stringtable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_stringtable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_stringtable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _ODBG_pyth.t_stringtable_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.t_stringtable_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.t_stringtable_name_get, _ODBG_pyth.t_stringtable_name_set)
    __swig_setmethods__["language"] = _ODBG_pyth.t_stringtable_language_set
    __swig_getmethods__["language"] = _ODBG_pyth.t_stringtable_language_get
    if _newclass:language = _swig_property(_ODBG_pyth.t_stringtable_language_get, _ODBG_pyth.t_stringtable_language_set)
    __swig_setmethods__["addr"] = _ODBG_pyth.t_stringtable_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_stringtable_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_stringtable_addr_get, _ODBG_pyth.t_stringtable_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_stringtable_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_stringtable_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_stringtable_size_get, _ODBG_pyth.t_stringtable_size_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_stringtable(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_stringtable
    __del__ = lambda self : None;
t_stringtable_swigregister = _ODBG_pyth.t_stringtable_swigregister
t_stringtable_swigregister(t_stringtable)

class t_fixup(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_fixup, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_fixup, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ODBG_pyth.t_fixup_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.t_fixup_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.t_fixup_base_get, _ODBG_pyth.t_fixup_base_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_fixup_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_fixup_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_fixup_size_get, _ODBG_pyth.t_fixup_size_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_fixup(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_fixup
    __del__ = lambda self : None;
t_fixup_swigregister = _ODBG_pyth.t_fixup_swigregister
t_fixup_swigregister(t_fixup)

class t_symvar(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_symvar, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_symvar, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _ODBG_pyth.t_symvar_next_set
    __swig_getmethods__["next"] = _ODBG_pyth.t_symvar_next_get
    if _newclass:next = _swig_property(_ODBG_pyth.t_symvar_next_get, _ODBG_pyth.t_symvar_next_set)
    __swig_setmethods__["kind"] = _ODBG_pyth.t_symvar_kind_set
    __swig_getmethods__["kind"] = _ODBG_pyth.t_symvar_kind_get
    if _newclass:kind = _swig_property(_ODBG_pyth.t_symvar_kind_get, _ODBG_pyth.t_symvar_kind_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_symvar_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_symvar_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_symvar_type_get, _ODBG_pyth.t_symvar_type_set)
    __swig_setmethods__["regs"] = _ODBG_pyth.t_symvar_regs_set
    __swig_getmethods__["regs"] = _ODBG_pyth.t_symvar_regs_get
    if _newclass:regs = _swig_property(_ODBG_pyth.t_symvar_regs_get, _ODBG_pyth.t_symvar_regs_set)
    __swig_setmethods__["addr"] = _ODBG_pyth.t_symvar_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_symvar_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_symvar_addr_get, _ODBG_pyth.t_symvar_addr_set)
    __swig_setmethods__["offset"] = _ODBG_pyth.t_symvar_offset_set
    __swig_getmethods__["offset"] = _ODBG_pyth.t_symvar_offset_get
    if _newclass:offset = _swig_property(_ODBG_pyth.t_symvar_offset_get, _ODBG_pyth.t_symvar_offset_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_symvar_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_symvar_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_symvar_size_get, _ODBG_pyth.t_symvar_size_set)
    __swig_setmethods__["optvar"] = _ODBG_pyth.t_symvar_optvar_set
    __swig_getmethods__["optvar"] = _ODBG_pyth.t_symvar_optvar_get
    if _newclass:optvar = _swig_property(_ODBG_pyth.t_symvar_optvar_get, _ODBG_pyth.t_symvar_optvar_set)
    __swig_setmethods__["nameaddr"] = _ODBG_pyth.t_symvar_nameaddr_set
    __swig_getmethods__["nameaddr"] = _ODBG_pyth.t_symvar_nameaddr_get
    if _newclass:nameaddr = _swig_property(_ODBG_pyth.t_symvar_nameaddr_get, _ODBG_pyth.t_symvar_nameaddr_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_symvar(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_symvar
    __del__ = lambda self : None;
t_symvar_swigregister = _ODBG_pyth.t_symvar_swigregister
t_symvar_swigregister(t_symvar)

class t_jdest(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_jdest, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_jdest, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _ODBG_pyth.t_jdest_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_jdest_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_jdest_type_get, _ODBG_pyth.t_jdest_type_set)
    __swig_setmethods__["_from"] = _ODBG_pyth.t_jdest__from_set
    __swig_getmethods__["_from"] = _ODBG_pyth.t_jdest__from_get
    if _newclass:_from = _swig_property(_ODBG_pyth.t_jdest__from_get, _ODBG_pyth.t_jdest__from_set)
    __swig_setmethods__["to"] = _ODBG_pyth.t_jdest_to_set
    __swig_getmethods__["to"] = _ODBG_pyth.t_jdest_to_get
    if _newclass:to = _swig_property(_ODBG_pyth.t_jdest_to_get, _ODBG_pyth.t_jdest_to_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_jdest(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_jdest
    __del__ = lambda self : None;
t_jdest_swigregister = _ODBG_pyth.t_jdest_swigregister
t_jdest_swigregister(t_jdest)

class t_module(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_module, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_module, name)
    __repr__ = _swig_repr
    __swig_setmethods__["base"] = _ODBG_pyth.t_module_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.t_module_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.t_module_base_get, _ODBG_pyth.t_module_base_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_module_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_module_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_module_size_get, _ODBG_pyth.t_module_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_module_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_module_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_module_type_get, _ODBG_pyth.t_module_type_set)
    __swig_setmethods__["codebase"] = _ODBG_pyth.t_module_codebase_set
    __swig_getmethods__["codebase"] = _ODBG_pyth.t_module_codebase_get
    if _newclass:codebase = _swig_property(_ODBG_pyth.t_module_codebase_get, _ODBG_pyth.t_module_codebase_set)
    __swig_setmethods__["codesize"] = _ODBG_pyth.t_module_codesize_set
    __swig_getmethods__["codesize"] = _ODBG_pyth.t_module_codesize_get
    if _newclass:codesize = _swig_property(_ODBG_pyth.t_module_codesize_get, _ODBG_pyth.t_module_codesize_set)
    __swig_setmethods__["resbase"] = _ODBG_pyth.t_module_resbase_set
    __swig_getmethods__["resbase"] = _ODBG_pyth.t_module_resbase_get
    if _newclass:resbase = _swig_property(_ODBG_pyth.t_module_resbase_get, _ODBG_pyth.t_module_resbase_set)
    __swig_setmethods__["ressize"] = _ODBG_pyth.t_module_ressize_set
    __swig_getmethods__["ressize"] = _ODBG_pyth.t_module_ressize_get
    if _newclass:ressize = _swig_property(_ODBG_pyth.t_module_ressize_get, _ODBG_pyth.t_module_ressize_set)
    __swig_setmethods__["stringtable"] = _ODBG_pyth.t_module_stringtable_set
    __swig_getmethods__["stringtable"] = _ODBG_pyth.t_module_stringtable_get
    if _newclass:stringtable = _swig_property(_ODBG_pyth.t_module_stringtable_get, _ODBG_pyth.t_module_stringtable_set)
    __swig_setmethods__["nstringtable"] = _ODBG_pyth.t_module_nstringtable_set
    __swig_getmethods__["nstringtable"] = _ODBG_pyth.t_module_nstringtable_get
    if _newclass:nstringtable = _swig_property(_ODBG_pyth.t_module_nstringtable_get, _ODBG_pyth.t_module_nstringtable_set)
    __swig_setmethods__["maxstringtable"] = _ODBG_pyth.t_module_maxstringtable_set
    __swig_getmethods__["maxstringtable"] = _ODBG_pyth.t_module_maxstringtable_get
    if _newclass:maxstringtable = _swig_property(_ODBG_pyth.t_module_maxstringtable_get, _ODBG_pyth.t_module_maxstringtable_set)
    __swig_setmethods__["entry"] = _ODBG_pyth.t_module_entry_set
    __swig_getmethods__["entry"] = _ODBG_pyth.t_module_entry_get
    if _newclass:entry = _swig_property(_ODBG_pyth.t_module_entry_get, _ODBG_pyth.t_module_entry_set)
    __swig_setmethods__["database"] = _ODBG_pyth.t_module_database_set
    __swig_getmethods__["database"] = _ODBG_pyth.t_module_database_get
    if _newclass:database = _swig_property(_ODBG_pyth.t_module_database_get, _ODBG_pyth.t_module_database_set)
    __swig_setmethods__["idatatable"] = _ODBG_pyth.t_module_idatatable_set
    __swig_getmethods__["idatatable"] = _ODBG_pyth.t_module_idatatable_get
    if _newclass:idatatable = _swig_property(_ODBG_pyth.t_module_idatatable_get, _ODBG_pyth.t_module_idatatable_set)
    __swig_setmethods__["idatabase"] = _ODBG_pyth.t_module_idatabase_set
    __swig_getmethods__["idatabase"] = _ODBG_pyth.t_module_idatabase_get
    if _newclass:idatabase = _swig_property(_ODBG_pyth.t_module_idatabase_get, _ODBG_pyth.t_module_idatabase_set)
    __swig_setmethods__["edatatable"] = _ODBG_pyth.t_module_edatatable_set
    __swig_getmethods__["edatatable"] = _ODBG_pyth.t_module_edatatable_get
    if _newclass:edatatable = _swig_property(_ODBG_pyth.t_module_edatatable_get, _ODBG_pyth.t_module_edatatable_set)
    __swig_setmethods__["edatasize"] = _ODBG_pyth.t_module_edatasize_set
    __swig_getmethods__["edatasize"] = _ODBG_pyth.t_module_edatasize_get
    if _newclass:edatasize = _swig_property(_ODBG_pyth.t_module_edatasize_get, _ODBG_pyth.t_module_edatasize_set)
    __swig_setmethods__["reloctable"] = _ODBG_pyth.t_module_reloctable_set
    __swig_getmethods__["reloctable"] = _ODBG_pyth.t_module_reloctable_get
    if _newclass:reloctable = _swig_property(_ODBG_pyth.t_module_reloctable_get, _ODBG_pyth.t_module_reloctable_set)
    __swig_setmethods__["relocsize"] = _ODBG_pyth.t_module_relocsize_set
    __swig_getmethods__["relocsize"] = _ODBG_pyth.t_module_relocsize_get
    if _newclass:relocsize = _swig_property(_ODBG_pyth.t_module_relocsize_get, _ODBG_pyth.t_module_relocsize_set)
    __swig_setmethods__["name"] = _ODBG_pyth.t_module_name_set
    __swig_getmethods__["name"] = _ODBG_pyth.t_module_name_get
    if _newclass:name = _swig_property(_ODBG_pyth.t_module_name_get, _ODBG_pyth.t_module_name_set)
    __swig_setmethods__["path"] = _ODBG_pyth.t_module_path_set
    __swig_getmethods__["path"] = _ODBG_pyth.t_module_path_get
    if _newclass:path = _swig_property(_ODBG_pyth.t_module_path_get, _ODBG_pyth.t_module_path_set)
    __swig_setmethods__["nsect"] = _ODBG_pyth.t_module_nsect_set
    __swig_getmethods__["nsect"] = _ODBG_pyth.t_module_nsect_get
    if _newclass:nsect = _swig_property(_ODBG_pyth.t_module_nsect_get, _ODBG_pyth.t_module_nsect_set)
    __swig_setmethods__["sect"] = _ODBG_pyth.t_module_sect_set
    __swig_getmethods__["sect"] = _ODBG_pyth.t_module_sect_get
    if _newclass:sect = _swig_property(_ODBG_pyth.t_module_sect_get, _ODBG_pyth.t_module_sect_set)
    __swig_setmethods__["headersize"] = _ODBG_pyth.t_module_headersize_set
    __swig_getmethods__["headersize"] = _ODBG_pyth.t_module_headersize_get
    if _newclass:headersize = _swig_property(_ODBG_pyth.t_module_headersize_get, _ODBG_pyth.t_module_headersize_set)
    __swig_setmethods__["fixupbase"] = _ODBG_pyth.t_module_fixupbase_set
    __swig_getmethods__["fixupbase"] = _ODBG_pyth.t_module_fixupbase_get
    if _newclass:fixupbase = _swig_property(_ODBG_pyth.t_module_fixupbase_get, _ODBG_pyth.t_module_fixupbase_set)
    __swig_setmethods__["nfixup"] = _ODBG_pyth.t_module_nfixup_set
    __swig_getmethods__["nfixup"] = _ODBG_pyth.t_module_nfixup_get
    if _newclass:nfixup = _swig_property(_ODBG_pyth.t_module_nfixup_get, _ODBG_pyth.t_module_nfixup_set)
    __swig_setmethods__["fixup"] = _ODBG_pyth.t_module_fixup_set
    __swig_getmethods__["fixup"] = _ODBG_pyth.t_module_fixup_get
    if _newclass:fixup = _swig_property(_ODBG_pyth.t_module_fixup_get, _ODBG_pyth.t_module_fixup_set)
    __swig_setmethods__["codedec"] = _ODBG_pyth.t_module_codedec_set
    __swig_getmethods__["codedec"] = _ODBG_pyth.t_module_codedec_get
    if _newclass:codedec = _swig_property(_ODBG_pyth.t_module_codedec_get, _ODBG_pyth.t_module_codedec_set)
    __swig_setmethods__["codecrc"] = _ODBG_pyth.t_module_codecrc_set
    __swig_getmethods__["codecrc"] = _ODBG_pyth.t_module_codecrc_get
    if _newclass:codecrc = _swig_property(_ODBG_pyth.t_module_codecrc_get, _ODBG_pyth.t_module_codecrc_set)
    __swig_setmethods__["hittrace"] = _ODBG_pyth.t_module_hittrace_set
    __swig_getmethods__["hittrace"] = _ODBG_pyth.t_module_hittrace_get
    if _newclass:hittrace = _swig_property(_ODBG_pyth.t_module_hittrace_get, _ODBG_pyth.t_module_hittrace_set)
    __swig_setmethods__["hittracecopy"] = _ODBG_pyth.t_module_hittracecopy_set
    __swig_getmethods__["hittracecopy"] = _ODBG_pyth.t_module_hittracecopy_get
    if _newclass:hittracecopy = _swig_property(_ODBG_pyth.t_module_hittracecopy_get, _ODBG_pyth.t_module_hittracecopy_set)
    __swig_setmethods__["datadec"] = _ODBG_pyth.t_module_datadec_set
    __swig_getmethods__["datadec"] = _ODBG_pyth.t_module_datadec_get
    if _newclass:datadec = _swig_property(_ODBG_pyth.t_module_datadec_get, _ODBG_pyth.t_module_datadec_set)
    __swig_setmethods__["namelist"] = _ODBG_pyth.t_module_namelist_set
    __swig_getmethods__["namelist"] = _ODBG_pyth.t_module_namelist_get
    if _newclass:namelist = _swig_property(_ODBG_pyth.t_module_namelist_get, _ODBG_pyth.t_module_namelist_set)
    __swig_setmethods__["symvar"] = _ODBG_pyth.t_module_symvar_set
    __swig_getmethods__["symvar"] = _ODBG_pyth.t_module_symvar_get
    if _newclass:symvar = _swig_property(_ODBG_pyth.t_module_symvar_get, _ODBG_pyth.t_module_symvar_set)
    __swig_setmethods__["nsymvar"] = _ODBG_pyth.t_module_nsymvar_set
    __swig_getmethods__["nsymvar"] = _ODBG_pyth.t_module_nsymvar_get
    if _newclass:nsymvar = _swig_property(_ODBG_pyth.t_module_nsymvar_get, _ODBG_pyth.t_module_nsymvar_set)
    __swig_setmethods__["maxsymvar"] = _ODBG_pyth.t_module_maxsymvar_set
    __swig_getmethods__["maxsymvar"] = _ODBG_pyth.t_module_maxsymvar_get
    if _newclass:maxsymvar = _swig_property(_ODBG_pyth.t_module_maxsymvar_get, _ODBG_pyth.t_module_maxsymvar_set)
    __swig_setmethods__["globaltypes"] = _ODBG_pyth.t_module_globaltypes_set
    __swig_getmethods__["globaltypes"] = _ODBG_pyth.t_module_globaltypes_get
    if _newclass:globaltypes = _swig_property(_ODBG_pyth.t_module_globaltypes_get, _ODBG_pyth.t_module_globaltypes_set)
    __swig_setmethods__["mainentry"] = _ODBG_pyth.t_module_mainentry_set
    __swig_getmethods__["mainentry"] = _ODBG_pyth.t_module_mainentry_get
    if _newclass:mainentry = _swig_property(_ODBG_pyth.t_module_mainentry_get, _ODBG_pyth.t_module_mainentry_set)
    __swig_setmethods__["realsfxentry"] = _ODBG_pyth.t_module_realsfxentry_set
    __swig_getmethods__["realsfxentry"] = _ODBG_pyth.t_module_realsfxentry_get
    if _newclass:realsfxentry = _swig_property(_ODBG_pyth.t_module_realsfxentry_get, _ODBG_pyth.t_module_realsfxentry_set)
    __swig_setmethods__["updatenamelist"] = _ODBG_pyth.t_module_updatenamelist_set
    __swig_getmethods__["updatenamelist"] = _ODBG_pyth.t_module_updatenamelist_get
    if _newclass:updatenamelist = _swig_property(_ODBG_pyth.t_module_updatenamelist_get, _ODBG_pyth.t_module_updatenamelist_set)
    __swig_setmethods__["origcodesize"] = _ODBG_pyth.t_module_origcodesize_set
    __swig_getmethods__["origcodesize"] = _ODBG_pyth.t_module_origcodesize_get
    if _newclass:origcodesize = _swig_property(_ODBG_pyth.t_module_origcodesize_get, _ODBG_pyth.t_module_origcodesize_set)
    __swig_setmethods__["sfxbase"] = _ODBG_pyth.t_module_sfxbase_set
    __swig_getmethods__["sfxbase"] = _ODBG_pyth.t_module_sfxbase_get
    if _newclass:sfxbase = _swig_property(_ODBG_pyth.t_module_sfxbase_get, _ODBG_pyth.t_module_sfxbase_set)
    __swig_setmethods__["sfxsize"] = _ODBG_pyth.t_module_sfxsize_set
    __swig_getmethods__["sfxsize"] = _ODBG_pyth.t_module_sfxsize_get
    if _newclass:sfxsize = _swig_property(_ODBG_pyth.t_module_sfxsize_get, _ODBG_pyth.t_module_sfxsize_set)
    __swig_setmethods__["issystemdll"] = _ODBG_pyth.t_module_issystemdll_set
    __swig_getmethods__["issystemdll"] = _ODBG_pyth.t_module_issystemdll_get
    if _newclass:issystemdll = _swig_property(_ODBG_pyth.t_module_issystemdll_get, _ODBG_pyth.t_module_issystemdll_set)
    __swig_setmethods__["processed"] = _ODBG_pyth.t_module_processed_set
    __swig_getmethods__["processed"] = _ODBG_pyth.t_module_processed_get
    if _newclass:processed = _swig_property(_ODBG_pyth.t_module_processed_get, _ODBG_pyth.t_module_processed_set)
    __swig_setmethods__["dbghelpsym"] = _ODBG_pyth.t_module_dbghelpsym_set
    __swig_getmethods__["dbghelpsym"] = _ODBG_pyth.t_module_dbghelpsym_get
    if _newclass:dbghelpsym = _swig_property(_ODBG_pyth.t_module_dbghelpsym_get, _ODBG_pyth.t_module_dbghelpsym_set)
    __swig_setmethods__["version"] = _ODBG_pyth.t_module_version_set
    __swig_getmethods__["version"] = _ODBG_pyth.t_module_version_get
    if _newclass:version = _swig_property(_ODBG_pyth.t_module_version_get, _ODBG_pyth.t_module_version_set)
    __swig_setmethods__["jddata"] = _ODBG_pyth.t_module_jddata_set
    __swig_getmethods__["jddata"] = _ODBG_pyth.t_module_jddata_get
    if _newclass:jddata = _swig_property(_ODBG_pyth.t_module_jddata_get, _ODBG_pyth.t_module_jddata_set)
    __swig_setmethods__["njddata"] = _ODBG_pyth.t_module_njddata_set
    __swig_getmethods__["njddata"] = _ODBG_pyth.t_module_njddata_get
    if _newclass:njddata = _swig_property(_ODBG_pyth.t_module_njddata_get, _ODBG_pyth.t_module_njddata_set)
    __swig_setmethods__["reserved"] = _ODBG_pyth.t_module_reserved_set
    __swig_getmethods__["reserved"] = _ODBG_pyth.t_module_reserved_get
    if _newclass:reserved = _swig_property(_ODBG_pyth.t_module_reserved_get, _ODBG_pyth.t_module_reserved_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_module(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_module
    __del__ = lambda self : None;
t_module_swigregister = _ODBG_pyth.t_module_swigregister
t_module_swigregister(t_module)

class t_dump(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_dump, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_dump, name)
    __repr__ = _swig_repr
    __swig_setmethods__["table"] = _ODBG_pyth.t_dump_table_set
    __swig_getmethods__["table"] = _ODBG_pyth.t_dump_table_get
    if _newclass:table = _swig_property(_ODBG_pyth.t_dump_table_get, _ODBG_pyth.t_dump_table_set)
    __swig_setmethods__["dimmed"] = _ODBG_pyth.t_dump_dimmed_set
    __swig_getmethods__["dimmed"] = _ODBG_pyth.t_dump_dimmed_get
    if _newclass:dimmed = _swig_property(_ODBG_pyth.t_dump_dimmed_get, _ODBG_pyth.t_dump_dimmed_set)
    __swig_setmethods__["threadid"] = _ODBG_pyth.t_dump_threadid_set
    __swig_getmethods__["threadid"] = _ODBG_pyth.t_dump_threadid_get
    if _newclass:threadid = _swig_property(_ODBG_pyth.t_dump_threadid_get, _ODBG_pyth.t_dump_threadid_set)
    __swig_setmethods__["dumptype"] = _ODBG_pyth.t_dump_dumptype_set
    __swig_getmethods__["dumptype"] = _ODBG_pyth.t_dump_dumptype_get
    if _newclass:dumptype = _swig_property(_ODBG_pyth.t_dump_dumptype_get, _ODBG_pyth.t_dump_dumptype_set)
    __swig_setmethods__["specdump"] = _ODBG_pyth.t_dump_specdump_set
    __swig_getmethods__["specdump"] = _ODBG_pyth.t_dump_specdump_get
    if _newclass:specdump = _swig_property(_ODBG_pyth.t_dump_specdump_get, _ODBG_pyth.t_dump_specdump_set)
    __swig_setmethods__["menutype"] = _ODBG_pyth.t_dump_menutype_set
    __swig_getmethods__["menutype"] = _ODBG_pyth.t_dump_menutype_get
    if _newclass:menutype = _swig_property(_ODBG_pyth.t_dump_menutype_get, _ODBG_pyth.t_dump_menutype_set)
    __swig_setmethods__["itemwidth"] = _ODBG_pyth.t_dump_itemwidth_set
    __swig_getmethods__["itemwidth"] = _ODBG_pyth.t_dump_itemwidth_get
    if _newclass:itemwidth = _swig_property(_ODBG_pyth.t_dump_itemwidth_get, _ODBG_pyth.t_dump_itemwidth_set)
    __swig_setmethods__["showstackframes"] = _ODBG_pyth.t_dump_showstackframes_set
    __swig_getmethods__["showstackframes"] = _ODBG_pyth.t_dump_showstackframes_get
    if _newclass:showstackframes = _swig_property(_ODBG_pyth.t_dump_showstackframes_get, _ODBG_pyth.t_dump_showstackframes_set)
    __swig_setmethods__["showstacklocals"] = _ODBG_pyth.t_dump_showstacklocals_set
    __swig_getmethods__["showstacklocals"] = _ODBG_pyth.t_dump_showstacklocals_get
    if _newclass:showstacklocals = _swig_property(_ODBG_pyth.t_dump_showstacklocals_get, _ODBG_pyth.t_dump_showstacklocals_set)
    __swig_setmethods__["commentmode"] = _ODBG_pyth.t_dump_commentmode_set
    __swig_getmethods__["commentmode"] = _ODBG_pyth.t_dump_commentmode_get
    if _newclass:commentmode = _swig_property(_ODBG_pyth.t_dump_commentmode_get, _ODBG_pyth.t_dump_commentmode_set)
    __swig_setmethods__["filename"] = _ODBG_pyth.t_dump_filename_set
    __swig_getmethods__["filename"] = _ODBG_pyth.t_dump_filename_get
    if _newclass:filename = _swig_property(_ODBG_pyth.t_dump_filename_get, _ODBG_pyth.t_dump_filename_set)
    __swig_setmethods__["base"] = _ODBG_pyth.t_dump_base_set
    __swig_getmethods__["base"] = _ODBG_pyth.t_dump_base_get
    if _newclass:base = _swig_property(_ODBG_pyth.t_dump_base_get, _ODBG_pyth.t_dump_base_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_dump_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_dump_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_dump_size_get, _ODBG_pyth.t_dump_size_set)
    __swig_setmethods__["addr"] = _ODBG_pyth.t_dump_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_dump_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_dump_addr_get, _ODBG_pyth.t_dump_addr_set)
    __swig_setmethods__["lastaddr"] = _ODBG_pyth.t_dump_lastaddr_set
    __swig_getmethods__["lastaddr"] = _ODBG_pyth.t_dump_lastaddr_get
    if _newclass:lastaddr = _swig_property(_ODBG_pyth.t_dump_lastaddr_get, _ODBG_pyth.t_dump_lastaddr_set)
    __swig_setmethods__["sel0"] = _ODBG_pyth.t_dump_sel0_set
    __swig_getmethods__["sel0"] = _ODBG_pyth.t_dump_sel0_get
    if _newclass:sel0 = _swig_property(_ODBG_pyth.t_dump_sel0_get, _ODBG_pyth.t_dump_sel0_set)
    __swig_setmethods__["sel1"] = _ODBG_pyth.t_dump_sel1_set
    __swig_getmethods__["sel1"] = _ODBG_pyth.t_dump_sel1_get
    if _newclass:sel1 = _swig_property(_ODBG_pyth.t_dump_sel1_get, _ODBG_pyth.t_dump_sel1_set)
    __swig_setmethods__["startsel"] = _ODBG_pyth.t_dump_startsel_set
    __swig_getmethods__["startsel"] = _ODBG_pyth.t_dump_startsel_get
    if _newclass:startsel = _swig_property(_ODBG_pyth.t_dump_startsel_get, _ODBG_pyth.t_dump_startsel_set)
    __swig_setmethods__["captured"] = _ODBG_pyth.t_dump_captured_set
    __swig_getmethods__["captured"] = _ODBG_pyth.t_dump_captured_get
    if _newclass:captured = _swig_property(_ODBG_pyth.t_dump_captured_get, _ODBG_pyth.t_dump_captured_set)
    __swig_setmethods__["reladdr"] = _ODBG_pyth.t_dump_reladdr_set
    __swig_getmethods__["reladdr"] = _ODBG_pyth.t_dump_reladdr_get
    if _newclass:reladdr = _swig_property(_ODBG_pyth.t_dump_reladdr_get, _ODBG_pyth.t_dump_reladdr_set)
    __swig_setmethods__["relname"] = _ODBG_pyth.t_dump_relname_set
    __swig_getmethods__["relname"] = _ODBG_pyth.t_dump_relname_get
    if _newclass:relname = _swig_property(_ODBG_pyth.t_dump_relname_get, _ODBG_pyth.t_dump_relname_set)
    __swig_setmethods__["filecopy"] = _ODBG_pyth.t_dump_filecopy_set
    __swig_getmethods__["filecopy"] = _ODBG_pyth.t_dump_filecopy_get
    if _newclass:filecopy = _swig_property(_ODBG_pyth.t_dump_filecopy_get, _ODBG_pyth.t_dump_filecopy_set)
    __swig_setmethods__["backup"] = _ODBG_pyth.t_dump_backup_set
    __swig_getmethods__["backup"] = _ODBG_pyth.t_dump_backup_get
    if _newclass:backup = _swig_property(_ODBG_pyth.t_dump_backup_get, _ODBG_pyth.t_dump_backup_set)
    __swig_setmethods__["runtraceoffset"] = _ODBG_pyth.t_dump_runtraceoffset_set
    __swig_getmethods__["runtraceoffset"] = _ODBG_pyth.t_dump_runtraceoffset_get
    if _newclass:runtraceoffset = _swig_property(_ODBG_pyth.t_dump_runtraceoffset_get, _ODBG_pyth.t_dump_runtraceoffset_set)
    __swig_setmethods__["reserved"] = _ODBG_pyth.t_dump_reserved_set
    __swig_getmethods__["reserved"] = _ODBG_pyth.t_dump_reserved_get
    if _newclass:reserved = _swig_property(_ODBG_pyth.t_dump_reserved_get, _ODBG_pyth.t_dump_reserved_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_dump(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_dump
    __del__ = lambda self : None;
t_dump_swigregister = _ODBG_pyth.t_dump_swigregister
t_dump_swigregister(t_dump)

class t_ref(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_ref, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_ref, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_ref_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_ref_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_ref_addr_get, _ODBG_pyth.t_ref_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_ref_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_ref_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_ref_size_get, _ODBG_pyth.t_ref_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_ref_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_ref_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_ref_type_get, _ODBG_pyth.t_ref_type_set)
    __swig_setmethods__["dest"] = _ODBG_pyth.t_ref_dest_set
    __swig_getmethods__["dest"] = _ODBG_pyth.t_ref_dest_get
    if _newclass:dest = _swig_property(_ODBG_pyth.t_ref_dest_get, _ODBG_pyth.t_ref_dest_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_ref(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_ref
    __del__ = lambda self : None;
t_ref_swigregister = _ODBG_pyth.t_ref_swigregister
t_ref_swigregister(t_ref)

class t_bpoint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_bpoint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_bpoint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_bpoint_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_bpoint_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_bpoint_addr_get, _ODBG_pyth.t_bpoint_addr_set)
    __swig_setmethods__["dummy"] = _ODBG_pyth.t_bpoint_dummy_set
    __swig_getmethods__["dummy"] = _ODBG_pyth.t_bpoint_dummy_get
    if _newclass:dummy = _swig_property(_ODBG_pyth.t_bpoint_dummy_get, _ODBG_pyth.t_bpoint_dummy_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_bpoint_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_bpoint_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_bpoint_type_get, _ODBG_pyth.t_bpoint_type_set)
    __swig_setmethods__["cmd"] = _ODBG_pyth.t_bpoint_cmd_set
    __swig_getmethods__["cmd"] = _ODBG_pyth.t_bpoint_cmd_get
    if _newclass:cmd = _swig_property(_ODBG_pyth.t_bpoint_cmd_get, _ODBG_pyth.t_bpoint_cmd_set)
    __swig_setmethods__["passcount"] = _ODBG_pyth.t_bpoint_passcount_set
    __swig_getmethods__["passcount"] = _ODBG_pyth.t_bpoint_passcount_get
    if _newclass:passcount = _swig_property(_ODBG_pyth.t_bpoint_passcount_get, _ODBG_pyth.t_bpoint_passcount_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_bpoint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_bpoint
    __del__ = lambda self : None;
t_bpoint_swigregister = _ODBG_pyth.t_bpoint_swigregister
t_bpoint_swigregister(t_bpoint)

class t_hardbpoint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_hardbpoint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_hardbpoint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_hardbpoint_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_hardbpoint_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_hardbpoint_addr_get, _ODBG_pyth.t_hardbpoint_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_hardbpoint_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_hardbpoint_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_hardbpoint_size_get, _ODBG_pyth.t_hardbpoint_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_hardbpoint_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_hardbpoint_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_hardbpoint_type_get, _ODBG_pyth.t_hardbpoint_type_set)
    __swig_setmethods__["reserved"] = _ODBG_pyth.t_hardbpoint_reserved_set
    __swig_getmethods__["reserved"] = _ODBG_pyth.t_hardbpoint_reserved_get
    if _newclass:reserved = _swig_property(_ODBG_pyth.t_hardbpoint_reserved_get, _ODBG_pyth.t_hardbpoint_reserved_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_hardbpoint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_hardbpoint
    __del__ = lambda self : None;
t_hardbpoint_swigregister = _ODBG_pyth.t_hardbpoint_swigregister
t_hardbpoint_swigregister(t_hardbpoint)

class t_inject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_inject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_inject, name)
    __repr__ = _swig_repr
    __swig_setmethods__["codesize"] = _ODBG_pyth.t_inject_codesize_set
    __swig_getmethods__["codesize"] = _ODBG_pyth.t_inject_codesize_get
    if _newclass:codesize = _swig_property(_ODBG_pyth.t_inject_codesize_get, _ODBG_pyth.t_inject_codesize_set)
    __swig_setmethods__["code"] = _ODBG_pyth.t_inject_code_set
    __swig_getmethods__["code"] = _ODBG_pyth.t_inject_code_get
    if _newclass:code = _swig_property(_ODBG_pyth.t_inject_code_get, _ODBG_pyth.t_inject_code_set)
    __swig_setmethods__["stacksize"] = _ODBG_pyth.t_inject_stacksize_set
    __swig_getmethods__["stacksize"] = _ODBG_pyth.t_inject_stacksize_get
    if _newclass:stacksize = _swig_property(_ODBG_pyth.t_inject_stacksize_get, _ODBG_pyth.t_inject_stacksize_set)
    __swig_setmethods__["datatype"] = _ODBG_pyth.t_inject_datatype_set
    __swig_getmethods__["datatype"] = _ODBG_pyth.t_inject_datatype_get
    if _newclass:datatype = _swig_property(_ODBG_pyth.t_inject_datatype_get, _ODBG_pyth.t_inject_datatype_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_inject(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_inject
    __del__ = lambda self : None;
t_inject_swigregister = _ODBG_pyth.t_inject_swigregister
t_inject_swigregister(t_inject)

class t_sourceline(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_sourceline, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_sourceline, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_sourceline_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_sourceline_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_sourceline_addr_get, _ODBG_pyth.t_sourceline_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_sourceline_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_sourceline_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_sourceline_size_get, _ODBG_pyth.t_sourceline_size_set)
    __swig_setmethods__["srcname"] = _ODBG_pyth.t_sourceline_srcname_set
    __swig_getmethods__["srcname"] = _ODBG_pyth.t_sourceline_srcname_get
    if _newclass:srcname = _swig_property(_ODBG_pyth.t_sourceline_srcname_get, _ODBG_pyth.t_sourceline_srcname_set)
    __swig_setmethods__["line"] = _ODBG_pyth.t_sourceline_line_set
    __swig_getmethods__["line"] = _ODBG_pyth.t_sourceline_line_get
    if _newclass:line = _swig_property(_ODBG_pyth.t_sourceline_line_get, _ODBG_pyth.t_sourceline_line_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_sourceline(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_sourceline
    __del__ = lambda self : None;
t_sourceline_swigregister = _ODBG_pyth.t_sourceline_swigregister
t_sourceline_swigregister(t_sourceline)

class t_window(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_window, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_window, name)
    __repr__ = _swig_repr
    __swig_setmethods__["hwnd"] = _ODBG_pyth.t_window_hwnd_set
    __swig_getmethods__["hwnd"] = _ODBG_pyth.t_window_hwnd_get
    if _newclass:hwnd = _swig_property(_ODBG_pyth.t_window_hwnd_get, _ODBG_pyth.t_window_hwnd_set)
    __swig_setmethods__["dummy"] = _ODBG_pyth.t_window_dummy_set
    __swig_getmethods__["dummy"] = _ODBG_pyth.t_window_dummy_get
    if _newclass:dummy = _swig_property(_ODBG_pyth.t_window_dummy_get, _ODBG_pyth.t_window_dummy_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_window_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_window_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_window_type_get, _ODBG_pyth.t_window_type_set)
    __swig_setmethods__["parenthw"] = _ODBG_pyth.t_window_parenthw_set
    __swig_getmethods__["parenthw"] = _ODBG_pyth.t_window_parenthw_get
    if _newclass:parenthw = _swig_property(_ODBG_pyth.t_window_parenthw_get, _ODBG_pyth.t_window_parenthw_set)
    __swig_setmethods__["winproc"] = _ODBG_pyth.t_window_winproc_set
    __swig_getmethods__["winproc"] = _ODBG_pyth.t_window_winproc_get
    if _newclass:winproc = _swig_property(_ODBG_pyth.t_window_winproc_get, _ODBG_pyth.t_window_winproc_set)
    __swig_setmethods__["threadid"] = _ODBG_pyth.t_window_threadid_set
    __swig_getmethods__["threadid"] = _ODBG_pyth.t_window_threadid_get
    if _newclass:threadid = _swig_property(_ODBG_pyth.t_window_threadid_get, _ODBG_pyth.t_window_threadid_set)
    __swig_setmethods__["exstyle"] = _ODBG_pyth.t_window_exstyle_set
    __swig_getmethods__["exstyle"] = _ODBG_pyth.t_window_exstyle_get
    if _newclass:exstyle = _swig_property(_ODBG_pyth.t_window_exstyle_get, _ODBG_pyth.t_window_exstyle_set)
    __swig_setmethods__["style"] = _ODBG_pyth.t_window_style_set
    __swig_getmethods__["style"] = _ODBG_pyth.t_window_style_get
    if _newclass:style = _swig_property(_ODBG_pyth.t_window_style_get, _ODBG_pyth.t_window_style_set)
    __swig_setmethods__["id"] = _ODBG_pyth.t_window_id_set
    __swig_getmethods__["id"] = _ODBG_pyth.t_window_id_get
    if _newclass:id = _swig_property(_ODBG_pyth.t_window_id_get, _ODBG_pyth.t_window_id_set)
    __swig_setmethods__["classproc"] = _ODBG_pyth.t_window_classproc_set
    __swig_getmethods__["classproc"] = _ODBG_pyth.t_window_classproc_get
    if _newclass:classproc = _swig_property(_ODBG_pyth.t_window_classproc_get, _ODBG_pyth.t_window_classproc_set)
    __swig_setmethods__["child"] = _ODBG_pyth.t_window_child_set
    __swig_getmethods__["child"] = _ODBG_pyth.t_window_child_get
    if _newclass:child = _swig_property(_ODBG_pyth.t_window_child_get, _ODBG_pyth.t_window_child_set)
    __swig_setmethods__["level"] = _ODBG_pyth.t_window_level_set
    __swig_getmethods__["level"] = _ODBG_pyth.t_window_level_get
    if _newclass:level = _swig_property(_ODBG_pyth.t_window_level_get, _ODBG_pyth.t_window_level_set)
    __swig_setmethods__["sibling"] = _ODBG_pyth.t_window_sibling_set
    __swig_getmethods__["sibling"] = _ODBG_pyth.t_window_sibling_get
    if _newclass:sibling = _swig_property(_ODBG_pyth.t_window_sibling_get, _ODBG_pyth.t_window_sibling_set)
    __swig_setmethods__["byparent"] = _ODBG_pyth.t_window_byparent_set
    __swig_getmethods__["byparent"] = _ODBG_pyth.t_window_byparent_get
    if _newclass:byparent = _swig_property(_ODBG_pyth.t_window_byparent_get, _ODBG_pyth.t_window_byparent_set)
    __swig_setmethods__["title"] = _ODBG_pyth.t_window_title_set
    __swig_getmethods__["title"] = _ODBG_pyth.t_window_title_get
    if _newclass:title = _swig_property(_ODBG_pyth.t_window_title_get, _ODBG_pyth.t_window_title_set)
    __swig_setmethods__["classname"] = _ODBG_pyth.t_window_classname_set
    __swig_getmethods__["classname"] = _ODBG_pyth.t_window_classname_get
    if _newclass:classname = _swig_property(_ODBG_pyth.t_window_classname_get, _ODBG_pyth.t_window_classname_set)
    __swig_setmethods__["tree"] = _ODBG_pyth.t_window_tree_set
    __swig_getmethods__["tree"] = _ODBG_pyth.t_window_tree_get
    if _newclass:tree = _swig_property(_ODBG_pyth.t_window_tree_get, _ODBG_pyth.t_window_tree_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_window(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_window
    __del__ = lambda self : None;
t_window_swigregister = _ODBG_pyth.t_window_swigregister
t_window_swigregister(t_window)

class t_patch(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t_patch, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t_patch, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _ODBG_pyth.t_patch_addr_set
    __swig_getmethods__["addr"] = _ODBG_pyth.t_patch_addr_get
    if _newclass:addr = _swig_property(_ODBG_pyth.t_patch_addr_get, _ODBG_pyth.t_patch_addr_set)
    __swig_setmethods__["size"] = _ODBG_pyth.t_patch_size_set
    __swig_getmethods__["size"] = _ODBG_pyth.t_patch_size_get
    if _newclass:size = _swig_property(_ODBG_pyth.t_patch_size_get, _ODBG_pyth.t_patch_size_set)
    __swig_setmethods__["type"] = _ODBG_pyth.t_patch_type_set
    __swig_getmethods__["type"] = _ODBG_pyth.t_patch_type_get
    if _newclass:type = _swig_property(_ODBG_pyth.t_patch_type_get, _ODBG_pyth.t_patch_type_set)
    __swig_setmethods__["orig"] = _ODBG_pyth.t_patch_orig_set
    __swig_getmethods__["orig"] = _ODBG_pyth.t_patch_orig_get
    if _newclass:orig = _swig_property(_ODBG_pyth.t_patch_orig_get, _ODBG_pyth.t_patch_orig_set)
    __swig_setmethods__["mod"] = _ODBG_pyth.t_patch_mod_set
    __swig_getmethods__["mod"] = _ODBG_pyth.t_patch_mod_get
    if _newclass:mod = _swig_property(_ODBG_pyth.t_patch_mod_get, _ODBG_pyth.t_patch_mod_set)
    def __init__(self, *args): 
        this = _ODBG_pyth.new_t_patch(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ODBG_pyth.delete_t_patch
    __del__ = lambda self : None;
t_patch_swigregister = _ODBG_pyth.t_patch_swigregister
t_patch_swigregister(t_patch)

GetReg = _ODBG_pyth.GetReg
Getfuncaddress = _ODBG_pyth.Getfuncaddress
Addtolist = _ODBG_pyth.Addtolist
Updatelist = _ODBG_pyth.Updatelist
Error = _ODBG_pyth.Error
Message = _ODBG_pyth.Message
Infoline = _ODBG_pyth.Infoline
Progress = _ODBG_pyth.Progress
Flash = _ODBG_pyth.Flash
Get_asmfindmodel = _ODBG_pyth.Get_asmfindmodel
Decodeaddress = _ODBG_pyth.Decodeaddress
Decoderelativeoffset = _ODBG_pyth.Decoderelativeoffset
Decodecharacter = _ODBG_pyth.Decodecharacter
Printfloat4 = _ODBG_pyth.Printfloat4
Printfloat8 = _ODBG_pyth.Printfloat8
Printfloat10 = _ODBG_pyth.Printfloat10
Print3dnow = _ODBG_pyth.Print3dnow
Printsse = _ODBG_pyth.Printsse
Followcall = _ODBG_pyth.Followcall
IstextA = _ODBG_pyth.IstextA
Stringtotext = _ODBG_pyth.Stringtotext
Get_long = _ODBG_pyth.Get_long
Attach_by_name = _ODBG_pyth.Attach_by_name
Getall_modules = _ODBG_pyth.Getall_modules
Getall_blocks = _ODBG_pyth.Getall_blocks
Getnumofblocks = _ODBG_pyth.Getnumofblocks
Getnumofmods = _ODBG_pyth.Getnumofmods
Getlong = _ODBG_pyth.Getlong
Getlongxy = _ODBG_pyth.Getlongxy
Getregxy = _ODBG_pyth.Getregxy
Getline = _ODBG_pyth.Getline
Getlinexy = _ODBG_pyth.Getlinexy
Getfloat10 = _ODBG_pyth.Getfloat10
Getfloat10xy = _ODBG_pyth.Getfloat10xy
Getfloat = _ODBG_pyth.Getfloat
Getfloatxy = _ODBG_pyth.Getfloatxy
Getasmfindmodel = _ODBG_pyth.Getasmfindmodel
Getasmfindmodelxy = _ODBG_pyth.Getasmfindmodelxy
Gettext = _ODBG_pyth.Gettext
Gettextxy = _ODBG_pyth.Gettextxy
Gethexstring = _ODBG_pyth.Gethexstring
Gethexstringxy = _ODBG_pyth.Gethexstringxy
Getmmx = _ODBG_pyth.Getmmx
Getmmxxy = _ODBG_pyth.Getmmxxy
Get3dnow = _ODBG_pyth.Get3dnow
Get3dnowxy = _ODBG_pyth.Get3dnowxy
Browsefilename = _ODBG_pyth.Browsefilename
OpenEXEfile = _ODBG_pyth.OpenEXEfile
Attachtoactiveprocess = _ODBG_pyth.Attachtoactiveprocess
Animate = _ODBG_pyth.Animate
find_instruction_in = _ODBG_pyth.find_instruction_in
find_instruction_back = _ODBG_pyth.find_instruction_back
find_instruction_in_op = _ODBG_pyth.find_instruction_in_op
find_instruction_back_op = _ODBG_pyth.find_instruction_back_op
Dis_asm = _ODBG_pyth.Dis_asm
Createsorteddata = _ODBG_pyth.Createsorteddata
Destroysorteddata = _ODBG_pyth.Destroysorteddata
Addsorteddata = _ODBG_pyth.Addsorteddata
Deletesorteddata = _ODBG_pyth.Deletesorteddata
Deletesorteddatarange = _ODBG_pyth.Deletesorteddatarange
Deletenonconfirmedsorteddata = _ODBG_pyth.Deletenonconfirmedsorteddata
Findsorteddata = _ODBG_pyth.Findsorteddata
Findsorteddatarange = _ODBG_pyth.Findsorteddatarange
Findsorteddataindex = _ODBG_pyth.Findsorteddataindex
Sortsorteddata = _ODBG_pyth.Sortsorteddata
Getsortedbyselection = _ODBG_pyth.Getsortedbyselection
Defaultbar = _ODBG_pyth.Defaultbar
Tablefunction = _ODBG_pyth.Tablefunction
Gettableselectionxy = _ODBG_pyth.Gettableselectionxy
Selectandscroll = _ODBG_pyth.Selectandscroll
Insertname = _ODBG_pyth.Insertname
Quickinsertname = _ODBG_pyth.Quickinsertname
Mergequicknames = _ODBG_pyth.Mergequicknames
Discardquicknames = _ODBG_pyth.Discardquicknames
Findname = _ODBG_pyth.Findname
Decodename = _ODBG_pyth.Decodename
Findnextname = _ODBG_pyth.Findnextname
Findlabel = _ODBG_pyth.Findlabel
Deletenamerange = _ODBG_pyth.Deletenamerange
Findlabelbyname = _ODBG_pyth.Findlabelbyname
Findimportbyname = _ODBG_pyth.Findimportbyname
Demanglename = _ODBG_pyth.Demanglename
Findsymbolicname = _ODBG_pyth.Findsymbolicname
vmWare = _ODBG_pyth.vmWare
Disasm = _ODBG_pyth.Disasm
Disassembleback = _ODBG_pyth.Disassembleback
Disassembleforward = _ODBG_pyth.Disassembleforward
Issuspicious = _ODBG_pyth.Issuspicious
Isfilling = _ODBG_pyth.Isfilling
Assemble = _ODBG_pyth.Assemble
Checkcondition = _ODBG_pyth.Checkcondition
Expression = _ODBG_pyth.Expression
Createthreadwindow = _ODBG_pyth.Createthreadwindow
Findthread = _ODBG_pyth.Findthread
Decodethreadname = _ODBG_pyth.Decodethreadname
Getcputhreadid = _ODBG_pyth.Getcputhreadid
Runsinglethread = _ODBG_pyth.Runsinglethread
Restoreallthreads = _ODBG_pyth.Restoreallthreads
read_mem = _ODBG_pyth.read_mem
free_buf = _ODBG_pyth.free_buf
create_buf = _ODBG_pyth.create_buf
dump_mem = _ODBG_pyth.dump_mem
Listmemory = _ODBG_pyth.Listmemory
Findmemory = _ODBG_pyth.Findmemory
Guardmemory = _ODBG_pyth.Guardmemory
Havecopyofmemory = _ODBG_pyth.Havecopyofmemory
Readmemory = _ODBG_pyth.Readmemory
Writememory = _ODBG_pyth.Writememory
Readcommand = _ODBG_pyth.Readcommand
Findmodule = _ODBG_pyth.Findmodule
Findfixup = _ODBG_pyth.Findfixup
Finddecode = _ODBG_pyth.Finddecode
Findfileoffset = _ODBG_pyth.Findfileoffset
Decoderange = _ODBG_pyth.Decoderange
Analysecode = _ODBG_pyth.Analysecode
Registerotclass = _ODBG_pyth.Registerotclass
Newtablewindow = _ODBG_pyth.Newtablewindow
Quicktablewindow = _ODBG_pyth.Quicktablewindow
Createdumpwindow = _ODBG_pyth.Createdumpwindow
Setdumptype = _ODBG_pyth.Setdumptype
Dumpbackup = _ODBG_pyth.Dumpbackup
Broadcast = _ODBG_pyth.Broadcast
Compress = _ODBG_pyth.Compress
Getoriginaldatasize = _ODBG_pyth.Getoriginaldatasize
Decompress = _ODBG_pyth.Decompress
Calculatecrc = _ODBG_pyth.Calculatecrc
Findreferences = _ODBG_pyth.Findreferences
Findstrings = _ODBG_pyth.Findstrings
Findalldllcalls = _ODBG_pyth.Findalldllcalls
Findallcommands = _ODBG_pyth.Findallcommands
Findallsequences = _ODBG_pyth.Findallsequences
Walkreference = _ODBG_pyth.Walkreference
Walkreferenceex = _ODBG_pyth.Walkreferenceex
Setbreakpoint = _ODBG_pyth.Setbreakpoint
Setbreakpointext = _ODBG_pyth.Setbreakpointext
Manualbreakpoint = _ODBG_pyth.Manualbreakpoint
Deletebreakpoints = _ODBG_pyth.Deletebreakpoints
Getbreakpointtype = _ODBG_pyth.Getbreakpointtype
Getbreakpointtypecount = _ODBG_pyth.Getbreakpointtypecount
Getnextbreakpoint = _ODBG_pyth.Getnextbreakpoint
Tempbreakpoint = _ODBG_pyth.Tempbreakpoint
Hardbreakpoints = _ODBG_pyth.Hardbreakpoints
Sethardwarebreakpoint = _ODBG_pyth.Sethardwarebreakpoint
Deletehardwarebreakpoint = _ODBG_pyth.Deletehardwarebreakpoint
Deletehardwarebreakbyaddr = _ODBG_pyth.Deletehardwarebreakbyaddr
Setmembreakpoint = _ODBG_pyth.Setmembreakpoint
Findhittrace = _ODBG_pyth.Findhittrace
Modifyhittrace = _ODBG_pyth.Modifyhittrace
Isretaddr = _ODBG_pyth.Isretaddr
Creatertracewindow = _ODBG_pyth.Creatertracewindow
Settracecondition = _ODBG_pyth.Settracecondition
Settracecount = _ODBG_pyth.Settracecount
Settracepauseoncommands = _ODBG_pyth.Settracepauseoncommands
Startruntrace = _ODBG_pyth.Startruntrace
Deleteruntrace = _ODBG_pyth.Deleteruntrace
Runtracesize = _ODBG_pyth.Runtracesize
Findprevruntraceip = _ODBG_pyth.Findprevruntraceip
Findnextruntraceip = _ODBG_pyth.Findnextruntraceip
Getruntraceregisters = _ODBG_pyth.Getruntraceregisters
Getruntraceprofile = _ODBG_pyth.Getruntraceprofile
Scrollruntracewindow = _ODBG_pyth.Scrollruntracewindow
Createprofilewindow = _ODBG_pyth.Createprofilewindow
Injectcode = _ODBG_pyth.Injectcode
Setcpu = _ODBG_pyth.Setcpu
Setdisasm = _ODBG_pyth.Setdisasm
Redrawdisassembler = _ODBG_pyth.Redrawdisassembler
Getdisassemblerrange = _ODBG_pyth.Getdisassemblerrange
Findprocbegin = _ODBG_pyth.Findprocbegin
Findprocend = _ODBG_pyth.Findprocend
Findprevproc = _ODBG_pyth.Findprevproc
Findnextproc = _ODBG_pyth.Findnextproc
Getproclimits = _ODBG_pyth.Getproclimits
Sendshortcut = _ODBG_pyth.Sendshortcut
Getstatus = _ODBG_pyth.Getstatus
Go = _ODBG_pyth.Go
Suspendprocess = _ODBG_pyth.Suspendprocess
Showsourcefromaddress = _ODBG_pyth.Showsourcefromaddress
Getresourcestring = _ODBG_pyth.Getresourcestring
Getlinefromaddress = _ODBG_pyth.Getlinefromaddress
Getaddressfromline = _ODBG_pyth.Getaddressfromline
Getsourcefilelimits = _ODBG_pyth.Getsourcefilelimits
Decodefullvarname = _ODBG_pyth.Decodefullvarname
Getbprelname = _ODBG_pyth.Getbprelname
Createwatchwindow = _ODBG_pyth.Createwatchwindow
Deletewatch = _ODBG_pyth.Deletewatch
Insertwatch = _ODBG_pyth.Insertwatch
Getwatch = _ODBG_pyth.Getwatch
Createwinwindow = _ODBG_pyth.Createwinwindow
Createpatchwindow = _ODBG_pyth.Createpatchwindow
Registerpluginclass = _ODBG_pyth.Registerpluginclass
Unregisterpluginclass = _ODBG_pyth.Unregisterpluginclass
Pluginwriteinttoini = _ODBG_pyth.Pluginwriteinttoini
Pluginwritestringtoini = _ODBG_pyth.Pluginwritestringtoini
Pluginreadintfromini = _ODBG_pyth.Pluginreadintfromini
Pluginreadstringfromini = _ODBG_pyth.Pluginreadstringfromini
Pluginsaverecord = _ODBG_pyth.Pluginsaverecord
Plugingetvalue = _ODBG_pyth.Plugingetvalue


